

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 11 15:55:55 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 1.45
    68                           ; Generated 16/11/2017 GMT
    69                           ; 
    70                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC16F1619 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101  0000                     	;# 
   102  0001                     	;# 
   103  0002                     	;# 
   104  0003                     	;# 
   105  0004                     	;# 
   106  0005                     	;# 
   107  0006                     	;# 
   108  0007                     	;# 
   109  0008                     	;# 
   110  0009                     	;# 
   111  000A                     	;# 
   112  000B                     	;# 
   113  000C                     	;# 
   114  000D                     	;# 
   115  000E                     	;# 
   116  0010                     	;# 
   117  0011                     	;# 
   118  0012                     	;# 
   119  0013                     	;# 
   120  0014                     	;# 
   121  0015                     	;# 
   122  0016                     	;# 
   123  0016                     	;# 
   124  0017                     	;# 
   125  0018                     	;# 
   126  0019                     	;# 
   127  001A                     	;# 
   128  001A                     	;# 
   129  001B                     	;# 
   130  001B                     	;# 
   131  001C                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008D                     	;# 
   137  008E                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0096                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009B                     	;# 
   150  009C                     	;# 
   151  009D                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  0111                     	;# 
   158  0112                     	;# 
   159  0113                     	;# 
   160  0114                     	;# 
   161  0115                     	;# 
   162  0116                     	;# 
   163  0117                     	;# 
   164  0118                     	;# 
   165  0119                     	;# 
   166  011C                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  0191                     	;# 
   171  0191                     	;# 
   172  0192                     	;# 
   173  0193                     	;# 
   174  0193                     	;# 
   175  0194                     	;# 
   176  0195                     	;# 
   177  0196                     	;# 
   178  0197                     	;# 
   179  0199                     	;# 
   180  0199                     	;# 
   181  0199                     	;# 
   182  019A                     	;# 
   183  019A                     	;# 
   184  019A                     	;# 
   185  019B                     	;# 
   186  019B                     	;# 
   187  019B                     	;# 
   188  019B                     	;# 
   189  019B                     	;# 
   190  019C                     	;# 
   191  019C                     	;# 
   192  019C                     	;# 
   193  019D                     	;# 
   194  019D                     	;# 
   195  019D                     	;# 
   196  019E                     	;# 
   197  019E                     	;# 
   198  019E                     	;# 
   199  019F                     	;# 
   200  019F                     	;# 
   201  019F                     	;# 
   202  019F                     	;# 
   203  019F                     	;# 
   204  020C                     	;# 
   205  020D                     	;# 
   206  020E                     	;# 
   207  0211                     	;# 
   208  0211                     	;# 
   209  0212                     	;# 
   210  0212                     	;# 
   211  0213                     	;# 
   212  0213                     	;# 
   213  0214                     	;# 
   214  0214                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0215                     	;# 
   219  0216                     	;# 
   220  0216                     	;# 
   221  0217                     	;# 
   222  0217                     	;# 
   223  028C                     	;# 
   224  028D                     	;# 
   225  028E                     	;# 
   226  0291                     	;# 
   227  0291                     	;# 
   228  0292                     	;# 
   229  0293                     	;# 
   230  0294                     	;# 
   231  0298                     	;# 
   232  0298                     	;# 
   233  0299                     	;# 
   234  029A                     	;# 
   235  029B                     	;# 
   236  029E                     	;# 
   237  030C                     	;# 
   238  030D                     	;# 
   239  030E                     	;# 
   240  038C                     	;# 
   241  038D                     	;# 
   242  038E                     	;# 
   243  0391                     	;# 
   244  0392                     	;# 
   245  0393                     	;# 
   246  0394                     	;# 
   247  0395                     	;# 
   248  0396                     	;# 
   249  0397                     	;# 
   250  0398                     	;# 
   251  0399                     	;# 
   252  040E                     	;# 
   253  0413                     	;# 
   254  0413                     	;# 
   255  0414                     	;# 
   256  0414                     	;# 
   257  0415                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  0418                     	;# 
   261  041A                     	;# 
   262  041A                     	;# 
   263  041B                     	;# 
   264  041B                     	;# 
   265  041C                     	;# 
   266  041D                     	;# 
   267  041E                     	;# 
   268  041F                     	;# 
   269  0493                     	;# 
   270  0494                     	;# 
   271  0495                     	;# 
   272  0496                     	;# 
   273  049A                     	;# 
   274  049B                     	;# 
   275  049C                     	;# 
   276  049D                     	;# 
   277  058C                     	;# 
   278  058C                     	;# 
   279  058D                     	;# 
   280  058E                     	;# 
   281  058E                     	;# 
   282  058F                     	;# 
   283  0590                     	;# 
   284  0590                     	;# 
   285  0591                     	;# 
   286  0592                     	;# 
   287  0592                     	;# 
   288  0593                     	;# 
   289  0594                     	;# 
   290  0594                     	;# 
   291  0595                     	;# 
   292  0596                     	;# 
   293  0596                     	;# 
   294  0597                     	;# 
   295  0598                     	;# 
   296  0599                     	;# 
   297  059A                     	;# 
   298  059B                     	;# 
   299  059B                     	;# 
   300  059C                     	;# 
   301  059D                     	;# 
   302  060C                     	;# 
   303  060C                     	;# 
   304  060D                     	;# 
   305  060E                     	;# 
   306  060F                     	;# 
   307  060F                     	;# 
   308  0610                     	;# 
   309  0611                     	;# 
   310  0612                     	;# 
   311  0613                     	;# 
   312  0614                     	;# 
   313  0617                     	;# 
   314  0618                     	;# 
   315  0619                     	;# 
   316  061A                     	;# 
   317  061B                     	;# 
   318  061C                     	;# 
   319  0691                     	;# 
   320  0692                     	;# 
   321  0693                     	;# 
   322  0694                     	;# 
   323  0695                     	;# 
   324  0696                     	;# 
   325  0697                     	;# 
   326  0699                     	;# 
   327  069A                     	;# 
   328  0711                     	;# 
   329  0712                     	;# 
   330  0713                     	;# 
   331  0714                     	;# 
   332  0715                     	;# 
   333  0718                     	;# 
   334  0718                     	;# 
   335  0719                     	;# 
   336  071A                     	;# 
   337  071A                     	;# 
   338  071B                     	;# 
   339  071C                     	;# 
   340  071D                     	;# 
   341  0791                     	;# 
   342  0791                     	;# 
   343  0792                     	;# 
   344  0793                     	;# 
   345  0793                     	;# 
   346  0794                     	;# 
   347  0795                     	;# 
   348  0795                     	;# 
   349  0796                     	;# 
   350  0797                     	;# 
   351  0797                     	;# 
   352  0798                     	;# 
   353  0799                     	;# 
   354  079A                     	;# 
   355  080C                     	;# 
   356  080C                     	;# 
   357  080D                     	;# 
   358  080E                     	;# 
   359  080E                     	;# 
   360  080F                     	;# 
   361  0810                     	;# 
   362  0810                     	;# 
   363  0811                     	;# 
   364  0812                     	;# 
   365  0812                     	;# 
   366  0813                     	;# 
   367  0814                     	;# 
   368  0815                     	;# 
   369  0816                     	;# 
   370  0817                     	;# 
   371  0818                     	;# 
   372  0819                     	;# 
   373  081A                     	;# 
   374  081A                     	;# 
   375  081B                     	;# 
   376  081C                     	;# 
   377  081C                     	;# 
   378  081D                     	;# 
   379  088C                     	;# 
   380  088D                     	;# 
   381  088E                     	;# 
   382  088F                     	;# 
   383  088F                     	;# 
   384  0890                     	;# 
   385  0891                     	;# 
   386  0892                     	;# 
   387  0893                     	;# 
   388  0893                     	;# 
   389  0894                     	;# 
   390  0895                     	;# 
   391  0896                     	;# 
   392  0897                     	;# 
   393  0897                     	;# 
   394  0898                     	;# 
   395  0899                     	;# 
   396  0D8C                     	;# 
   397  0D8C                     	;# 
   398  0D8D                     	;# 
   399  0D8E                     	;# 
   400  0D8F                     	;# 
   401  0D8F                     	;# 
   402  0D90                     	;# 
   403  0D91                     	;# 
   404  0D92                     	;# 
   405  0D92                     	;# 
   406  0D93                     	;# 
   407  0D94                     	;# 
   408  0D95                     	;# 
   409  0D95                     	;# 
   410  0D96                     	;# 
   411  0D97                     	;# 
   412  0D98                     	;# 
   413  0D99                     	;# 
   414  0D9A                     	;# 
   415  0D9B                     	;# 
   416  0D9C                     	;# 
   417  0D9D                     	;# 
   418  0D9E                     	;# 
   419  0D9E                     	;# 
   420  0D9F                     	;# 
   421  0DA0                     	;# 
   422  0DA1                     	;# 
   423  0DA1                     	;# 
   424  0DA2                     	;# 
   425  0DA3                     	;# 
   426  0DA4                     	;# 
   427  0DA4                     	;# 
   428  0DA5                     	;# 
   429  0DA6                     	;# 
   430  0DA7                     	;# 
   431  0DA7                     	;# 
   432  0DA8                     	;# 
   433  0DA9                     	;# 
   434  0DAA                     	;# 
   435  0DAB                     	;# 
   436  0DAC                     	;# 
   437  0DAD                     	;# 
   438  0DAE                     	;# 
   439  0DAF                     	;# 
   440  0E0F                     	;# 
   441  0E10                     	;# 
   442  0E11                     	;# 
   443  0E12                     	;# 
   444  0E13                     	;# 
   445  0E14                     	;# 
   446  0E15                     	;# 
   447  0E16                     	;# 
   448  0E17                     	;# 
   449  0E18                     	;# 
   450  0E19                     	;# 
   451  0E1A                     	;# 
   452  0E1B                     	;# 
   453  0E1C                     	;# 
   454  0E1D                     	;# 
   455  0E1E                     	;# 
   456  0E1F                     	;# 
   457  0E20                     	;# 
   458  0E21                     	;# 
   459  0E22                     	;# 
   460  0E23                     	;# 
   461  0E24                     	;# 
   462  0E25                     	;# 
   463  0E26                     	;# 
   464  0E27                     	;# 
   465  0E28                     	;# 
   466  0E29                     	;# 
   467  0E2A                     	;# 
   468  0E2B                     	;# 
   469  0E2C                     	;# 
   470  0E2D                     	;# 
   471  0E2E                     	;# 
   472  0E90                     	;# 
   473  0E91                     	;# 
   474  0E92                     	;# 
   475  0E94                     	;# 
   476  0E95                     	;# 
   477  0E9C                     	;# 
   478  0E9D                     	;# 
   479  0E9E                     	;# 
   480  0E9F                     	;# 
   481  0EA0                     	;# 
   482  0EA1                     	;# 
   483  0EA2                     	;# 
   484  0EA3                     	;# 
   485  0EA4                     	;# 
   486  0EA5                     	;# 
   487  0EA6                     	;# 
   488  0EA7                     	;# 
   489  0F0F                     	;# 
   490  0F10                     	;# 
   491  0F11                     	;# 
   492  0F12                     	;# 
   493  0F13                     	;# 
   494  0F14                     	;# 
   495  0F15                     	;# 
   496  0F16                     	;# 
   497  0F17                     	;# 
   498  0F18                     	;# 
   499  0F19                     	;# 
   500  0F1A                     	;# 
   501  0F1B                     	;# 
   502  0F1C                     	;# 
   503  0F1D                     	;# 
   504  0F1E                     	;# 
   505  0F1F                     	;# 
   506  0F20                     	;# 
   507  0F21                     	;# 
   508  0F22                     	;# 
   509  0F23                     	;# 
   510  0F24                     	;# 
   511  0F25                     	;# 
   512  0F26                     	;# 
   513  0F27                     	;# 
   514  0F28                     	;# 
   515  0F29                     	;# 
   516  0F2A                     	;# 
   517  0F2B                     	;# 
   518  0F2C                     	;# 
   519  0F2D                     	;# 
   520  0F2E                     	;# 
   521  0F2F                     	;# 
   522  0F30                     	;# 
   523  0F31                     	;# 
   524  0F32                     	;# 
   525  0F33                     	;# 
   526  0F34                     	;# 
   527  0F35                     	;# 
   528  0F36                     	;# 
   529  0F37                     	;# 
   530  0FE4                     	;# 
   531  0FE5                     	;# 
   532  0FE6                     	;# 
   533  0FE7                     	;# 
   534  0FE8                     	;# 
   535  0FE9                     	;# 
   536  0FEA                     	;# 
   537  0FEB                     	;# 
   538  0FED                     	;# 
   539  0FEE                     	;# 
   540  0FEF                     	;# 
   541  0000                     	;# 
   542  0001                     	;# 
   543  0002                     	;# 
   544  0003                     	;# 
   545  0004                     	;# 
   546  0005                     	;# 
   547  0006                     	;# 
   548  0007                     	;# 
   549  0008                     	;# 
   550  0009                     	;# 
   551  000A                     	;# 
   552  000B                     	;# 
   553  000C                     	;# 
   554  000D                     	;# 
   555  000E                     	;# 
   556  0010                     	;# 
   557  0011                     	;# 
   558  0012                     	;# 
   559  0013                     	;# 
   560  0014                     	;# 
   561  0015                     	;# 
   562  0016                     	;# 
   563  0016                     	;# 
   564  0017                     	;# 
   565  0018                     	;# 
   566  0019                     	;# 
   567  001A                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001B                     	;# 
   571  001C                     	;# 
   572  001D                     	;# 
   573  001E                     	;# 
   574  001F                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  0090                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  009F                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  010E                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011C                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  018E                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0194                     	;# 
   616  0195                     	;# 
   617  0196                     	;# 
   618  0197                     	;# 
   619  0199                     	;# 
   620  0199                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019A                     	;# 
   624  019A                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019C                     	;# 
   631  019C                     	;# 
   632  019C                     	;# 
   633  019D                     	;# 
   634  019D                     	;# 
   635  019D                     	;# 
   636  019E                     	;# 
   637  019E                     	;# 
   638  019E                     	;# 
   639  019F                     	;# 
   640  019F                     	;# 
   641  019F                     	;# 
   642  019F                     	;# 
   643  019F                     	;# 
   644  020C                     	;# 
   645  020D                     	;# 
   646  020E                     	;# 
   647  0211                     	;# 
   648  0211                     	;# 
   649  0212                     	;# 
   650  0212                     	;# 
   651  0213                     	;# 
   652  0213                     	;# 
   653  0214                     	;# 
   654  0214                     	;# 
   655  0215                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  028C                     	;# 
   664  028D                     	;# 
   665  028E                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0298                     	;# 
   672  0298                     	;# 
   673  0299                     	;# 
   674  029A                     	;# 
   675  029B                     	;# 
   676  029E                     	;# 
   677  030C                     	;# 
   678  030D                     	;# 
   679  030E                     	;# 
   680  038C                     	;# 
   681  038D                     	;# 
   682  038E                     	;# 
   683  0391                     	;# 
   684  0392                     	;# 
   685  0393                     	;# 
   686  0394                     	;# 
   687  0395                     	;# 
   688  0396                     	;# 
   689  0397                     	;# 
   690  0398                     	;# 
   691  0399                     	;# 
   692  040E                     	;# 
   693  0413                     	;# 
   694  0413                     	;# 
   695  0414                     	;# 
   696  0414                     	;# 
   697  0415                     	;# 
   698  0416                     	;# 
   699  0417                     	;# 
   700  0418                     	;# 
   701  041A                     	;# 
   702  041A                     	;# 
   703  041B                     	;# 
   704  041B                     	;# 
   705  041C                     	;# 
   706  041D                     	;# 
   707  041E                     	;# 
   708  041F                     	;# 
   709  0493                     	;# 
   710  0494                     	;# 
   711  0495                     	;# 
   712  0496                     	;# 
   713  049A                     	;# 
   714  049B                     	;# 
   715  049C                     	;# 
   716  049D                     	;# 
   717  058C                     	;# 
   718  058C                     	;# 
   719  058D                     	;# 
   720  058E                     	;# 
   721  058E                     	;# 
   722  058F                     	;# 
   723  0590                     	;# 
   724  0590                     	;# 
   725  0591                     	;# 
   726  0592                     	;# 
   727  0592                     	;# 
   728  0593                     	;# 
   729  0594                     	;# 
   730  0594                     	;# 
   731  0595                     	;# 
   732  0596                     	;# 
   733  0596                     	;# 
   734  0597                     	;# 
   735  0598                     	;# 
   736  0599                     	;# 
   737  059A                     	;# 
   738  059B                     	;# 
   739  059B                     	;# 
   740  059C                     	;# 
   741  059D                     	;# 
   742  060C                     	;# 
   743  060C                     	;# 
   744  060D                     	;# 
   745  060E                     	;# 
   746  060F                     	;# 
   747  060F                     	;# 
   748  0610                     	;# 
   749  0611                     	;# 
   750  0612                     	;# 
   751  0613                     	;# 
   752  0614                     	;# 
   753  0617                     	;# 
   754  0618                     	;# 
   755  0619                     	;# 
   756  061A                     	;# 
   757  061B                     	;# 
   758  061C                     	;# 
   759  0691                     	;# 
   760  0692                     	;# 
   761  0693                     	;# 
   762  0694                     	;# 
   763  0695                     	;# 
   764  0696                     	;# 
   765  0697                     	;# 
   766  0699                     	;# 
   767  069A                     	;# 
   768  0711                     	;# 
   769  0712                     	;# 
   770  0713                     	;# 
   771  0714                     	;# 
   772  0715                     	;# 
   773  0718                     	;# 
   774  0718                     	;# 
   775  0719                     	;# 
   776  071A                     	;# 
   777  071A                     	;# 
   778  071B                     	;# 
   779  071C                     	;# 
   780  071D                     	;# 
   781  0791                     	;# 
   782  0791                     	;# 
   783  0792                     	;# 
   784  0793                     	;# 
   785  0793                     	;# 
   786  0794                     	;# 
   787  0795                     	;# 
   788  0795                     	;# 
   789  0796                     	;# 
   790  0797                     	;# 
   791  0797                     	;# 
   792  0798                     	;# 
   793  0799                     	;# 
   794  079A                     	;# 
   795  080C                     	;# 
   796  080C                     	;# 
   797  080D                     	;# 
   798  080E                     	;# 
   799  080E                     	;# 
   800  080F                     	;# 
   801  0810                     	;# 
   802  0810                     	;# 
   803  0811                     	;# 
   804  0812                     	;# 
   805  0812                     	;# 
   806  0813                     	;# 
   807  0814                     	;# 
   808  0815                     	;# 
   809  0816                     	;# 
   810  0817                     	;# 
   811  0818                     	;# 
   812  0819                     	;# 
   813  081A                     	;# 
   814  081A                     	;# 
   815  081B                     	;# 
   816  081C                     	;# 
   817  081C                     	;# 
   818  081D                     	;# 
   819  088C                     	;# 
   820  088D                     	;# 
   821  088E                     	;# 
   822  088F                     	;# 
   823  088F                     	;# 
   824  0890                     	;# 
   825  0891                     	;# 
   826  0892                     	;# 
   827  0893                     	;# 
   828  0893                     	;# 
   829  0894                     	;# 
   830  0895                     	;# 
   831  0896                     	;# 
   832  0897                     	;# 
   833  0897                     	;# 
   834  0898                     	;# 
   835  0899                     	;# 
   836  0D8C                     	;# 
   837  0D8C                     	;# 
   838  0D8D                     	;# 
   839  0D8E                     	;# 
   840  0D8F                     	;# 
   841  0D8F                     	;# 
   842  0D90                     	;# 
   843  0D91                     	;# 
   844  0D92                     	;# 
   845  0D92                     	;# 
   846  0D93                     	;# 
   847  0D94                     	;# 
   848  0D95                     	;# 
   849  0D95                     	;# 
   850  0D96                     	;# 
   851  0D97                     	;# 
   852  0D98                     	;# 
   853  0D99                     	;# 
   854  0D9A                     	;# 
   855  0D9B                     	;# 
   856  0D9C                     	;# 
   857  0D9D                     	;# 
   858  0D9E                     	;# 
   859  0D9E                     	;# 
   860  0D9F                     	;# 
   861  0DA0                     	;# 
   862  0DA1                     	;# 
   863  0DA1                     	;# 
   864  0DA2                     	;# 
   865  0DA3                     	;# 
   866  0DA4                     	;# 
   867  0DA4                     	;# 
   868  0DA5                     	;# 
   869  0DA6                     	;# 
   870  0DA7                     	;# 
   871  0DA7                     	;# 
   872  0DA8                     	;# 
   873  0DA9                     	;# 
   874  0DAA                     	;# 
   875  0DAB                     	;# 
   876  0DAC                     	;# 
   877  0DAD                     	;# 
   878  0DAE                     	;# 
   879  0DAF                     	;# 
   880  0E0F                     	;# 
   881  0E10                     	;# 
   882  0E11                     	;# 
   883  0E12                     	;# 
   884  0E13                     	;# 
   885  0E14                     	;# 
   886  0E15                     	;# 
   887  0E16                     	;# 
   888  0E17                     	;# 
   889  0E18                     	;# 
   890  0E19                     	;# 
   891  0E1A                     	;# 
   892  0E1B                     	;# 
   893  0E1C                     	;# 
   894  0E1D                     	;# 
   895  0E1E                     	;# 
   896  0E1F                     	;# 
   897  0E20                     	;# 
   898  0E21                     	;# 
   899  0E22                     	;# 
   900  0E23                     	;# 
   901  0E24                     	;# 
   902  0E25                     	;# 
   903  0E26                     	;# 
   904  0E27                     	;# 
   905  0E28                     	;# 
   906  0E29                     	;# 
   907  0E2A                     	;# 
   908  0E2B                     	;# 
   909  0E2C                     	;# 
   910  0E2D                     	;# 
   911  0E2E                     	;# 
   912  0E90                     	;# 
   913  0E91                     	;# 
   914  0E92                     	;# 
   915  0E94                     	;# 
   916  0E95                     	;# 
   917  0E9C                     	;# 
   918  0E9D                     	;# 
   919  0E9E                     	;# 
   920  0E9F                     	;# 
   921  0EA0                     	;# 
   922  0EA1                     	;# 
   923  0EA2                     	;# 
   924  0EA3                     	;# 
   925  0EA4                     	;# 
   926  0EA5                     	;# 
   927  0EA6                     	;# 
   928  0EA7                     	;# 
   929  0F0F                     	;# 
   930  0F10                     	;# 
   931  0F11                     	;# 
   932  0F12                     	;# 
   933  0F13                     	;# 
   934  0F14                     	;# 
   935  0F15                     	;# 
   936  0F16                     	;# 
   937  0F17                     	;# 
   938  0F18                     	;# 
   939  0F19                     	;# 
   940  0F1A                     	;# 
   941  0F1B                     	;# 
   942  0F1C                     	;# 
   943  0F1D                     	;# 
   944  0F1E                     	;# 
   945  0F1F                     	;# 
   946  0F20                     	;# 
   947  0F21                     	;# 
   948  0F22                     	;# 
   949  0F23                     	;# 
   950  0F24                     	;# 
   951  0F25                     	;# 
   952  0F26                     	;# 
   953  0F27                     	;# 
   954  0F28                     	;# 
   955  0F29                     	;# 
   956  0F2A                     	;# 
   957  0F2B                     	;# 
   958  0F2C                     	;# 
   959  0F2D                     	;# 
   960  0F2E                     	;# 
   961  0F2F                     	;# 
   962  0F30                     	;# 
   963  0F31                     	;# 
   964  0F32                     	;# 
   965  0F33                     	;# 
   966  0F34                     	;# 
   967  0F35                     	;# 
   968  0F36                     	;# 
   969  0F37                     	;# 
   970  0FE4                     	;# 
   971  0FE5                     	;# 
   972  0FE6                     	;# 
   973  0FE7                     	;# 
   974  0FE8                     	;# 
   975  0FE9                     	;# 
   976  0FEA                     	;# 
   977  0FEB                     	;# 
   978  0FED                     	;# 
   979  0FEE                     	;# 
   980  0FEF                     	;# 
   981  0000                     	;# 
   982  0001                     	;# 
   983  0002                     	;# 
   984  0003                     	;# 
   985  0004                     	;# 
   986  0005                     	;# 
   987  0006                     	;# 
   988  0007                     	;# 
   989  0008                     	;# 
   990  0009                     	;# 
   991  000A                     	;# 
   992  000B                     	;# 
   993  000C                     	;# 
   994  000D                     	;# 
   995  000E                     	;# 
   996  0010                     	;# 
   997  0011                     	;# 
   998  0012                     	;# 
   999  0013                     	;# 
  1000  0014                     	;# 
  1001  0015                     	;# 
  1002  0016                     	;# 
  1003  0016                     	;# 
  1004  0017                     	;# 
  1005  0018                     	;# 
  1006  0019                     	;# 
  1007  001A                     	;# 
  1008  001A                     	;# 
  1009  001B                     	;# 
  1010  001B                     	;# 
  1011  001C                     	;# 
  1012  001D                     	;# 
  1013  001E                     	;# 
  1014  001F                     	;# 
  1015  008C                     	;# 
  1016  008D                     	;# 
  1017  008E                     	;# 
  1018  0090                     	;# 
  1019  0091                     	;# 
  1020  0092                     	;# 
  1021  0093                     	;# 
  1022  0094                     	;# 
  1023  0095                     	;# 
  1024  0096                     	;# 
  1025  0098                     	;# 
  1026  0099                     	;# 
  1027  009A                     	;# 
  1028  009B                     	;# 
  1029  009B                     	;# 
  1030  009C                     	;# 
  1031  009D                     	;# 
  1032  009E                     	;# 
  1033  009F                     	;# 
  1034  010C                     	;# 
  1035  010D                     	;# 
  1036  010E                     	;# 
  1037  0111                     	;# 
  1038  0112                     	;# 
  1039  0113                     	;# 
  1040  0114                     	;# 
  1041  0115                     	;# 
  1042  0116                     	;# 
  1043  0117                     	;# 
  1044  0118                     	;# 
  1045  0119                     	;# 
  1046  011C                     	;# 
  1047  018C                     	;# 
  1048  018D                     	;# 
  1049  018E                     	;# 
  1050  0191                     	;# 
  1051  0191                     	;# 
  1052  0192                     	;# 
  1053  0193                     	;# 
  1054  0193                     	;# 
  1055  0194                     	;# 
  1056  0195                     	;# 
  1057  0196                     	;# 
  1058  0197                     	;# 
  1059  0199                     	;# 
  1060  0199                     	;# 
  1061  0199                     	;# 
  1062  019A                     	;# 
  1063  019A                     	;# 
  1064  019A                     	;# 
  1065  019B                     	;# 
  1066  019B                     	;# 
  1067  019B                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019C                     	;# 
  1071  019C                     	;# 
  1072  019C                     	;# 
  1073  019D                     	;# 
  1074  019D                     	;# 
  1075  019D                     	;# 
  1076  019E                     	;# 
  1077  019E                     	;# 
  1078  019E                     	;# 
  1079  019F                     	;# 
  1080  019F                     	;# 
  1081  019F                     	;# 
  1082  019F                     	;# 
  1083  019F                     	;# 
  1084  020C                     	;# 
  1085  020D                     	;# 
  1086  020E                     	;# 
  1087  0211                     	;# 
  1088  0211                     	;# 
  1089  0212                     	;# 
  1090  0212                     	;# 
  1091  0213                     	;# 
  1092  0213                     	;# 
  1093  0214                     	;# 
  1094  0214                     	;# 
  1095  0215                     	;# 
  1096  0215                     	;# 
  1097  0215                     	;# 
  1098  0215                     	;# 
  1099  0216                     	;# 
  1100  0216                     	;# 
  1101  0217                     	;# 
  1102  0217                     	;# 
  1103  028C                     	;# 
  1104  028D                     	;# 
  1105  028E                     	;# 
  1106  0291                     	;# 
  1107  0291                     	;# 
  1108  0292                     	;# 
  1109  0293                     	;# 
  1110  0294                     	;# 
  1111  0298                     	;# 
  1112  0298                     	;# 
  1113  0299                     	;# 
  1114  029A                     	;# 
  1115  029B                     	;# 
  1116  029E                     	;# 
  1117  030C                     	;# 
  1118  030D                     	;# 
  1119  030E                     	;# 
  1120  038C                     	;# 
  1121  038D                     	;# 
  1122  038E                     	;# 
  1123  0391                     	;# 
  1124  0392                     	;# 
  1125  0393                     	;# 
  1126  0394                     	;# 
  1127  0395                     	;# 
  1128  0396                     	;# 
  1129  0397                     	;# 
  1130  0398                     	;# 
  1131  0399                     	;# 
  1132  040E                     	;# 
  1133  0413                     	;# 
  1134  0413                     	;# 
  1135  0414                     	;# 
  1136  0414                     	;# 
  1137  0415                     	;# 
  1138  0416                     	;# 
  1139  0417                     	;# 
  1140  0418                     	;# 
  1141  041A                     	;# 
  1142  041A                     	;# 
  1143  041B                     	;# 
  1144  041B                     	;# 
  1145  041C                     	;# 
  1146  041D                     	;# 
  1147  041E                     	;# 
  1148  041F                     	;# 
  1149  0493                     	;# 
  1150  0494                     	;# 
  1151  0495                     	;# 
  1152  0496                     	;# 
  1153  049A                     	;# 
  1154  049B                     	;# 
  1155  049C                     	;# 
  1156  049D                     	;# 
  1157  058C                     	;# 
  1158  058C                     	;# 
  1159  058D                     	;# 
  1160  058E                     	;# 
  1161  058E                     	;# 
  1162  058F                     	;# 
  1163  0590                     	;# 
  1164  0590                     	;# 
  1165  0591                     	;# 
  1166  0592                     	;# 
  1167  0592                     	;# 
  1168  0593                     	;# 
  1169  0594                     	;# 
  1170  0594                     	;# 
  1171  0595                     	;# 
  1172  0596                     	;# 
  1173  0596                     	;# 
  1174  0597                     	;# 
  1175  0598                     	;# 
  1176  0599                     	;# 
  1177  059A                     	;# 
  1178  059B                     	;# 
  1179  059B                     	;# 
  1180  059C                     	;# 
  1181  059D                     	;# 
  1182  060C                     	;# 
  1183  060C                     	;# 
  1184  060D                     	;# 
  1185  060E                     	;# 
  1186  060F                     	;# 
  1187  060F                     	;# 
  1188  0610                     	;# 
  1189  0611                     	;# 
  1190  0612                     	;# 
  1191  0613                     	;# 
  1192  0614                     	;# 
  1193  0617                     	;# 
  1194  0618                     	;# 
  1195  0619                     	;# 
  1196  061A                     	;# 
  1197  061B                     	;# 
  1198  061C                     	;# 
  1199  0691                     	;# 
  1200  0692                     	;# 
  1201  0693                     	;# 
  1202  0694                     	;# 
  1203  0695                     	;# 
  1204  0696                     	;# 
  1205  0697                     	;# 
  1206  0699                     	;# 
  1207  069A                     	;# 
  1208  0711                     	;# 
  1209  0712                     	;# 
  1210  0713                     	;# 
  1211  0714                     	;# 
  1212  0715                     	;# 
  1213  0718                     	;# 
  1214  0718                     	;# 
  1215  0719                     	;# 
  1216  071A                     	;# 
  1217  071A                     	;# 
  1218  071B                     	;# 
  1219  071C                     	;# 
  1220  071D                     	;# 
  1221  0791                     	;# 
  1222  0791                     	;# 
  1223  0792                     	;# 
  1224  0793                     	;# 
  1225  0793                     	;# 
  1226  0794                     	;# 
  1227  0795                     	;# 
  1228  0795                     	;# 
  1229  0796                     	;# 
  1230  0797                     	;# 
  1231  0797                     	;# 
  1232  0798                     	;# 
  1233  0799                     	;# 
  1234  079A                     	;# 
  1235  080C                     	;# 
  1236  080C                     	;# 
  1237  080D                     	;# 
  1238  080E                     	;# 
  1239  080E                     	;# 
  1240  080F                     	;# 
  1241  0810                     	;# 
  1242  0810                     	;# 
  1243  0811                     	;# 
  1244  0812                     	;# 
  1245  0812                     	;# 
  1246  0813                     	;# 
  1247  0814                     	;# 
  1248  0815                     	;# 
  1249  0816                     	;# 
  1250  0817                     	;# 
  1251  0818                     	;# 
  1252  0819                     	;# 
  1253  081A                     	;# 
  1254  081A                     	;# 
  1255  081B                     	;# 
  1256  081C                     	;# 
  1257  081C                     	;# 
  1258  081D                     	;# 
  1259  088C                     	;# 
  1260  088D                     	;# 
  1261  088E                     	;# 
  1262  088F                     	;# 
  1263  088F                     	;# 
  1264  0890                     	;# 
  1265  0891                     	;# 
  1266  0892                     	;# 
  1267  0893                     	;# 
  1268  0893                     	;# 
  1269  0894                     	;# 
  1270  0895                     	;# 
  1271  0896                     	;# 
  1272  0897                     	;# 
  1273  0897                     	;# 
  1274  0898                     	;# 
  1275  0899                     	;# 
  1276  0D8C                     	;# 
  1277  0D8C                     	;# 
  1278  0D8D                     	;# 
  1279  0D8E                     	;# 
  1280  0D8F                     	;# 
  1281  0D8F                     	;# 
  1282  0D90                     	;# 
  1283  0D91                     	;# 
  1284  0D92                     	;# 
  1285  0D92                     	;# 
  1286  0D93                     	;# 
  1287  0D94                     	;# 
  1288  0D95                     	;# 
  1289  0D95                     	;# 
  1290  0D96                     	;# 
  1291  0D97                     	;# 
  1292  0D98                     	;# 
  1293  0D99                     	;# 
  1294  0D9A                     	;# 
  1295  0D9B                     	;# 
  1296  0D9C                     	;# 
  1297  0D9D                     	;# 
  1298  0D9E                     	;# 
  1299  0D9E                     	;# 
  1300  0D9F                     	;# 
  1301  0DA0                     	;# 
  1302  0DA1                     	;# 
  1303  0DA1                     	;# 
  1304  0DA2                     	;# 
  1305  0DA3                     	;# 
  1306  0DA4                     	;# 
  1307  0DA4                     	;# 
  1308  0DA5                     	;# 
  1309  0DA6                     	;# 
  1310  0DA7                     	;# 
  1311  0DA7                     	;# 
  1312  0DA8                     	;# 
  1313  0DA9                     	;# 
  1314  0DAA                     	;# 
  1315  0DAB                     	;# 
  1316  0DAC                     	;# 
  1317  0DAD                     	;# 
  1318  0DAE                     	;# 
  1319  0DAF                     	;# 
  1320  0E0F                     	;# 
  1321  0E10                     	;# 
  1322  0E11                     	;# 
  1323  0E12                     	;# 
  1324  0E13                     	;# 
  1325  0E14                     	;# 
  1326  0E15                     	;# 
  1327  0E16                     	;# 
  1328  0E17                     	;# 
  1329  0E18                     	;# 
  1330  0E19                     	;# 
  1331  0E1A                     	;# 
  1332  0E1B                     	;# 
  1333  0E1C                     	;# 
  1334  0E1D                     	;# 
  1335  0E1E                     	;# 
  1336  0E1F                     	;# 
  1337  0E20                     	;# 
  1338  0E21                     	;# 
  1339  0E22                     	;# 
  1340  0E23                     	;# 
  1341  0E24                     	;# 
  1342  0E25                     	;# 
  1343  0E26                     	;# 
  1344  0E27                     	;# 
  1345  0E28                     	;# 
  1346  0E29                     	;# 
  1347  0E2A                     	;# 
  1348  0E2B                     	;# 
  1349  0E2C                     	;# 
  1350  0E2D                     	;# 
  1351  0E2E                     	;# 
  1352  0E90                     	;# 
  1353  0E91                     	;# 
  1354  0E92                     	;# 
  1355  0E94                     	;# 
  1356  0E95                     	;# 
  1357  0E9C                     	;# 
  1358  0E9D                     	;# 
  1359  0E9E                     	;# 
  1360  0E9F                     	;# 
  1361  0EA0                     	;# 
  1362  0EA1                     	;# 
  1363  0EA2                     	;# 
  1364  0EA3                     	;# 
  1365  0EA4                     	;# 
  1366  0EA5                     	;# 
  1367  0EA6                     	;# 
  1368  0EA7                     	;# 
  1369  0F0F                     	;# 
  1370  0F10                     	;# 
  1371  0F11                     	;# 
  1372  0F12                     	;# 
  1373  0F13                     	;# 
  1374  0F14                     	;# 
  1375  0F15                     	;# 
  1376  0F16                     	;# 
  1377  0F17                     	;# 
  1378  0F18                     	;# 
  1379  0F19                     	;# 
  1380  0F1A                     	;# 
  1381  0F1B                     	;# 
  1382  0F1C                     	;# 
  1383  0F1D                     	;# 
  1384  0F1E                     	;# 
  1385  0F1F                     	;# 
  1386  0F20                     	;# 
  1387  0F21                     	;# 
  1388  0F22                     	;# 
  1389  0F23                     	;# 
  1390  0F24                     	;# 
  1391  0F25                     	;# 
  1392  0F26                     	;# 
  1393  0F27                     	;# 
  1394  0F28                     	;# 
  1395  0F29                     	;# 
  1396  0F2A                     	;# 
  1397  0F2B                     	;# 
  1398  0F2C                     	;# 
  1399  0F2D                     	;# 
  1400  0F2E                     	;# 
  1401  0F2F                     	;# 
  1402  0F30                     	;# 
  1403  0F31                     	;# 
  1404  0F32                     	;# 
  1405  0F33                     	;# 
  1406  0F34                     	;# 
  1407  0F35                     	;# 
  1408  0F36                     	;# 
  1409  0F37                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  0010                     	;# 
  1437  0011                     	;# 
  1438  0012                     	;# 
  1439  0013                     	;# 
  1440  0014                     	;# 
  1441  0015                     	;# 
  1442  0016                     	;# 
  1443  0016                     	;# 
  1444  0017                     	;# 
  1445  0018                     	;# 
  1446  0019                     	;# 
  1447  001A                     	;# 
  1448  001A                     	;# 
  1449  001B                     	;# 
  1450  001B                     	;# 
  1451  001C                     	;# 
  1452  001D                     	;# 
  1453  001E                     	;# 
  1454  001F                     	;# 
  1455  008C                     	;# 
  1456  008D                     	;# 
  1457  008E                     	;# 
  1458  0090                     	;# 
  1459  0091                     	;# 
  1460  0092                     	;# 
  1461  0093                     	;# 
  1462  0094                     	;# 
  1463  0095                     	;# 
  1464  0096                     	;# 
  1465  0098                     	;# 
  1466  0099                     	;# 
  1467  009A                     	;# 
  1468  009B                     	;# 
  1469  009B                     	;# 
  1470  009C                     	;# 
  1471  009D                     	;# 
  1472  009E                     	;# 
  1473  009F                     	;# 
  1474  010C                     	;# 
  1475  010D                     	;# 
  1476  010E                     	;# 
  1477  0111                     	;# 
  1478  0112                     	;# 
  1479  0113                     	;# 
  1480  0114                     	;# 
  1481  0115                     	;# 
  1482  0116                     	;# 
  1483  0117                     	;# 
  1484  0118                     	;# 
  1485  0119                     	;# 
  1486  011C                     	;# 
  1487  018C                     	;# 
  1488  018D                     	;# 
  1489  018E                     	;# 
  1490  0191                     	;# 
  1491  0191                     	;# 
  1492  0192                     	;# 
  1493  0193                     	;# 
  1494  0193                     	;# 
  1495  0194                     	;# 
  1496  0195                     	;# 
  1497  0196                     	;# 
  1498  0197                     	;# 
  1499  0199                     	;# 
  1500  0199                     	;# 
  1501  0199                     	;# 
  1502  019A                     	;# 
  1503  019A                     	;# 
  1504  019A                     	;# 
  1505  019B                     	;# 
  1506  019B                     	;# 
  1507  019B                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019C                     	;# 
  1511  019C                     	;# 
  1512  019C                     	;# 
  1513  019D                     	;# 
  1514  019D                     	;# 
  1515  019D                     	;# 
  1516  019E                     	;# 
  1517  019E                     	;# 
  1518  019E                     	;# 
  1519  019F                     	;# 
  1520  019F                     	;# 
  1521  019F                     	;# 
  1522  019F                     	;# 
  1523  019F                     	;# 
  1524  020C                     	;# 
  1525  020D                     	;# 
  1526  020E                     	;# 
  1527  0211                     	;# 
  1528  0211                     	;# 
  1529  0212                     	;# 
  1530  0212                     	;# 
  1531  0213                     	;# 
  1532  0213                     	;# 
  1533  0214                     	;# 
  1534  0214                     	;# 
  1535  0215                     	;# 
  1536  0215                     	;# 
  1537  0215                     	;# 
  1538  0215                     	;# 
  1539  0216                     	;# 
  1540  0216                     	;# 
  1541  0217                     	;# 
  1542  0217                     	;# 
  1543  028C                     	;# 
  1544  028D                     	;# 
  1545  028E                     	;# 
  1546  0291                     	;# 
  1547  0291                     	;# 
  1548  0292                     	;# 
  1549  0293                     	;# 
  1550  0294                     	;# 
  1551  0298                     	;# 
  1552  0298                     	;# 
  1553  0299                     	;# 
  1554  029A                     	;# 
  1555  029B                     	;# 
  1556  029E                     	;# 
  1557  030C                     	;# 
  1558  030D                     	;# 
  1559  030E                     	;# 
  1560  038C                     	;# 
  1561  038D                     	;# 
  1562  038E                     	;# 
  1563  0391                     	;# 
  1564  0392                     	;# 
  1565  0393                     	;# 
  1566  0394                     	;# 
  1567  0395                     	;# 
  1568  0396                     	;# 
  1569  0397                     	;# 
  1570  0398                     	;# 
  1571  0399                     	;# 
  1572  040E                     	;# 
  1573  0413                     	;# 
  1574  0413                     	;# 
  1575  0414                     	;# 
  1576  0414                     	;# 
  1577  0415                     	;# 
  1578  0416                     	;# 
  1579  0417                     	;# 
  1580  0418                     	;# 
  1581  041A                     	;# 
  1582  041A                     	;# 
  1583  041B                     	;# 
  1584  041B                     	;# 
  1585  041C                     	;# 
  1586  041D                     	;# 
  1587  041E                     	;# 
  1588  041F                     	;# 
  1589  0493                     	;# 
  1590  0494                     	;# 
  1591  0495                     	;# 
  1592  0496                     	;# 
  1593  049A                     	;# 
  1594  049B                     	;# 
  1595  049C                     	;# 
  1596  049D                     	;# 
  1597  058C                     	;# 
  1598  058C                     	;# 
  1599  058D                     	;# 
  1600  058E                     	;# 
  1601  058E                     	;# 
  1602  058F                     	;# 
  1603  0590                     	;# 
  1604  0590                     	;# 
  1605  0591                     	;# 
  1606  0592                     	;# 
  1607  0592                     	;# 
  1608  0593                     	;# 
  1609  0594                     	;# 
  1610  0594                     	;# 
  1611  0595                     	;# 
  1612  0596                     	;# 
  1613  0596                     	;# 
  1614  0597                     	;# 
  1615  0598                     	;# 
  1616  0599                     	;# 
  1617  059A                     	;# 
  1618  059B                     	;# 
  1619  059B                     	;# 
  1620  059C                     	;# 
  1621  059D                     	;# 
  1622  060C                     	;# 
  1623  060C                     	;# 
  1624  060D                     	;# 
  1625  060E                     	;# 
  1626  060F                     	;# 
  1627  060F                     	;# 
  1628  0610                     	;# 
  1629  0611                     	;# 
  1630  0612                     	;# 
  1631  0613                     	;# 
  1632  0614                     	;# 
  1633  0617                     	;# 
  1634  0618                     	;# 
  1635  0619                     	;# 
  1636  061A                     	;# 
  1637  061B                     	;# 
  1638  061C                     	;# 
  1639  0691                     	;# 
  1640  0692                     	;# 
  1641  0693                     	;# 
  1642  0694                     	;# 
  1643  0695                     	;# 
  1644  0696                     	;# 
  1645  0697                     	;# 
  1646  0699                     	;# 
  1647  069A                     	;# 
  1648  0711                     	;# 
  1649  0712                     	;# 
  1650  0713                     	;# 
  1651  0714                     	;# 
  1652  0715                     	;# 
  1653  0718                     	;# 
  1654  0718                     	;# 
  1655  0719                     	;# 
  1656  071A                     	;# 
  1657  071A                     	;# 
  1658  071B                     	;# 
  1659  071C                     	;# 
  1660  071D                     	;# 
  1661  0791                     	;# 
  1662  0791                     	;# 
  1663  0792                     	;# 
  1664  0793                     	;# 
  1665  0793                     	;# 
  1666  0794                     	;# 
  1667  0795                     	;# 
  1668  0795                     	;# 
  1669  0796                     	;# 
  1670  0797                     	;# 
  1671  0797                     	;# 
  1672  0798                     	;# 
  1673  0799                     	;# 
  1674  079A                     	;# 
  1675  080C                     	;# 
  1676  080C                     	;# 
  1677  080D                     	;# 
  1678  080E                     	;# 
  1679  080E                     	;# 
  1680  080F                     	;# 
  1681  0810                     	;# 
  1682  0810                     	;# 
  1683  0811                     	;# 
  1684  0812                     	;# 
  1685  0812                     	;# 
  1686  0813                     	;# 
  1687  0814                     	;# 
  1688  0815                     	;# 
  1689  0816                     	;# 
  1690  0817                     	;# 
  1691  0818                     	;# 
  1692  0819                     	;# 
  1693  081A                     	;# 
  1694  081A                     	;# 
  1695  081B                     	;# 
  1696  081C                     	;# 
  1697  081C                     	;# 
  1698  081D                     	;# 
  1699  088C                     	;# 
  1700  088D                     	;# 
  1701  088E                     	;# 
  1702  088F                     	;# 
  1703  088F                     	;# 
  1704  0890                     	;# 
  1705  0891                     	;# 
  1706  0892                     	;# 
  1707  0893                     	;# 
  1708  0893                     	;# 
  1709  0894                     	;# 
  1710  0895                     	;# 
  1711  0896                     	;# 
  1712  0897                     	;# 
  1713  0897                     	;# 
  1714  0898                     	;# 
  1715  0899                     	;# 
  1716  0D8C                     	;# 
  1717  0D8C                     	;# 
  1718  0D8D                     	;# 
  1719  0D8E                     	;# 
  1720  0D8F                     	;# 
  1721  0D8F                     	;# 
  1722  0D90                     	;# 
  1723  0D91                     	;# 
  1724  0D92                     	;# 
  1725  0D92                     	;# 
  1726  0D93                     	;# 
  1727  0D94                     	;# 
  1728  0D95                     	;# 
  1729  0D95                     	;# 
  1730  0D96                     	;# 
  1731  0D97                     	;# 
  1732  0D98                     	;# 
  1733  0D99                     	;# 
  1734  0D9A                     	;# 
  1735  0D9B                     	;# 
  1736  0D9C                     	;# 
  1737  0D9D                     	;# 
  1738  0D9E                     	;# 
  1739  0D9E                     	;# 
  1740  0D9F                     	;# 
  1741  0DA0                     	;# 
  1742  0DA1                     	;# 
  1743  0DA1                     	;# 
  1744  0DA2                     	;# 
  1745  0DA3                     	;# 
  1746  0DA4                     	;# 
  1747  0DA4                     	;# 
  1748  0DA5                     	;# 
  1749  0DA6                     	;# 
  1750  0DA7                     	;# 
  1751  0DA7                     	;# 
  1752  0DA8                     	;# 
  1753  0DA9                     	;# 
  1754  0DAA                     	;# 
  1755  0DAB                     	;# 
  1756  0DAC                     	;# 
  1757  0DAD                     	;# 
  1758  0DAE                     	;# 
  1759  0DAF                     	;# 
  1760  0E0F                     	;# 
  1761  0E10                     	;# 
  1762  0E11                     	;# 
  1763  0E12                     	;# 
  1764  0E13                     	;# 
  1765  0E14                     	;# 
  1766  0E15                     	;# 
  1767  0E16                     	;# 
  1768  0E17                     	;# 
  1769  0E18                     	;# 
  1770  0E19                     	;# 
  1771  0E1A                     	;# 
  1772  0E1B                     	;# 
  1773  0E1C                     	;# 
  1774  0E1D                     	;# 
  1775  0E1E                     	;# 
  1776  0E1F                     	;# 
  1777  0E20                     	;# 
  1778  0E21                     	;# 
  1779  0E22                     	;# 
  1780  0E23                     	;# 
  1781  0E24                     	;# 
  1782  0E25                     	;# 
  1783  0E26                     	;# 
  1784  0E27                     	;# 
  1785  0E28                     	;# 
  1786  0E29                     	;# 
  1787  0E2A                     	;# 
  1788  0E2B                     	;# 
  1789  0E2C                     	;# 
  1790  0E2D                     	;# 
  1791  0E2E                     	;# 
  1792  0E90                     	;# 
  1793  0E91                     	;# 
  1794  0E92                     	;# 
  1795  0E94                     	;# 
  1796  0E95                     	;# 
  1797  0E9C                     	;# 
  1798  0E9D                     	;# 
  1799  0E9E                     	;# 
  1800  0E9F                     	;# 
  1801  0EA0                     	;# 
  1802  0EA1                     	;# 
  1803  0EA2                     	;# 
  1804  0EA3                     	;# 
  1805  0EA4                     	;# 
  1806  0EA5                     	;# 
  1807  0EA6                     	;# 
  1808  0EA7                     	;# 
  1809  0F0F                     	;# 
  1810  0F10                     	;# 
  1811  0F11                     	;# 
  1812  0F12                     	;# 
  1813  0F13                     	;# 
  1814  0F14                     	;# 
  1815  0F15                     	;# 
  1816  0F16                     	;# 
  1817  0F17                     	;# 
  1818  0F18                     	;# 
  1819  0F19                     	;# 
  1820  0F1A                     	;# 
  1821  0F1B                     	;# 
  1822  0F1C                     	;# 
  1823  0F1D                     	;# 
  1824  0F1E                     	;# 
  1825  0F1F                     	;# 
  1826  0F20                     	;# 
  1827  0F21                     	;# 
  1828  0F22                     	;# 
  1829  0F23                     	;# 
  1830  0F24                     	;# 
  1831  0F25                     	;# 
  1832  0F26                     	;# 
  1833  0F27                     	;# 
  1834  0F28                     	;# 
  1835  0F29                     	;# 
  1836  0F2A                     	;# 
  1837  0F2B                     	;# 
  1838  0F2C                     	;# 
  1839  0F2D                     	;# 
  1840  0F2E                     	;# 
  1841  0F2F                     	;# 
  1842  0F30                     	;# 
  1843  0F31                     	;# 
  1844  0F32                     	;# 
  1845  0F33                     	;# 
  1846  0F34                     	;# 
  1847  0F35                     	;# 
  1848  0F36                     	;# 
  1849  0F37                     	;# 
  1850  0FE4                     	;# 
  1851  0FE5                     	;# 
  1852  0FE6                     	;# 
  1853  0FE7                     	;# 
  1854  0FE8                     	;# 
  1855  0FE9                     	;# 
  1856  0FEA                     	;# 
  1857  0FEB                     	;# 
  1858  0FED                     	;# 
  1859  0FEE                     	;# 
  1860  0FEF                     	;# 
  1861  0000                     	;# 
  1862  0001                     	;# 
  1863  0002                     	;# 
  1864  0003                     	;# 
  1865  0004                     	;# 
  1866  0005                     	;# 
  1867  0006                     	;# 
  1868  0007                     	;# 
  1869  0008                     	;# 
  1870  0009                     	;# 
  1871  000A                     	;# 
  1872  000B                     	;# 
  1873  000C                     	;# 
  1874  000D                     	;# 
  1875  000E                     	;# 
  1876  0010                     	;# 
  1877  0011                     	;# 
  1878  0012                     	;# 
  1879  0013                     	;# 
  1880  0014                     	;# 
  1881  0015                     	;# 
  1882  0016                     	;# 
  1883  0016                     	;# 
  1884  0017                     	;# 
  1885  0018                     	;# 
  1886  0019                     	;# 
  1887  001A                     	;# 
  1888  001A                     	;# 
  1889  001B                     	;# 
  1890  001B                     	;# 
  1891  001C                     	;# 
  1892  001D                     	;# 
  1893  001E                     	;# 
  1894  001F                     	;# 
  1895  008C                     	;# 
  1896  008D                     	;# 
  1897  008E                     	;# 
  1898  0090                     	;# 
  1899  0091                     	;# 
  1900  0092                     	;# 
  1901  0093                     	;# 
  1902  0094                     	;# 
  1903  0095                     	;# 
  1904  0096                     	;# 
  1905  0098                     	;# 
  1906  0099                     	;# 
  1907  009A                     	;# 
  1908  009B                     	;# 
  1909  009B                     	;# 
  1910  009C                     	;# 
  1911  009D                     	;# 
  1912  009E                     	;# 
  1913  009F                     	;# 
  1914  010C                     	;# 
  1915  010D                     	;# 
  1916  010E                     	;# 
  1917  0111                     	;# 
  1918  0112                     	;# 
  1919  0113                     	;# 
  1920  0114                     	;# 
  1921  0115                     	;# 
  1922  0116                     	;# 
  1923  0117                     	;# 
  1924  0118                     	;# 
  1925  0119                     	;# 
  1926  011C                     	;# 
  1927  018C                     	;# 
  1928  018D                     	;# 
  1929  018E                     	;# 
  1930  0191                     	;# 
  1931  0191                     	;# 
  1932  0192                     	;# 
  1933  0193                     	;# 
  1934  0193                     	;# 
  1935  0194                     	;# 
  1936  0195                     	;# 
  1937  0196                     	;# 
  1938  0197                     	;# 
  1939  0199                     	;# 
  1940  0199                     	;# 
  1941  0199                     	;# 
  1942  019A                     	;# 
  1943  019A                     	;# 
  1944  019A                     	;# 
  1945  019B                     	;# 
  1946  019B                     	;# 
  1947  019B                     	;# 
  1948  019B                     	;# 
  1949  019B                     	;# 
  1950  019C                     	;# 
  1951  019C                     	;# 
  1952  019C                     	;# 
  1953  019D                     	;# 
  1954  019D                     	;# 
  1955  019D                     	;# 
  1956  019E                     	;# 
  1957  019E                     	;# 
  1958  019E                     	;# 
  1959  019F                     	;# 
  1960  019F                     	;# 
  1961  019F                     	;# 
  1962  019F                     	;# 
  1963  019F                     	;# 
  1964  020C                     	;# 
  1965  020D                     	;# 
  1966  020E                     	;# 
  1967  0211                     	;# 
  1968  0211                     	;# 
  1969  0212                     	;# 
  1970  0212                     	;# 
  1971  0213                     	;# 
  1972  0213                     	;# 
  1973  0214                     	;# 
  1974  0214                     	;# 
  1975  0215                     	;# 
  1976  0215                     	;# 
  1977  0215                     	;# 
  1978  0215                     	;# 
  1979  0216                     	;# 
  1980  0216                     	;# 
  1981  0217                     	;# 
  1982  0217                     	;# 
  1983  028C                     	;# 
  1984  028D                     	;# 
  1985  028E                     	;# 
  1986  0291                     	;# 
  1987  0291                     	;# 
  1988  0292                     	;# 
  1989  0293                     	;# 
  1990  0294                     	;# 
  1991  0298                     	;# 
  1992  0298                     	;# 
  1993  0299                     	;# 
  1994  029A                     	;# 
  1995  029B                     	;# 
  1996  029E                     	;# 
  1997  030C                     	;# 
  1998  030D                     	;# 
  1999  030E                     	;# 
  2000  038C                     	;# 
  2001  038D                     	;# 
  2002  038E                     	;# 
  2003  0391                     	;# 
  2004  0392                     	;# 
  2005  0393                     	;# 
  2006  0394                     	;# 
  2007  0395                     	;# 
  2008  0396                     	;# 
  2009  0397                     	;# 
  2010  0398                     	;# 
  2011  0399                     	;# 
  2012  040E                     	;# 
  2013  0413                     	;# 
  2014  0413                     	;# 
  2015  0414                     	;# 
  2016  0414                     	;# 
  2017  0415                     	;# 
  2018  0416                     	;# 
  2019  0417                     	;# 
  2020  0418                     	;# 
  2021  041A                     	;# 
  2022  041A                     	;# 
  2023  041B                     	;# 
  2024  041B                     	;# 
  2025  041C                     	;# 
  2026  041D                     	;# 
  2027  041E                     	;# 
  2028  041F                     	;# 
  2029  0493                     	;# 
  2030  0494                     	;# 
  2031  0495                     	;# 
  2032  0496                     	;# 
  2033  049A                     	;# 
  2034  049B                     	;# 
  2035  049C                     	;# 
  2036  049D                     	;# 
  2037  058C                     	;# 
  2038  058C                     	;# 
  2039  058D                     	;# 
  2040  058E                     	;# 
  2041  058E                     	;# 
  2042  058F                     	;# 
  2043  0590                     	;# 
  2044  0590                     	;# 
  2045  0591                     	;# 
  2046  0592                     	;# 
  2047  0592                     	;# 
  2048  0593                     	;# 
  2049  0594                     	;# 
  2050  0594                     	;# 
  2051  0595                     	;# 
  2052  0596                     	;# 
  2053  0596                     	;# 
  2054  0597                     	;# 
  2055  0598                     	;# 
  2056  0599                     	;# 
  2057  059A                     	;# 
  2058  059B                     	;# 
  2059  059B                     	;# 
  2060  059C                     	;# 
  2061  059D                     	;# 
  2062  060C                     	;# 
  2063  060C                     	;# 
  2064  060D                     	;# 
  2065  060E                     	;# 
  2066  060F                     	;# 
  2067  060F                     	;# 
  2068  0610                     	;# 
  2069  0611                     	;# 
  2070  0612                     	;# 
  2071  0613                     	;# 
  2072  0614                     	;# 
  2073  0617                     	;# 
  2074  0618                     	;# 
  2075  0619                     	;# 
  2076  061A                     	;# 
  2077  061B                     	;# 
  2078  061C                     	;# 
  2079  0691                     	;# 
  2080  0692                     	;# 
  2081  0693                     	;# 
  2082  0694                     	;# 
  2083  0695                     	;# 
  2084  0696                     	;# 
  2085  0697                     	;# 
  2086  0699                     	;# 
  2087  069A                     	;# 
  2088  0711                     	;# 
  2089  0712                     	;# 
  2090  0713                     	;# 
  2091  0714                     	;# 
  2092  0715                     	;# 
  2093  0718                     	;# 
  2094  0718                     	;# 
  2095  0719                     	;# 
  2096  071A                     	;# 
  2097  071A                     	;# 
  2098  071B                     	;# 
  2099  071C                     	;# 
  2100  071D                     	;# 
  2101  0791                     	;# 
  2102  0791                     	;# 
  2103  0792                     	;# 
  2104  0793                     	;# 
  2105  0793                     	;# 
  2106  0794                     	;# 
  2107  0795                     	;# 
  2108  0795                     	;# 
  2109  0796                     	;# 
  2110  0797                     	;# 
  2111  0797                     	;# 
  2112  0798                     	;# 
  2113  0799                     	;# 
  2114  079A                     	;# 
  2115  080C                     	;# 
  2116  080C                     	;# 
  2117  080D                     	;# 
  2118  080E                     	;# 
  2119  080E                     	;# 
  2120  080F                     	;# 
  2121  0810                     	;# 
  2122  0810                     	;# 
  2123  0811                     	;# 
  2124  0812                     	;# 
  2125  0812                     	;# 
  2126  0813                     	;# 
  2127  0814                     	;# 
  2128  0815                     	;# 
  2129  0816                     	;# 
  2130  0817                     	;# 
  2131  0818                     	;# 
  2132  0819                     	;# 
  2133  081A                     	;# 
  2134  081A                     	;# 
  2135  081B                     	;# 
  2136  081C                     	;# 
  2137  081C                     	;# 
  2138  081D                     	;# 
  2139  088C                     	;# 
  2140  088D                     	;# 
  2141  088E                     	;# 
  2142  088F                     	;# 
  2143  088F                     	;# 
  2144  0890                     	;# 
  2145  0891                     	;# 
  2146  0892                     	;# 
  2147  0893                     	;# 
  2148  0893                     	;# 
  2149  0894                     	;# 
  2150  0895                     	;# 
  2151  0896                     	;# 
  2152  0897                     	;# 
  2153  0897                     	;# 
  2154  0898                     	;# 
  2155  0899                     	;# 
  2156  0D8C                     	;# 
  2157  0D8C                     	;# 
  2158  0D8D                     	;# 
  2159  0D8E                     	;# 
  2160  0D8F                     	;# 
  2161  0D8F                     	;# 
  2162  0D90                     	;# 
  2163  0D91                     	;# 
  2164  0D92                     	;# 
  2165  0D92                     	;# 
  2166  0D93                     	;# 
  2167  0D94                     	;# 
  2168  0D95                     	;# 
  2169  0D95                     	;# 
  2170  0D96                     	;# 
  2171  0D97                     	;# 
  2172  0D98                     	;# 
  2173  0D99                     	;# 
  2174  0D9A                     	;# 
  2175  0D9B                     	;# 
  2176  0D9C                     	;# 
  2177  0D9D                     	;# 
  2178  0D9E                     	;# 
  2179  0D9E                     	;# 
  2180  0D9F                     	;# 
  2181  0DA0                     	;# 
  2182  0DA1                     	;# 
  2183  0DA1                     	;# 
  2184  0DA2                     	;# 
  2185  0DA3                     	;# 
  2186  0DA4                     	;# 
  2187  0DA4                     	;# 
  2188  0DA5                     	;# 
  2189  0DA6                     	;# 
  2190  0DA7                     	;# 
  2191  0DA7                     	;# 
  2192  0DA8                     	;# 
  2193  0DA9                     	;# 
  2194  0DAA                     	;# 
  2195  0DAB                     	;# 
  2196  0DAC                     	;# 
  2197  0DAD                     	;# 
  2198  0DAE                     	;# 
  2199  0DAF                     	;# 
  2200  0E0F                     	;# 
  2201  0E10                     	;# 
  2202  0E11                     	;# 
  2203  0E12                     	;# 
  2204  0E13                     	;# 
  2205  0E14                     	;# 
  2206  0E15                     	;# 
  2207  0E16                     	;# 
  2208  0E17                     	;# 
  2209  0E18                     	;# 
  2210  0E19                     	;# 
  2211  0E1A                     	;# 
  2212  0E1B                     	;# 
  2213  0E1C                     	;# 
  2214  0E1D                     	;# 
  2215  0E1E                     	;# 
  2216  0E1F                     	;# 
  2217  0E20                     	;# 
  2218  0E21                     	;# 
  2219  0E22                     	;# 
  2220  0E23                     	;# 
  2221  0E24                     	;# 
  2222  0E25                     	;# 
  2223  0E26                     	;# 
  2224  0E27                     	;# 
  2225  0E28                     	;# 
  2226  0E29                     	;# 
  2227  0E2A                     	;# 
  2228  0E2B                     	;# 
  2229  0E2C                     	;# 
  2230  0E2D                     	;# 
  2231  0E2E                     	;# 
  2232  0E90                     	;# 
  2233  0E91                     	;# 
  2234  0E92                     	;# 
  2235  0E94                     	;# 
  2236  0E95                     	;# 
  2237  0E9C                     	;# 
  2238  0E9D                     	;# 
  2239  0E9E                     	;# 
  2240  0E9F                     	;# 
  2241  0EA0                     	;# 
  2242  0EA1                     	;# 
  2243  0EA2                     	;# 
  2244  0EA3                     	;# 
  2245  0EA4                     	;# 
  2246  0EA5                     	;# 
  2247  0EA6                     	;# 
  2248  0EA7                     	;# 
  2249  0F0F                     	;# 
  2250  0F10                     	;# 
  2251  0F11                     	;# 
  2252  0F12                     	;# 
  2253  0F13                     	;# 
  2254  0F14                     	;# 
  2255  0F15                     	;# 
  2256  0F16                     	;# 
  2257  0F17                     	;# 
  2258  0F18                     	;# 
  2259  0F19                     	;# 
  2260  0F1A                     	;# 
  2261  0F1B                     	;# 
  2262  0F1C                     	;# 
  2263  0F1D                     	;# 
  2264  0F1E                     	;# 
  2265  0F1F                     	;# 
  2266  0F20                     	;# 
  2267  0F21                     	;# 
  2268  0F22                     	;# 
  2269  0F23                     	;# 
  2270  0F24                     	;# 
  2271  0F25                     	;# 
  2272  0F26                     	;# 
  2273  0F27                     	;# 
  2274  0F28                     	;# 
  2275  0F29                     	;# 
  2276  0F2A                     	;# 
  2277  0F2B                     	;# 
  2278  0F2C                     	;# 
  2279  0F2D                     	;# 
  2280  0F2E                     	;# 
  2281  0F2F                     	;# 
  2282  0F30                     	;# 
  2283  0F31                     	;# 
  2284  0F32                     	;# 
  2285  0F33                     	;# 
  2286  0F34                     	;# 
  2287  0F35                     	;# 
  2288  0F36                     	;# 
  2289  0F37                     	;# 
  2290  0FE4                     	;# 
  2291  0FE5                     	;# 
  2292  0FE6                     	;# 
  2293  0FE7                     	;# 
  2294  0FE8                     	;# 
  2295  0FE9                     	;# 
  2296  0FEA                     	;# 
  2297  0FEB                     	;# 
  2298  0FED                     	;# 
  2299  0FEE                     	;# 
  2300  0FEF                     	;# 
  2301  0000                     	;# 
  2302  0001                     	;# 
  2303  0002                     	;# 
  2304  0003                     	;# 
  2305  0004                     	;# 
  2306  0005                     	;# 
  2307  0006                     	;# 
  2308  0007                     	;# 
  2309  0008                     	;# 
  2310  0009                     	;# 
  2311  000A                     	;# 
  2312  000B                     	;# 
  2313  000C                     	;# 
  2314  000D                     	;# 
  2315  000E                     	;# 
  2316  0010                     	;# 
  2317  0011                     	;# 
  2318  0012                     	;# 
  2319  0013                     	;# 
  2320  0014                     	;# 
  2321  0015                     	;# 
  2322  0016                     	;# 
  2323  0016                     	;# 
  2324  0017                     	;# 
  2325  0018                     	;# 
  2326  0019                     	;# 
  2327  001A                     	;# 
  2328  001A                     	;# 
  2329  001B                     	;# 
  2330  001B                     	;# 
  2331  001C                     	;# 
  2332  001D                     	;# 
  2333  001E                     	;# 
  2334  001F                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  0090                     	;# 
  2339  0091                     	;# 
  2340  0092                     	;# 
  2341  0093                     	;# 
  2342  0094                     	;# 
  2343  0095                     	;# 
  2344  0096                     	;# 
  2345  0098                     	;# 
  2346  0099                     	;# 
  2347  009A                     	;# 
  2348  009B                     	;# 
  2349  009B                     	;# 
  2350  009C                     	;# 
  2351  009D                     	;# 
  2352  009E                     	;# 
  2353  009F                     	;# 
  2354  010C                     	;# 
  2355  010D                     	;# 
  2356  010E                     	;# 
  2357  0111                     	;# 
  2358  0112                     	;# 
  2359  0113                     	;# 
  2360  0114                     	;# 
  2361  0115                     	;# 
  2362  0116                     	;# 
  2363  0117                     	;# 
  2364  0118                     	;# 
  2365  0119                     	;# 
  2366  011C                     	;# 
  2367  018C                     	;# 
  2368  018D                     	;# 
  2369  018E                     	;# 
  2370  0191                     	;# 
  2371  0191                     	;# 
  2372  0192                     	;# 
  2373  0193                     	;# 
  2374  0193                     	;# 
  2375  0194                     	;# 
  2376  0195                     	;# 
  2377  0196                     	;# 
  2378  0197                     	;# 
  2379  0199                     	;# 
  2380  0199                     	;# 
  2381  0199                     	;# 
  2382  019A                     	;# 
  2383  019A                     	;# 
  2384  019A                     	;# 
  2385  019B                     	;# 
  2386  019B                     	;# 
  2387  019B                     	;# 
  2388  019B                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  019C                     	;# 
  2392  019C                     	;# 
  2393  019D                     	;# 
  2394  019D                     	;# 
  2395  019D                     	;# 
  2396  019E                     	;# 
  2397  019E                     	;# 
  2398  019E                     	;# 
  2399  019F                     	;# 
  2400  019F                     	;# 
  2401  019F                     	;# 
  2402  019F                     	;# 
  2403  019F                     	;# 
  2404  020C                     	;# 
  2405  020D                     	;# 
  2406  020E                     	;# 
  2407  0211                     	;# 
  2408  0211                     	;# 
  2409  0212                     	;# 
  2410  0212                     	;# 
  2411  0213                     	;# 
  2412  0213                     	;# 
  2413  0214                     	;# 
  2414  0214                     	;# 
  2415  0215                     	;# 
  2416  0215                     	;# 
  2417  0215                     	;# 
  2418  0215                     	;# 
  2419  0216                     	;# 
  2420  0216                     	;# 
  2421  0217                     	;# 
  2422  0217                     	;# 
  2423  028C                     	;# 
  2424  028D                     	;# 
  2425  028E                     	;# 
  2426  0291                     	;# 
  2427  0291                     	;# 
  2428  0292                     	;# 
  2429  0293                     	;# 
  2430  0294                     	;# 
  2431  0298                     	;# 
  2432  0298                     	;# 
  2433  0299                     	;# 
  2434  029A                     	;# 
  2435  029B                     	;# 
  2436  029E                     	;# 
  2437  030C                     	;# 
  2438  030D                     	;# 
  2439  030E                     	;# 
  2440  038C                     	;# 
  2441  038D                     	;# 
  2442  038E                     	;# 
  2443  0391                     	;# 
  2444  0392                     	;# 
  2445  0393                     	;# 
  2446  0394                     	;# 
  2447  0395                     	;# 
  2448  0396                     	;# 
  2449  0397                     	;# 
  2450  0398                     	;# 
  2451  0399                     	;# 
  2452  040E                     	;# 
  2453  0413                     	;# 
  2454  0413                     	;# 
  2455  0414                     	;# 
  2456  0414                     	;# 
  2457  0415                     	;# 
  2458  0416                     	;# 
  2459  0417                     	;# 
  2460  0418                     	;# 
  2461  041A                     	;# 
  2462  041A                     	;# 
  2463  041B                     	;# 
  2464  041B                     	;# 
  2465  041C                     	;# 
  2466  041D                     	;# 
  2467  041E                     	;# 
  2468  041F                     	;# 
  2469  0493                     	;# 
  2470  0494                     	;# 
  2471  0495                     	;# 
  2472  0496                     	;# 
  2473  049A                     	;# 
  2474  049B                     	;# 
  2475  049C                     	;# 
  2476  049D                     	;# 
  2477  058C                     	;# 
  2478  058C                     	;# 
  2479  058D                     	;# 
  2480  058E                     	;# 
  2481  058E                     	;# 
  2482  058F                     	;# 
  2483  0590                     	;# 
  2484  0590                     	;# 
  2485  0591                     	;# 
  2486  0592                     	;# 
  2487  0592                     	;# 
  2488  0593                     	;# 
  2489  0594                     	;# 
  2490  0594                     	;# 
  2491  0595                     	;# 
  2492  0596                     	;# 
  2493  0596                     	;# 
  2494  0597                     	;# 
  2495  0598                     	;# 
  2496  0599                     	;# 
  2497  059A                     	;# 
  2498  059B                     	;# 
  2499  059B                     	;# 
  2500  059C                     	;# 
  2501  059D                     	;# 
  2502  060C                     	;# 
  2503  060C                     	;# 
  2504  060D                     	;# 
  2505  060E                     	;# 
  2506  060F                     	;# 
  2507  060F                     	;# 
  2508  0610                     	;# 
  2509  0611                     	;# 
  2510  0612                     	;# 
  2511  0613                     	;# 
  2512  0614                     	;# 
  2513  0617                     	;# 
  2514  0618                     	;# 
  2515  0619                     	;# 
  2516  061A                     	;# 
  2517  061B                     	;# 
  2518  061C                     	;# 
  2519  0691                     	;# 
  2520  0692                     	;# 
  2521  0693                     	;# 
  2522  0694                     	;# 
  2523  0695                     	;# 
  2524  0696                     	;# 
  2525  0697                     	;# 
  2526  0699                     	;# 
  2527  069A                     	;# 
  2528  0711                     	;# 
  2529  0712                     	;# 
  2530  0713                     	;# 
  2531  0714                     	;# 
  2532  0715                     	;# 
  2533  0718                     	;# 
  2534  0718                     	;# 
  2535  0719                     	;# 
  2536  071A                     	;# 
  2537  071A                     	;# 
  2538  071B                     	;# 
  2539  071C                     	;# 
  2540  071D                     	;# 
  2541  0791                     	;# 
  2542  0791                     	;# 
  2543  0792                     	;# 
  2544  0793                     	;# 
  2545  0793                     	;# 
  2546  0794                     	;# 
  2547  0795                     	;# 
  2548  0795                     	;# 
  2549  0796                     	;# 
  2550  0797                     	;# 
  2551  0797                     	;# 
  2552  0798                     	;# 
  2553  0799                     	;# 
  2554  079A                     	;# 
  2555  080C                     	;# 
  2556  080C                     	;# 
  2557  080D                     	;# 
  2558  080E                     	;# 
  2559  080E                     	;# 
  2560  080F                     	;# 
  2561  0810                     	;# 
  2562  0810                     	;# 
  2563  0811                     	;# 
  2564  0812                     	;# 
  2565  0812                     	;# 
  2566  0813                     	;# 
  2567  0814                     	;# 
  2568  0815                     	;# 
  2569  0816                     	;# 
  2570  0817                     	;# 
  2571  0818                     	;# 
  2572  0819                     	;# 
  2573  081A                     	;# 
  2574  081A                     	;# 
  2575  081B                     	;# 
  2576  081C                     	;# 
  2577  081C                     	;# 
  2578  081D                     	;# 
  2579  088C                     	;# 
  2580  088D                     	;# 
  2581  088E                     	;# 
  2582  088F                     	;# 
  2583  088F                     	;# 
  2584  0890                     	;# 
  2585  0891                     	;# 
  2586  0892                     	;# 
  2587  0893                     	;# 
  2588  0893                     	;# 
  2589  0894                     	;# 
  2590  0895                     	;# 
  2591  0896                     	;# 
  2592  0897                     	;# 
  2593  0897                     	;# 
  2594  0898                     	;# 
  2595  0899                     	;# 
  2596  0D8C                     	;# 
  2597  0D8C                     	;# 
  2598  0D8D                     	;# 
  2599  0D8E                     	;# 
  2600  0D8F                     	;# 
  2601  0D8F                     	;# 
  2602  0D90                     	;# 
  2603  0D91                     	;# 
  2604  0D92                     	;# 
  2605  0D92                     	;# 
  2606  0D93                     	;# 
  2607  0D94                     	;# 
  2608  0D95                     	;# 
  2609  0D95                     	;# 
  2610  0D96                     	;# 
  2611  0D97                     	;# 
  2612  0D98                     	;# 
  2613  0D99                     	;# 
  2614  0D9A                     	;# 
  2615  0D9B                     	;# 
  2616  0D9C                     	;# 
  2617  0D9D                     	;# 
  2618  0D9E                     	;# 
  2619  0D9E                     	;# 
  2620  0D9F                     	;# 
  2621  0DA0                     	;# 
  2622  0DA1                     	;# 
  2623  0DA1                     	;# 
  2624  0DA2                     	;# 
  2625  0DA3                     	;# 
  2626  0DA4                     	;# 
  2627  0DA4                     	;# 
  2628  0DA5                     	;# 
  2629  0DA6                     	;# 
  2630  0DA7                     	;# 
  2631  0DA7                     	;# 
  2632  0DA8                     	;# 
  2633  0DA9                     	;# 
  2634  0DAA                     	;# 
  2635  0DAB                     	;# 
  2636  0DAC                     	;# 
  2637  0DAD                     	;# 
  2638  0DAE                     	;# 
  2639  0DAF                     	;# 
  2640  0E0F                     	;# 
  2641  0E10                     	;# 
  2642  0E11                     	;# 
  2643  0E12                     	;# 
  2644  0E13                     	;# 
  2645  0E14                     	;# 
  2646  0E15                     	;# 
  2647  0E16                     	;# 
  2648  0E17                     	;# 
  2649  0E18                     	;# 
  2650  0E19                     	;# 
  2651  0E1A                     	;# 
  2652  0E1B                     	;# 
  2653  0E1C                     	;# 
  2654  0E1D                     	;# 
  2655  0E1E                     	;# 
  2656  0E1F                     	;# 
  2657  0E20                     	;# 
  2658  0E21                     	;# 
  2659  0E22                     	;# 
  2660  0E23                     	;# 
  2661  0E24                     	;# 
  2662  0E25                     	;# 
  2663  0E26                     	;# 
  2664  0E27                     	;# 
  2665  0E28                     	;# 
  2666  0E29                     	;# 
  2667  0E2A                     	;# 
  2668  0E2B                     	;# 
  2669  0E2C                     	;# 
  2670  0E2D                     	;# 
  2671  0E2E                     	;# 
  2672  0E90                     	;# 
  2673  0E91                     	;# 
  2674  0E92                     	;# 
  2675  0E94                     	;# 
  2676  0E95                     	;# 
  2677  0E9C                     	;# 
  2678  0E9D                     	;# 
  2679  0E9E                     	;# 
  2680  0E9F                     	;# 
  2681  0EA0                     	;# 
  2682  0EA1                     	;# 
  2683  0EA2                     	;# 
  2684  0EA3                     	;# 
  2685  0EA4                     	;# 
  2686  0EA5                     	;# 
  2687  0EA6                     	;# 
  2688  0EA7                     	;# 
  2689  0F0F                     	;# 
  2690  0F10                     	;# 
  2691  0F11                     	;# 
  2692  0F12                     	;# 
  2693  0F13                     	;# 
  2694  0F14                     	;# 
  2695  0F15                     	;# 
  2696  0F16                     	;# 
  2697  0F17                     	;# 
  2698  0F18                     	;# 
  2699  0F19                     	;# 
  2700  0F1A                     	;# 
  2701  0F1B                     	;# 
  2702  0F1C                     	;# 
  2703  0F1D                     	;# 
  2704  0F1E                     	;# 
  2705  0F1F                     	;# 
  2706  0F20                     	;# 
  2707  0F21                     	;# 
  2708  0F22                     	;# 
  2709  0F23                     	;# 
  2710  0F24                     	;# 
  2711  0F25                     	;# 
  2712  0F26                     	;# 
  2713  0F27                     	;# 
  2714  0F28                     	;# 
  2715  0F29                     	;# 
  2716  0F2A                     	;# 
  2717  0F2B                     	;# 
  2718  0F2C                     	;# 
  2719  0F2D                     	;# 
  2720  0F2E                     	;# 
  2721  0F2F                     	;# 
  2722  0F30                     	;# 
  2723  0F31                     	;# 
  2724  0F32                     	;# 
  2725  0F33                     	;# 
  2726  0F34                     	;# 
  2727  0F35                     	;# 
  2728  0F36                     	;# 
  2729  0F37                     	;# 
  2730  0FE4                     	;# 
  2731  0FE5                     	;# 
  2732  0FE6                     	;# 
  2733  0FE7                     	;# 
  2734  0FE8                     	;# 
  2735  0FE9                     	;# 
  2736  0FEA                     	;# 
  2737  0FEB                     	;# 
  2738  0FED                     	;# 
  2739  0FEE                     	;# 
  2740  0FEF                     	;# 
  2741  0000                     	;# 
  2742  0001                     	;# 
  2743  0002                     	;# 
  2744  0003                     	;# 
  2745  0004                     	;# 
  2746  0005                     	;# 
  2747  0006                     	;# 
  2748  0007                     	;# 
  2749  0008                     	;# 
  2750  0009                     	;# 
  2751  000A                     	;# 
  2752  000B                     	;# 
  2753  000C                     	;# 
  2754  000D                     	;# 
  2755  000E                     	;# 
  2756  0010                     	;# 
  2757  0011                     	;# 
  2758  0012                     	;# 
  2759  0013                     	;# 
  2760  0014                     	;# 
  2761  0015                     	;# 
  2762  0016                     	;# 
  2763  0016                     	;# 
  2764  0017                     	;# 
  2765  0018                     	;# 
  2766  0019                     	;# 
  2767  001A                     	;# 
  2768  001A                     	;# 
  2769  001B                     	;# 
  2770  001B                     	;# 
  2771  001C                     	;# 
  2772  001D                     	;# 
  2773  001E                     	;# 
  2774  001F                     	;# 
  2775  008C                     	;# 
  2776  008D                     	;# 
  2777  008E                     	;# 
  2778  0090                     	;# 
  2779  0091                     	;# 
  2780  0092                     	;# 
  2781  0093                     	;# 
  2782  0094                     	;# 
  2783  0095                     	;# 
  2784  0096                     	;# 
  2785  0098                     	;# 
  2786  0099                     	;# 
  2787  009A                     	;# 
  2788  009B                     	;# 
  2789  009B                     	;# 
  2790  009C                     	;# 
  2791  009D                     	;# 
  2792  009E                     	;# 
  2793  009F                     	;# 
  2794  010C                     	;# 
  2795  010D                     	;# 
  2796  010E                     	;# 
  2797  0111                     	;# 
  2798  0112                     	;# 
  2799  0113                     	;# 
  2800  0114                     	;# 
  2801  0115                     	;# 
  2802  0116                     	;# 
  2803  0117                     	;# 
  2804  0118                     	;# 
  2805  0119                     	;# 
  2806  011C                     	;# 
  2807  018C                     	;# 
  2808  018D                     	;# 
  2809  018E                     	;# 
  2810  0191                     	;# 
  2811  0191                     	;# 
  2812  0192                     	;# 
  2813  0193                     	;# 
  2814  0193                     	;# 
  2815  0194                     	;# 
  2816  0195                     	;# 
  2817  0196                     	;# 
  2818  0197                     	;# 
  2819  0199                     	;# 
  2820  0199                     	;# 
  2821  0199                     	;# 
  2822  019A                     	;# 
  2823  019A                     	;# 
  2824  019A                     	;# 
  2825  019B                     	;# 
  2826  019B                     	;# 
  2827  019B                     	;# 
  2828  019B                     	;# 
  2829  019B                     	;# 
  2830  019C                     	;# 
  2831  019C                     	;# 
  2832  019C                     	;# 
  2833  019D                     	;# 
  2834  019D                     	;# 
  2835  019D                     	;# 
  2836  019E                     	;# 
  2837  019E                     	;# 
  2838  019E                     	;# 
  2839  019F                     	;# 
  2840  019F                     	;# 
  2841  019F                     	;# 
  2842  019F                     	;# 
  2843  019F                     	;# 
  2844  020C                     	;# 
  2845  020D                     	;# 
  2846  020E                     	;# 
  2847  0211                     	;# 
  2848  0211                     	;# 
  2849  0212                     	;# 
  2850  0212                     	;# 
  2851  0213                     	;# 
  2852  0213                     	;# 
  2853  0214                     	;# 
  2854  0214                     	;# 
  2855  0215                     	;# 
  2856  0215                     	;# 
  2857  0215                     	;# 
  2858  0215                     	;# 
  2859  0216                     	;# 
  2860  0216                     	;# 
  2861  0217                     	;# 
  2862  0217                     	;# 
  2863  028C                     	;# 
  2864  028D                     	;# 
  2865  028E                     	;# 
  2866  0291                     	;# 
  2867  0291                     	;# 
  2868  0292                     	;# 
  2869  0293                     	;# 
  2870  0294                     	;# 
  2871  0298                     	;# 
  2872  0298                     	;# 
  2873  0299                     	;# 
  2874  029A                     	;# 
  2875  029B                     	;# 
  2876  029E                     	;# 
  2877  030C                     	;# 
  2878  030D                     	;# 
  2879  030E                     	;# 
  2880  038C                     	;# 
  2881  038D                     	;# 
  2882  038E                     	;# 
  2883  0391                     	;# 
  2884  0392                     	;# 
  2885  0393                     	;# 
  2886  0394                     	;# 
  2887  0395                     	;# 
  2888  0396                     	;# 
  2889  0397                     	;# 
  2890  0398                     	;# 
  2891  0399                     	;# 
  2892  040E                     	;# 
  2893  0413                     	;# 
  2894  0413                     	;# 
  2895  0414                     	;# 
  2896  0414                     	;# 
  2897  0415                     	;# 
  2898  0416                     	;# 
  2899  0417                     	;# 
  2900  0418                     	;# 
  2901  041A                     	;# 
  2902  041A                     	;# 
  2903  041B                     	;# 
  2904  041B                     	;# 
  2905  041C                     	;# 
  2906  041D                     	;# 
  2907  041E                     	;# 
  2908  041F                     	;# 
  2909  0493                     	;# 
  2910  0494                     	;# 
  2911  0495                     	;# 
  2912  0496                     	;# 
  2913  049A                     	;# 
  2914  049B                     	;# 
  2915  049C                     	;# 
  2916  049D                     	;# 
  2917  058C                     	;# 
  2918  058C                     	;# 
  2919  058D                     	;# 
  2920  058E                     	;# 
  2921  058E                     	;# 
  2922  058F                     	;# 
  2923  0590                     	;# 
  2924  0590                     	;# 
  2925  0591                     	;# 
  2926  0592                     	;# 
  2927  0592                     	;# 
  2928  0593                     	;# 
  2929  0594                     	;# 
  2930  0594                     	;# 
  2931  0595                     	;# 
  2932  0596                     	;# 
  2933  0596                     	;# 
  2934  0597                     	;# 
  2935  0598                     	;# 
  2936  0599                     	;# 
  2937  059A                     	;# 
  2938  059B                     	;# 
  2939  059B                     	;# 
  2940  059C                     	;# 
  2941  059D                     	;# 
  2942  060C                     	;# 
  2943  060C                     	;# 
  2944  060D                     	;# 
  2945  060E                     	;# 
  2946  060F                     	;# 
  2947  060F                     	;# 
  2948  0610                     	;# 
  2949  0611                     	;# 
  2950  0612                     	;# 
  2951  0613                     	;# 
  2952  0614                     	;# 
  2953  0617                     	;# 
  2954  0618                     	;# 
  2955  0619                     	;# 
  2956  061A                     	;# 
  2957  061B                     	;# 
  2958  061C                     	;# 
  2959  0691                     	;# 
  2960  0692                     	;# 
  2961  0693                     	;# 
  2962  0694                     	;# 
  2963  0695                     	;# 
  2964  0696                     	;# 
  2965  0697                     	;# 
  2966  0699                     	;# 
  2967  069A                     	;# 
  2968  0711                     	;# 
  2969  0712                     	;# 
  2970  0713                     	;# 
  2971  0714                     	;# 
  2972  0715                     	;# 
  2973  0718                     	;# 
  2974  0718                     	;# 
  2975  0719                     	;# 
  2976  071A                     	;# 
  2977  071A                     	;# 
  2978  071B                     	;# 
  2979  071C                     	;# 
  2980  071D                     	;# 
  2981  0791                     	;# 
  2982  0791                     	;# 
  2983  0792                     	;# 
  2984  0793                     	;# 
  2985  0793                     	;# 
  2986  0794                     	;# 
  2987  0795                     	;# 
  2988  0795                     	;# 
  2989  0796                     	;# 
  2990  0797                     	;# 
  2991  0797                     	;# 
  2992  0798                     	;# 
  2993  0799                     	;# 
  2994  079A                     	;# 
  2995  080C                     	;# 
  2996  080C                     	;# 
  2997  080D                     	;# 
  2998  080E                     	;# 
  2999  080E                     	;# 
  3000  080F                     	;# 
  3001  0810                     	;# 
  3002  0810                     	;# 
  3003  0811                     	;# 
  3004  0812                     	;# 
  3005  0812                     	;# 
  3006  0813                     	;# 
  3007  0814                     	;# 
  3008  0815                     	;# 
  3009  0816                     	;# 
  3010  0817                     	;# 
  3011  0818                     	;# 
  3012  0819                     	;# 
  3013  081A                     	;# 
  3014  081A                     	;# 
  3015  081B                     	;# 
  3016  081C                     	;# 
  3017  081C                     	;# 
  3018  081D                     	;# 
  3019  088C                     	;# 
  3020  088D                     	;# 
  3021  088E                     	;# 
  3022  088F                     	;# 
  3023  088F                     	;# 
  3024  0890                     	;# 
  3025  0891                     	;# 
  3026  0892                     	;# 
  3027  0893                     	;# 
  3028  0893                     	;# 
  3029  0894                     	;# 
  3030  0895                     	;# 
  3031  0896                     	;# 
  3032  0897                     	;# 
  3033  0897                     	;# 
  3034  0898                     	;# 
  3035  0899                     	;# 
  3036  0D8C                     	;# 
  3037  0D8C                     	;# 
  3038  0D8D                     	;# 
  3039  0D8E                     	;# 
  3040  0D8F                     	;# 
  3041  0D8F                     	;# 
  3042  0D90                     	;# 
  3043  0D91                     	;# 
  3044  0D92                     	;# 
  3045  0D92                     	;# 
  3046  0D93                     	;# 
  3047  0D94                     	;# 
  3048  0D95                     	;# 
  3049  0D95                     	;# 
  3050  0D96                     	;# 
  3051  0D97                     	;# 
  3052  0D98                     	;# 
  3053  0D99                     	;# 
  3054  0D9A                     	;# 
  3055  0D9B                     	;# 
  3056  0D9C                     	;# 
  3057  0D9D                     	;# 
  3058  0D9E                     	;# 
  3059  0D9E                     	;# 
  3060  0D9F                     	;# 
  3061  0DA0                     	;# 
  3062  0DA1                     	;# 
  3063  0DA1                     	;# 
  3064  0DA2                     	;# 
  3065  0DA3                     	;# 
  3066  0DA4                     	;# 
  3067  0DA4                     	;# 
  3068  0DA5                     	;# 
  3069  0DA6                     	;# 
  3070  0DA7                     	;# 
  3071  0DA7                     	;# 
  3072  0DA8                     	;# 
  3073  0DA9                     	;# 
  3074  0DAA                     	;# 
  3075  0DAB                     	;# 
  3076  0DAC                     	;# 
  3077  0DAD                     	;# 
  3078  0DAE                     	;# 
  3079  0DAF                     	;# 
  3080  0E0F                     	;# 
  3081  0E10                     	;# 
  3082  0E11                     	;# 
  3083  0E12                     	;# 
  3084  0E13                     	;# 
  3085  0E14                     	;# 
  3086  0E15                     	;# 
  3087  0E16                     	;# 
  3088  0E17                     	;# 
  3089  0E18                     	;# 
  3090  0E19                     	;# 
  3091  0E1A                     	;# 
  3092  0E1B                     	;# 
  3093  0E1C                     	;# 
  3094  0E1D                     	;# 
  3095  0E1E                     	;# 
  3096  0E1F                     	;# 
  3097  0E20                     	;# 
  3098  0E21                     	;# 
  3099  0E22                     	;# 
  3100  0E23                     	;# 
  3101  0E24                     	;# 
  3102  0E25                     	;# 
  3103  0E26                     	;# 
  3104  0E27                     	;# 
  3105  0E28                     	;# 
  3106  0E29                     	;# 
  3107  0E2A                     	;# 
  3108  0E2B                     	;# 
  3109  0E2C                     	;# 
  3110  0E2D                     	;# 
  3111  0E2E                     	;# 
  3112  0E90                     	;# 
  3113  0E91                     	;# 
  3114  0E92                     	;# 
  3115  0E94                     	;# 
  3116  0E95                     	;# 
  3117  0E9C                     	;# 
  3118  0E9D                     	;# 
  3119  0E9E                     	;# 
  3120  0E9F                     	;# 
  3121  0EA0                     	;# 
  3122  0EA1                     	;# 
  3123  0EA2                     	;# 
  3124  0EA3                     	;# 
  3125  0EA4                     	;# 
  3126  0EA5                     	;# 
  3127  0EA6                     	;# 
  3128  0EA7                     	;# 
  3129  0F0F                     	;# 
  3130  0F10                     	;# 
  3131  0F11                     	;# 
  3132  0F12                     	;# 
  3133  0F13                     	;# 
  3134  0F14                     	;# 
  3135  0F15                     	;# 
  3136  0F16                     	;# 
  3137  0F17                     	;# 
  3138  0F18                     	;# 
  3139  0F19                     	;# 
  3140  0F1A                     	;# 
  3141  0F1B                     	;# 
  3142  0F1C                     	;# 
  3143  0F1D                     	;# 
  3144  0F1E                     	;# 
  3145  0F1F                     	;# 
  3146  0F20                     	;# 
  3147  0F21                     	;# 
  3148  0F22                     	;# 
  3149  0F23                     	;# 
  3150  0F24                     	;# 
  3151  0F25                     	;# 
  3152  0F26                     	;# 
  3153  0F27                     	;# 
  3154  0F28                     	;# 
  3155  0F29                     	;# 
  3156  0F2A                     	;# 
  3157  0F2B                     	;# 
  3158  0F2C                     	;# 
  3159  0F2D                     	;# 
  3160  0F2E                     	;# 
  3161  0F2F                     	;# 
  3162  0F30                     	;# 
  3163  0F31                     	;# 
  3164  0F32                     	;# 
  3165  0F33                     	;# 
  3166  0F34                     	;# 
  3167  0F35                     	;# 
  3168  0F36                     	;# 
  3169  0F37                     	;# 
  3170  0FE4                     	;# 
  3171  0FE5                     	;# 
  3172  0FE6                     	;# 
  3173  0FE7                     	;# 
  3174  0FE8                     	;# 
  3175  0FE9                     	;# 
  3176  0FEA                     	;# 
  3177  0FEB                     	;# 
  3178  0FED                     	;# 
  3179  0FEE                     	;# 
  3180  0FEF                     	;# 
  3181  0000                     	;# 
  3182  0001                     	;# 
  3183  0002                     	;# 
  3184  0003                     	;# 
  3185  0004                     	;# 
  3186  0005                     	;# 
  3187  0006                     	;# 
  3188  0007                     	;# 
  3189  0008                     	;# 
  3190  0009                     	;# 
  3191  000A                     	;# 
  3192  000B                     	;# 
  3193  000C                     	;# 
  3194  000D                     	;# 
  3195  000E                     	;# 
  3196  0010                     	;# 
  3197  0011                     	;# 
  3198  0012                     	;# 
  3199  0013                     	;# 
  3200  0014                     	;# 
  3201  0015                     	;# 
  3202  0016                     	;# 
  3203  0016                     	;# 
  3204  0017                     	;# 
  3205  0018                     	;# 
  3206  0019                     	;# 
  3207  001A                     	;# 
  3208  001A                     	;# 
  3209  001B                     	;# 
  3210  001B                     	;# 
  3211  001C                     	;# 
  3212  001D                     	;# 
  3213  001E                     	;# 
  3214  001F                     	;# 
  3215  008C                     	;# 
  3216  008D                     	;# 
  3217  008E                     	;# 
  3218  0090                     	;# 
  3219  0091                     	;# 
  3220  0092                     	;# 
  3221  0093                     	;# 
  3222  0094                     	;# 
  3223  0095                     	;# 
  3224  0096                     	;# 
  3225  0098                     	;# 
  3226  0099                     	;# 
  3227  009A                     	;# 
  3228  009B                     	;# 
  3229  009B                     	;# 
  3230  009C                     	;# 
  3231  009D                     	;# 
  3232  009E                     	;# 
  3233  009F                     	;# 
  3234  010C                     	;# 
  3235  010D                     	;# 
  3236  010E                     	;# 
  3237  0111                     	;# 
  3238  0112                     	;# 
  3239  0113                     	;# 
  3240  0114                     	;# 
  3241  0115                     	;# 
  3242  0116                     	;# 
  3243  0117                     	;# 
  3244  0118                     	;# 
  3245  0119                     	;# 
  3246  011C                     	;# 
  3247  018C                     	;# 
  3248  018D                     	;# 
  3249  018E                     	;# 
  3250  0191                     	;# 
  3251  0191                     	;# 
  3252  0192                     	;# 
  3253  0193                     	;# 
  3254  0193                     	;# 
  3255  0194                     	;# 
  3256  0195                     	;# 
  3257  0196                     	;# 
  3258  0197                     	;# 
  3259  0199                     	;# 
  3260  0199                     	;# 
  3261  0199                     	;# 
  3262  019A                     	;# 
  3263  019A                     	;# 
  3264  019A                     	;# 
  3265  019B                     	;# 
  3266  019B                     	;# 
  3267  019B                     	;# 
  3268  019B                     	;# 
  3269  019B                     	;# 
  3270  019C                     	;# 
  3271  019C                     	;# 
  3272  019C                     	;# 
  3273  019D                     	;# 
  3274  019D                     	;# 
  3275  019D                     	;# 
  3276  019E                     	;# 
  3277  019E                     	;# 
  3278  019E                     	;# 
  3279  019F                     	;# 
  3280  019F                     	;# 
  3281  019F                     	;# 
  3282  019F                     	;# 
  3283  019F                     	;# 
  3284  020C                     	;# 
  3285  020D                     	;# 
  3286  020E                     	;# 
  3287  0211                     	;# 
  3288  0211                     	;# 
  3289  0212                     	;# 
  3290  0212                     	;# 
  3291  0213                     	;# 
  3292  0213                     	;# 
  3293  0214                     	;# 
  3294  0214                     	;# 
  3295  0215                     	;# 
  3296  0215                     	;# 
  3297  0215                     	;# 
  3298  0215                     	;# 
  3299  0216                     	;# 
  3300  0216                     	;# 
  3301  0217                     	;# 
  3302  0217                     	;# 
  3303  028C                     	;# 
  3304  028D                     	;# 
  3305  028E                     	;# 
  3306  0291                     	;# 
  3307  0291                     	;# 
  3308  0292                     	;# 
  3309  0293                     	;# 
  3310  0294                     	;# 
  3311  0298                     	;# 
  3312  0298                     	;# 
  3313  0299                     	;# 
  3314  029A                     	;# 
  3315  029B                     	;# 
  3316  029E                     	;# 
  3317  030C                     	;# 
  3318  030D                     	;# 
  3319  030E                     	;# 
  3320  038C                     	;# 
  3321  038D                     	;# 
  3322  038E                     	;# 
  3323  0391                     	;# 
  3324  0392                     	;# 
  3325  0393                     	;# 
  3326  0394                     	;# 
  3327  0395                     	;# 
  3328  0396                     	;# 
  3329  0397                     	;# 
  3330  0398                     	;# 
  3331  0399                     	;# 
  3332  040E                     	;# 
  3333  0413                     	;# 
  3334  0413                     	;# 
  3335  0414                     	;# 
  3336  0414                     	;# 
  3337  0415                     	;# 
  3338  0416                     	;# 
  3339  0417                     	;# 
  3340  0418                     	;# 
  3341  041A                     	;# 
  3342  041A                     	;# 
  3343  041B                     	;# 
  3344  041B                     	;# 
  3345  041C                     	;# 
  3346  041D                     	;# 
  3347  041E                     	;# 
  3348  041F                     	;# 
  3349  0493                     	;# 
  3350  0494                     	;# 
  3351  0495                     	;# 
  3352  0496                     	;# 
  3353  049A                     	;# 
  3354  049B                     	;# 
  3355  049C                     	;# 
  3356  049D                     	;# 
  3357  058C                     	;# 
  3358  058C                     	;# 
  3359  058D                     	;# 
  3360  058E                     	;# 
  3361  058E                     	;# 
  3362  058F                     	;# 
  3363  0590                     	;# 
  3364  0590                     	;# 
  3365  0591                     	;# 
  3366  0592                     	;# 
  3367  0592                     	;# 
  3368  0593                     	;# 
  3369  0594                     	;# 
  3370  0594                     	;# 
  3371  0595                     	;# 
  3372  0596                     	;# 
  3373  0596                     	;# 
  3374  0597                     	;# 
  3375  0598                     	;# 
  3376  0599                     	;# 
  3377  059A                     	;# 
  3378  059B                     	;# 
  3379  059B                     	;# 
  3380  059C                     	;# 
  3381  059D                     	;# 
  3382  060C                     	;# 
  3383  060C                     	;# 
  3384  060D                     	;# 
  3385  060E                     	;# 
  3386  060F                     	;# 
  3387  060F                     	;# 
  3388  0610                     	;# 
  3389  0611                     	;# 
  3390  0612                     	;# 
  3391  0613                     	;# 
  3392  0614                     	;# 
  3393  0617                     	;# 
  3394  0618                     	;# 
  3395  0619                     	;# 
  3396  061A                     	;# 
  3397  061B                     	;# 
  3398  061C                     	;# 
  3399  0691                     	;# 
  3400  0692                     	;# 
  3401  0693                     	;# 
  3402  0694                     	;# 
  3403  0695                     	;# 
  3404  0696                     	;# 
  3405  0697                     	;# 
  3406  0699                     	;# 
  3407  069A                     	;# 
  3408  0711                     	;# 
  3409  0712                     	;# 
  3410  0713                     	;# 
  3411  0714                     	;# 
  3412  0715                     	;# 
  3413  0718                     	;# 
  3414  0718                     	;# 
  3415  0719                     	;# 
  3416  071A                     	;# 
  3417  071A                     	;# 
  3418  071B                     	;# 
  3419  071C                     	;# 
  3420  071D                     	;# 
  3421  0791                     	;# 
  3422  0791                     	;# 
  3423  0792                     	;# 
  3424  0793                     	;# 
  3425  0793                     	;# 
  3426  0794                     	;# 
  3427  0795                     	;# 
  3428  0795                     	;# 
  3429  0796                     	;# 
  3430  0797                     	;# 
  3431  0797                     	;# 
  3432  0798                     	;# 
  3433  0799                     	;# 
  3434  079A                     	;# 
  3435  080C                     	;# 
  3436  080C                     	;# 
  3437  080D                     	;# 
  3438  080E                     	;# 
  3439  080E                     	;# 
  3440  080F                     	;# 
  3441  0810                     	;# 
  3442  0810                     	;# 
  3443  0811                     	;# 
  3444  0812                     	;# 
  3445  0812                     	;# 
  3446  0813                     	;# 
  3447  0814                     	;# 
  3448  0815                     	;# 
  3449  0816                     	;# 
  3450  0817                     	;# 
  3451  0818                     	;# 
  3452  0819                     	;# 
  3453  081A                     	;# 
  3454  081A                     	;# 
  3455  081B                     	;# 
  3456  081C                     	;# 
  3457  081C                     	;# 
  3458  081D                     	;# 
  3459  088C                     	;# 
  3460  088D                     	;# 
  3461  088E                     	;# 
  3462  088F                     	;# 
  3463  088F                     	;# 
  3464  0890                     	;# 
  3465  0891                     	;# 
  3466  0892                     	;# 
  3467  0893                     	;# 
  3468  0893                     	;# 
  3469  0894                     	;# 
  3470  0895                     	;# 
  3471  0896                     	;# 
  3472  0897                     	;# 
  3473  0897                     	;# 
  3474  0898                     	;# 
  3475  0899                     	;# 
  3476  0D8C                     	;# 
  3477  0D8C                     	;# 
  3478  0D8D                     	;# 
  3479  0D8E                     	;# 
  3480  0D8F                     	;# 
  3481  0D8F                     	;# 
  3482  0D90                     	;# 
  3483  0D91                     	;# 
  3484  0D92                     	;# 
  3485  0D92                     	;# 
  3486  0D93                     	;# 
  3487  0D94                     	;# 
  3488  0D95                     	;# 
  3489  0D95                     	;# 
  3490  0D96                     	;# 
  3491  0D97                     	;# 
  3492  0D98                     	;# 
  3493  0D99                     	;# 
  3494  0D9A                     	;# 
  3495  0D9B                     	;# 
  3496  0D9C                     	;# 
  3497  0D9D                     	;# 
  3498  0D9E                     	;# 
  3499  0D9E                     	;# 
  3500  0D9F                     	;# 
  3501  0DA0                     	;# 
  3502  0DA1                     	;# 
  3503  0DA1                     	;# 
  3504  0DA2                     	;# 
  3505  0DA3                     	;# 
  3506  0DA4                     	;# 
  3507  0DA4                     	;# 
  3508  0DA5                     	;# 
  3509  0DA6                     	;# 
  3510  0DA7                     	;# 
  3511  0DA7                     	;# 
  3512  0DA8                     	;# 
  3513  0DA9                     	;# 
  3514  0DAA                     	;# 
  3515  0DAB                     	;# 
  3516  0DAC                     	;# 
  3517  0DAD                     	;# 
  3518  0DAE                     	;# 
  3519  0DAF                     	;# 
  3520  0E0F                     	;# 
  3521  0E10                     	;# 
  3522  0E11                     	;# 
  3523  0E12                     	;# 
  3524  0E13                     	;# 
  3525  0E14                     	;# 
  3526  0E15                     	;# 
  3527  0E16                     	;# 
  3528  0E17                     	;# 
  3529  0E18                     	;# 
  3530  0E19                     	;# 
  3531  0E1A                     	;# 
  3532  0E1B                     	;# 
  3533  0E1C                     	;# 
  3534  0E1D                     	;# 
  3535  0E1E                     	;# 
  3536  0E1F                     	;# 
  3537  0E20                     	;# 
  3538  0E21                     	;# 
  3539  0E22                     	;# 
  3540  0E23                     	;# 
  3541  0E24                     	;# 
  3542  0E25                     	;# 
  3543  0E26                     	;# 
  3544  0E27                     	;# 
  3545  0E28                     	;# 
  3546  0E29                     	;# 
  3547  0E2A                     	;# 
  3548  0E2B                     	;# 
  3549  0E2C                     	;# 
  3550  0E2D                     	;# 
  3551  0E2E                     	;# 
  3552  0E90                     	;# 
  3553  0E91                     	;# 
  3554  0E92                     	;# 
  3555  0E94                     	;# 
  3556  0E95                     	;# 
  3557  0E9C                     	;# 
  3558  0E9D                     	;# 
  3559  0E9E                     	;# 
  3560  0E9F                     	;# 
  3561  0EA0                     	;# 
  3562  0EA1                     	;# 
  3563  0EA2                     	;# 
  3564  0EA3                     	;# 
  3565  0EA4                     	;# 
  3566  0EA5                     	;# 
  3567  0EA6                     	;# 
  3568  0EA7                     	;# 
  3569  0F0F                     	;# 
  3570  0F10                     	;# 
  3571  0F11                     	;# 
  3572  0F12                     	;# 
  3573  0F13                     	;# 
  3574  0F14                     	;# 
  3575  0F15                     	;# 
  3576  0F16                     	;# 
  3577  0F17                     	;# 
  3578  0F18                     	;# 
  3579  0F19                     	;# 
  3580  0F1A                     	;# 
  3581  0F1B                     	;# 
  3582  0F1C                     	;# 
  3583  0F1D                     	;# 
  3584  0F1E                     	;# 
  3585  0F1F                     	;# 
  3586  0F20                     	;# 
  3587  0F21                     	;# 
  3588  0F22                     	;# 
  3589  0F23                     	;# 
  3590  0F24                     	;# 
  3591  0F25                     	;# 
  3592  0F26                     	;# 
  3593  0F27                     	;# 
  3594  0F28                     	;# 
  3595  0F29                     	;# 
  3596  0F2A                     	;# 
  3597  0F2B                     	;# 
  3598  0F2C                     	;# 
  3599  0F2D                     	;# 
  3600  0F2E                     	;# 
  3601  0F2F                     	;# 
  3602  0F30                     	;# 
  3603  0F31                     	;# 
  3604  0F32                     	;# 
  3605  0F33                     	;# 
  3606  0F34                     	;# 
  3607  0F35                     	;# 
  3608  0F36                     	;# 
  3609  0F37                     	;# 
  3610  0FE4                     	;# 
  3611  0FE5                     	;# 
  3612  0FE6                     	;# 
  3613  0FE7                     	;# 
  3614  0FE8                     	;# 
  3615  0FE9                     	;# 
  3616  0FEA                     	;# 
  3617  0FEB                     	;# 
  3618  0FED                     	;# 
  3619  0FEE                     	;# 
  3620  0FEF                     	;# 
  3621  0000                     	;# 
  3622  0001                     	;# 
  3623  0002                     	;# 
  3624  0003                     	;# 
  3625  0004                     	;# 
  3626  0005                     	;# 
  3627  0006                     	;# 
  3628  0007                     	;# 
  3629  0008                     	;# 
  3630  0009                     	;# 
  3631  000A                     	;# 
  3632  000B                     	;# 
  3633  000C                     	;# 
  3634  000D                     	;# 
  3635  000E                     	;# 
  3636  0010                     	;# 
  3637  0011                     	;# 
  3638  0012                     	;# 
  3639  0013                     	;# 
  3640  0014                     	;# 
  3641  0015                     	;# 
  3642  0016                     	;# 
  3643  0016                     	;# 
  3644  0017                     	;# 
  3645  0018                     	;# 
  3646  0019                     	;# 
  3647  001A                     	;# 
  3648  001A                     	;# 
  3649  001B                     	;# 
  3650  001B                     	;# 
  3651  001C                     	;# 
  3652  001D                     	;# 
  3653  001E                     	;# 
  3654  001F                     	;# 
  3655  008C                     	;# 
  3656  008D                     	;# 
  3657  008E                     	;# 
  3658  0090                     	;# 
  3659  0091                     	;# 
  3660  0092                     	;# 
  3661  0093                     	;# 
  3662  0094                     	;# 
  3663  0095                     	;# 
  3664  0096                     	;# 
  3665  0098                     	;# 
  3666  0099                     	;# 
  3667  009A                     	;# 
  3668  009B                     	;# 
  3669  009B                     	;# 
  3670  009C                     	;# 
  3671  009D                     	;# 
  3672  009E                     	;# 
  3673  009F                     	;# 
  3674  010C                     	;# 
  3675  010D                     	;# 
  3676  010E                     	;# 
  3677  0111                     	;# 
  3678  0112                     	;# 
  3679  0113                     	;# 
  3680  0114                     	;# 
  3681  0115                     	;# 
  3682  0116                     	;# 
  3683  0117                     	;# 
  3684  0118                     	;# 
  3685  0119                     	;# 
  3686  011C                     	;# 
  3687  018C                     	;# 
  3688  018D                     	;# 
  3689  018E                     	;# 
  3690  0191                     	;# 
  3691  0191                     	;# 
  3692  0192                     	;# 
  3693  0193                     	;# 
  3694  0193                     	;# 
  3695  0194                     	;# 
  3696  0195                     	;# 
  3697  0196                     	;# 
  3698  0197                     	;# 
  3699  0199                     	;# 
  3700  0199                     	;# 
  3701  0199                     	;# 
  3702  019A                     	;# 
  3703  019A                     	;# 
  3704  019A                     	;# 
  3705  019B                     	;# 
  3706  019B                     	;# 
  3707  019B                     	;# 
  3708  019B                     	;# 
  3709  019B                     	;# 
  3710  019C                     	;# 
  3711  019C                     	;# 
  3712  019C                     	;# 
  3713  019D                     	;# 
  3714  019D                     	;# 
  3715  019D                     	;# 
  3716  019E                     	;# 
  3717  019E                     	;# 
  3718  019E                     	;# 
  3719  019F                     	;# 
  3720  019F                     	;# 
  3721  019F                     	;# 
  3722  019F                     	;# 
  3723  019F                     	;# 
  3724  020C                     	;# 
  3725  020D                     	;# 
  3726  020E                     	;# 
  3727  0211                     	;# 
  3728  0211                     	;# 
  3729  0212                     	;# 
  3730  0212                     	;# 
  3731  0213                     	;# 
  3732  0213                     	;# 
  3733  0214                     	;# 
  3734  0214                     	;# 
  3735  0215                     	;# 
  3736  0215                     	;# 
  3737  0215                     	;# 
  3738  0215                     	;# 
  3739  0216                     	;# 
  3740  0216                     	;# 
  3741  0217                     	;# 
  3742  0217                     	;# 
  3743  028C                     	;# 
  3744  028D                     	;# 
  3745  028E                     	;# 
  3746  0291                     	;# 
  3747  0291                     	;# 
  3748  0292                     	;# 
  3749  0293                     	;# 
  3750  0294                     	;# 
  3751  0298                     	;# 
  3752  0298                     	;# 
  3753  0299                     	;# 
  3754  029A                     	;# 
  3755  029B                     	;# 
  3756  029E                     	;# 
  3757  030C                     	;# 
  3758  030D                     	;# 
  3759  030E                     	;# 
  3760  038C                     	;# 
  3761  038D                     	;# 
  3762  038E                     	;# 
  3763  0391                     	;# 
  3764  0392                     	;# 
  3765  0393                     	;# 
  3766  0394                     	;# 
  3767  0395                     	;# 
  3768  0396                     	;# 
  3769  0397                     	;# 
  3770  0398                     	;# 
  3771  0399                     	;# 
  3772  040E                     	;# 
  3773  0413                     	;# 
  3774  0413                     	;# 
  3775  0414                     	;# 
  3776  0414                     	;# 
  3777  0415                     	;# 
  3778  0416                     	;# 
  3779  0417                     	;# 
  3780  0418                     	;# 
  3781  041A                     	;# 
  3782  041A                     	;# 
  3783  041B                     	;# 
  3784  041B                     	;# 
  3785  041C                     	;# 
  3786  041D                     	;# 
  3787  041E                     	;# 
  3788  041F                     	;# 
  3789  0493                     	;# 
  3790  0494                     	;# 
  3791  0495                     	;# 
  3792  0496                     	;# 
  3793  049A                     	;# 
  3794  049B                     	;# 
  3795  049C                     	;# 
  3796  049D                     	;# 
  3797  058C                     	;# 
  3798  058C                     	;# 
  3799  058D                     	;# 
  3800  058E                     	;# 
  3801  058E                     	;# 
  3802  058F                     	;# 
  3803  0590                     	;# 
  3804  0590                     	;# 
  3805  0591                     	;# 
  3806  0592                     	;# 
  3807  0592                     	;# 
  3808  0593                     	;# 
  3809  0594                     	;# 
  3810  0594                     	;# 
  3811  0595                     	;# 
  3812  0596                     	;# 
  3813  0596                     	;# 
  3814  0597                     	;# 
  3815  0598                     	;# 
  3816  0599                     	;# 
  3817  059A                     	;# 
  3818  059B                     	;# 
  3819  059B                     	;# 
  3820  059C                     	;# 
  3821  059D                     	;# 
  3822  060C                     	;# 
  3823  060C                     	;# 
  3824  060D                     	;# 
  3825  060E                     	;# 
  3826  060F                     	;# 
  3827  060F                     	;# 
  3828  0610                     	;# 
  3829  0611                     	;# 
  3830  0612                     	;# 
  3831  0613                     	;# 
  3832  0614                     	;# 
  3833  0617                     	;# 
  3834  0618                     	;# 
  3835  0619                     	;# 
  3836  061A                     	;# 
  3837  061B                     	;# 
  3838  061C                     	;# 
  3839  0691                     	;# 
  3840  0692                     	;# 
  3841  0693                     	;# 
  3842  0694                     	;# 
  3843  0695                     	;# 
  3844  0696                     	;# 
  3845  0697                     	;# 
  3846  0699                     	;# 
  3847  069A                     	;# 
  3848  0711                     	;# 
  3849  0712                     	;# 
  3850  0713                     	;# 
  3851  0714                     	;# 
  3852  0715                     	;# 
  3853  0718                     	;# 
  3854  0718                     	;# 
  3855  0719                     	;# 
  3856  071A                     	;# 
  3857  071A                     	;# 
  3858  071B                     	;# 
  3859  071C                     	;# 
  3860  071D                     	;# 
  3861  0791                     	;# 
  3862  0791                     	;# 
  3863  0792                     	;# 
  3864  0793                     	;# 
  3865  0793                     	;# 
  3866  0794                     	;# 
  3867  0795                     	;# 
  3868  0795                     	;# 
  3869  0796                     	;# 
  3870  0797                     	;# 
  3871  0797                     	;# 
  3872  0798                     	;# 
  3873  0799                     	;# 
  3874  079A                     	;# 
  3875  080C                     	;# 
  3876  080C                     	;# 
  3877  080D                     	;# 
  3878  080E                     	;# 
  3879  080E                     	;# 
  3880  080F                     	;# 
  3881  0810                     	;# 
  3882  0810                     	;# 
  3883  0811                     	;# 
  3884  0812                     	;# 
  3885  0812                     	;# 
  3886  0813                     	;# 
  3887  0814                     	;# 
  3888  0815                     	;# 
  3889  0816                     	;# 
  3890  0817                     	;# 
  3891  0818                     	;# 
  3892  0819                     	;# 
  3893  081A                     	;# 
  3894  081A                     	;# 
  3895  081B                     	;# 
  3896  081C                     	;# 
  3897  081C                     	;# 
  3898  081D                     	;# 
  3899  088C                     	;# 
  3900  088D                     	;# 
  3901  088E                     	;# 
  3902  088F                     	;# 
  3903  088F                     	;# 
  3904  0890                     	;# 
  3905  0891                     	;# 
  3906  0892                     	;# 
  3907  0893                     	;# 
  3908  0893                     	;# 
  3909  0894                     	;# 
  3910  0895                     	;# 
  3911  0896                     	;# 
  3912  0897                     	;# 
  3913  0897                     	;# 
  3914  0898                     	;# 
  3915  0899                     	;# 
  3916  0D8C                     	;# 
  3917  0D8C                     	;# 
  3918  0D8D                     	;# 
  3919  0D8E                     	;# 
  3920  0D8F                     	;# 
  3921  0D8F                     	;# 
  3922  0D90                     	;# 
  3923  0D91                     	;# 
  3924  0D92                     	;# 
  3925  0D92                     	;# 
  3926  0D93                     	;# 
  3927  0D94                     	;# 
  3928  0D95                     	;# 
  3929  0D95                     	;# 
  3930  0D96                     	;# 
  3931  0D97                     	;# 
  3932  0D98                     	;# 
  3933  0D99                     	;# 
  3934  0D9A                     	;# 
  3935  0D9B                     	;# 
  3936  0D9C                     	;# 
  3937  0D9D                     	;# 
  3938  0D9E                     	;# 
  3939  0D9E                     	;# 
  3940  0D9F                     	;# 
  3941  0DA0                     	;# 
  3942  0DA1                     	;# 
  3943  0DA1                     	;# 
  3944  0DA2                     	;# 
  3945  0DA3                     	;# 
  3946  0DA4                     	;# 
  3947  0DA4                     	;# 
  3948  0DA5                     	;# 
  3949  0DA6                     	;# 
  3950  0DA7                     	;# 
  3951  0DA7                     	;# 
  3952  0DA8                     	;# 
  3953  0DA9                     	;# 
  3954  0DAA                     	;# 
  3955  0DAB                     	;# 
  3956  0DAC                     	;# 
  3957  0DAD                     	;# 
  3958  0DAE                     	;# 
  3959  0DAF                     	;# 
  3960  0E0F                     	;# 
  3961  0E10                     	;# 
  3962  0E11                     	;# 
  3963  0E12                     	;# 
  3964  0E13                     	;# 
  3965  0E14                     	;# 
  3966  0E15                     	;# 
  3967  0E16                     	;# 
  3968  0E17                     	;# 
  3969  0E18                     	;# 
  3970  0E19                     	;# 
  3971  0E1A                     	;# 
  3972  0E1B                     	;# 
  3973  0E1C                     	;# 
  3974  0E1D                     	;# 
  3975  0E1E                     	;# 
  3976  0E1F                     	;# 
  3977  0E20                     	;# 
  3978  0E21                     	;# 
  3979  0E22                     	;# 
  3980  0E23                     	;# 
  3981  0E24                     	;# 
  3982  0E25                     	;# 
  3983  0E26                     	;# 
  3984  0E27                     	;# 
  3985  0E28                     	;# 
  3986  0E29                     	;# 
  3987  0E2A                     	;# 
  3988  0E2B                     	;# 
  3989  0E2C                     	;# 
  3990  0E2D                     	;# 
  3991  0E2E                     	;# 
  3992  0E90                     	;# 
  3993  0E91                     	;# 
  3994  0E92                     	;# 
  3995  0E94                     	;# 
  3996  0E95                     	;# 
  3997  0E9C                     	;# 
  3998  0E9D                     	;# 
  3999  0E9E                     	;# 
  4000  0E9F                     	;# 
  4001  0EA0                     	;# 
  4002  0EA1                     	;# 
  4003  0EA2                     	;# 
  4004  0EA3                     	;# 
  4005  0EA4                     	;# 
  4006  0EA5                     	;# 
  4007  0EA6                     	;# 
  4008  0EA7                     	;# 
  4009  0F0F                     	;# 
  4010  0F10                     	;# 
  4011  0F11                     	;# 
  4012  0F12                     	;# 
  4013  0F13                     	;# 
  4014  0F14                     	;# 
  4015  0F15                     	;# 
  4016  0F16                     	;# 
  4017  0F17                     	;# 
  4018  0F18                     	;# 
  4019  0F19                     	;# 
  4020  0F1A                     	;# 
  4021  0F1B                     	;# 
  4022  0F1C                     	;# 
  4023  0F1D                     	;# 
  4024  0F1E                     	;# 
  4025  0F1F                     	;# 
  4026  0F20                     	;# 
  4027  0F21                     	;# 
  4028  0F22                     	;# 
  4029  0F23                     	;# 
  4030  0F24                     	;# 
  4031  0F25                     	;# 
  4032  0F26                     	;# 
  4033  0F27                     	;# 
  4034  0F28                     	;# 
  4035  0F29                     	;# 
  4036  0F2A                     	;# 
  4037  0F2B                     	;# 
  4038  0F2C                     	;# 
  4039  0F2D                     	;# 
  4040  0F2E                     	;# 
  4041  0F2F                     	;# 
  4042  0F30                     	;# 
  4043  0F31                     	;# 
  4044  0F32                     	;# 
  4045  0F33                     	;# 
  4046  0F34                     	;# 
  4047  0F35                     	;# 
  4048  0F36                     	;# 
  4049  0F37                     	;# 
  4050  0FE4                     	;# 
  4051  0FE5                     	;# 
  4052  0FE6                     	;# 
  4053  0FE7                     	;# 
  4054  0FE8                     	;# 
  4055  0FE9                     	;# 
  4056  0FEA                     	;# 
  4057  0FEB                     	;# 
  4058  0FED                     	;# 
  4059  0FEE                     	;# 
  4060  0FEF                     	;# 
  4061  0000                     	;# 
  4062  0001                     	;# 
  4063  0002                     	;# 
  4064  0003                     	;# 
  4065  0004                     	;# 
  4066  0005                     	;# 
  4067  0006                     	;# 
  4068  0007                     	;# 
  4069  0008                     	;# 
  4070  0009                     	;# 
  4071  000A                     	;# 
  4072  000B                     	;# 
  4073  000C                     	;# 
  4074  000D                     	;# 
  4075  000E                     	;# 
  4076  0010                     	;# 
  4077  0011                     	;# 
  4078  0012                     	;# 
  4079  0013                     	;# 
  4080  0014                     	;# 
  4081  0015                     	;# 
  4082  0016                     	;# 
  4083  0016                     	;# 
  4084  0017                     	;# 
  4085  0018                     	;# 
  4086  0019                     	;# 
  4087  001A                     	;# 
  4088  001A                     	;# 
  4089  001B                     	;# 
  4090  001B                     	;# 
  4091  001C                     	;# 
  4092  001D                     	;# 
  4093  001E                     	;# 
  4094  001F                     	;# 
  4095  008C                     	;# 
  4096  008D                     	;# 
  4097  008E                     	;# 
  4098  0090                     	;# 
  4099  0091                     	;# 
  4100  0092                     	;# 
  4101  0093                     	;# 
  4102  0094                     	;# 
  4103  0095                     	;# 
  4104  0096                     	;# 
  4105  0098                     	;# 
  4106  0099                     	;# 
  4107  009A                     	;# 
  4108  009B                     	;# 
  4109  009B                     	;# 
  4110  009C                     	;# 
  4111  009D                     	;# 
  4112  009E                     	;# 
  4113  009F                     	;# 
  4114  010C                     	;# 
  4115  010D                     	;# 
  4116  010E                     	;# 
  4117  0111                     	;# 
  4118  0112                     	;# 
  4119  0113                     	;# 
  4120  0114                     	;# 
  4121  0115                     	;# 
  4122  0116                     	;# 
  4123  0117                     	;# 
  4124  0118                     	;# 
  4125  0119                     	;# 
  4126  011C                     	;# 
  4127  018C                     	;# 
  4128  018D                     	;# 
  4129  018E                     	;# 
  4130  0191                     	;# 
  4131  0191                     	;# 
  4132  0192                     	;# 
  4133  0193                     	;# 
  4134  0193                     	;# 
  4135  0194                     	;# 
  4136  0195                     	;# 
  4137  0196                     	;# 
  4138  0197                     	;# 
  4139  0199                     	;# 
  4140  0199                     	;# 
  4141  0199                     	;# 
  4142  019A                     	;# 
  4143  019A                     	;# 
  4144  019A                     	;# 
  4145  019B                     	;# 
  4146  019B                     	;# 
  4147  019B                     	;# 
  4148  019B                     	;# 
  4149  019B                     	;# 
  4150  019C                     	;# 
  4151  019C                     	;# 
  4152  019C                     	;# 
  4153  019D                     	;# 
  4154  019D                     	;# 
  4155  019D                     	;# 
  4156  019E                     	;# 
  4157  019E                     	;# 
  4158  019E                     	;# 
  4159  019F                     	;# 
  4160  019F                     	;# 
  4161  019F                     	;# 
  4162  019F                     	;# 
  4163  019F                     	;# 
  4164  020C                     	;# 
  4165  020D                     	;# 
  4166  020E                     	;# 
  4167  0211                     	;# 
  4168  0211                     	;# 
  4169  0212                     	;# 
  4170  0212                     	;# 
  4171  0213                     	;# 
  4172  0213                     	;# 
  4173  0214                     	;# 
  4174  0214                     	;# 
  4175  0215                     	;# 
  4176  0215                     	;# 
  4177  0215                     	;# 
  4178  0215                     	;# 
  4179  0216                     	;# 
  4180  0216                     	;# 
  4181  0217                     	;# 
  4182  0217                     	;# 
  4183  028C                     	;# 
  4184  028D                     	;# 
  4185  028E                     	;# 
  4186  0291                     	;# 
  4187  0291                     	;# 
  4188  0292                     	;# 
  4189  0293                     	;# 
  4190  0294                     	;# 
  4191  0298                     	;# 
  4192  0298                     	;# 
  4193  0299                     	;# 
  4194  029A                     	;# 
  4195  029B                     	;# 
  4196  029E                     	;# 
  4197  030C                     	;# 
  4198  030D                     	;# 
  4199  030E                     	;# 
  4200  038C                     	;# 
  4201  038D                     	;# 
  4202  038E                     	;# 
  4203  0391                     	;# 
  4204  0392                     	;# 
  4205  0393                     	;# 
  4206  0394                     	;# 
  4207  0395                     	;# 
  4208  0396                     	;# 
  4209  0397                     	;# 
  4210  0398                     	;# 
  4211  0399                     	;# 
  4212  040E                     	;# 
  4213  0413                     	;# 
  4214  0413                     	;# 
  4215  0414                     	;# 
  4216  0414                     	;# 
  4217  0415                     	;# 
  4218  0416                     	;# 
  4219  0417                     	;# 
  4220  0418                     	;# 
  4221  041A                     	;# 
  4222  041A                     	;# 
  4223  041B                     	;# 
  4224  041B                     	;# 
  4225  041C                     	;# 
  4226  041D                     	;# 
  4227  041E                     	;# 
  4228  041F                     	;# 
  4229  0493                     	;# 
  4230  0494                     	;# 
  4231  0495                     	;# 
  4232  0496                     	;# 
  4233  049A                     	;# 
  4234  049B                     	;# 
  4235  049C                     	;# 
  4236  049D                     	;# 
  4237  058C                     	;# 
  4238  058C                     	;# 
  4239  058D                     	;# 
  4240  058E                     	;# 
  4241  058E                     	;# 
  4242  058F                     	;# 
  4243  0590                     	;# 
  4244  0590                     	;# 
  4245  0591                     	;# 
  4246  0592                     	;# 
  4247  0592                     	;# 
  4248  0593                     	;# 
  4249  0594                     	;# 
  4250  0594                     	;# 
  4251  0595                     	;# 
  4252  0596                     	;# 
  4253  0596                     	;# 
  4254  0597                     	;# 
  4255  0598                     	;# 
  4256  0599                     	;# 
  4257  059A                     	;# 
  4258  059B                     	;# 
  4259  059B                     	;# 
  4260  059C                     	;# 
  4261  059D                     	;# 
  4262  060C                     	;# 
  4263  060C                     	;# 
  4264  060D                     	;# 
  4265  060E                     	;# 
  4266  060F                     	;# 
  4267  060F                     	;# 
  4268  0610                     	;# 
  4269  0611                     	;# 
  4270  0612                     	;# 
  4271  0613                     	;# 
  4272  0614                     	;# 
  4273  0617                     	;# 
  4274  0618                     	;# 
  4275  0619                     	;# 
  4276  061A                     	;# 
  4277  061B                     	;# 
  4278  061C                     	;# 
  4279  0691                     	;# 
  4280  0692                     	;# 
  4281  0693                     	;# 
  4282  0694                     	;# 
  4283  0695                     	;# 
  4284  0696                     	;# 
  4285  0697                     	;# 
  4286  0699                     	;# 
  4287  069A                     	;# 
  4288  0711                     	;# 
  4289  0712                     	;# 
  4290  0713                     	;# 
  4291  0714                     	;# 
  4292  0715                     	;# 
  4293  0718                     	;# 
  4294  0718                     	;# 
  4295  0719                     	;# 
  4296  071A                     	;# 
  4297  071A                     	;# 
  4298  071B                     	;# 
  4299  071C                     	;# 
  4300  071D                     	;# 
  4301  0791                     	;# 
  4302  0791                     	;# 
  4303  0792                     	;# 
  4304  0793                     	;# 
  4305  0793                     	;# 
  4306  0794                     	;# 
  4307  0795                     	;# 
  4308  0795                     	;# 
  4309  0796                     	;# 
  4310  0797                     	;# 
  4311  0797                     	;# 
  4312  0798                     	;# 
  4313  0799                     	;# 
  4314  079A                     	;# 
  4315  080C                     	;# 
  4316  080C                     	;# 
  4317  080D                     	;# 
  4318  080E                     	;# 
  4319  080E                     	;# 
  4320  080F                     	;# 
  4321  0810                     	;# 
  4322  0810                     	;# 
  4323  0811                     	;# 
  4324  0812                     	;# 
  4325  0812                     	;# 
  4326  0813                     	;# 
  4327  0814                     	;# 
  4328  0815                     	;# 
  4329  0816                     	;# 
  4330  0817                     	;# 
  4331  0818                     	;# 
  4332  0819                     	;# 
  4333  081A                     	;# 
  4334  081A                     	;# 
  4335  081B                     	;# 
  4336  081C                     	;# 
  4337  081C                     	;# 
  4338  081D                     	;# 
  4339  088C                     	;# 
  4340  088D                     	;# 
  4341  088E                     	;# 
  4342  088F                     	;# 
  4343  088F                     	;# 
  4344  0890                     	;# 
  4345  0891                     	;# 
  4346  0892                     	;# 
  4347  0893                     	;# 
  4348  0893                     	;# 
  4349  0894                     	;# 
  4350  0895                     	;# 
  4351  0896                     	;# 
  4352  0897                     	;# 
  4353  0897                     	;# 
  4354  0898                     	;# 
  4355  0899                     	;# 
  4356  0D8C                     	;# 
  4357  0D8C                     	;# 
  4358  0D8D                     	;# 
  4359  0D8E                     	;# 
  4360  0D8F                     	;# 
  4361  0D8F                     	;# 
  4362  0D90                     	;# 
  4363  0D91                     	;# 
  4364  0D92                     	;# 
  4365  0D92                     	;# 
  4366  0D93                     	;# 
  4367  0D94                     	;# 
  4368  0D95                     	;# 
  4369  0D95                     	;# 
  4370  0D96                     	;# 
  4371  0D97                     	;# 
  4372  0D98                     	;# 
  4373  0D99                     	;# 
  4374  0D9A                     	;# 
  4375  0D9B                     	;# 
  4376  0D9C                     	;# 
  4377  0D9D                     	;# 
  4378  0D9E                     	;# 
  4379  0D9E                     	;# 
  4380  0D9F                     	;# 
  4381  0DA0                     	;# 
  4382  0DA1                     	;# 
  4383  0DA1                     	;# 
  4384  0DA2                     	;# 
  4385  0DA3                     	;# 
  4386  0DA4                     	;# 
  4387  0DA4                     	;# 
  4388  0DA5                     	;# 
  4389  0DA6                     	;# 
  4390  0DA7                     	;# 
  4391  0DA7                     	;# 
  4392  0DA8                     	;# 
  4393  0DA9                     	;# 
  4394  0DAA                     	;# 
  4395  0DAB                     	;# 
  4396  0DAC                     	;# 
  4397  0DAD                     	;# 
  4398  0DAE                     	;# 
  4399  0DAF                     	;# 
  4400  0E0F                     	;# 
  4401  0E10                     	;# 
  4402  0E11                     	;# 
  4403  0E12                     	;# 
  4404  0E13                     	;# 
  4405  0E14                     	;# 
  4406  0E15                     	;# 
  4407  0E16                     	;# 
  4408  0E17                     	;# 
  4409  0E18                     	;# 
  4410  0E19                     	;# 
  4411  0E1A                     	;# 
  4412  0E1B                     	;# 
  4413  0E1C                     	;# 
  4414  0E1D                     	;# 
  4415  0E1E                     	;# 
  4416  0E1F                     	;# 
  4417  0E20                     	;# 
  4418  0E21                     	;# 
  4419  0E22                     	;# 
  4420  0E23                     	;# 
  4421  0E24                     	;# 
  4422  0E25                     	;# 
  4423  0E26                     	;# 
  4424  0E27                     	;# 
  4425  0E28                     	;# 
  4426  0E29                     	;# 
  4427  0E2A                     	;# 
  4428  0E2B                     	;# 
  4429  0E2C                     	;# 
  4430  0E2D                     	;# 
  4431  0E2E                     	;# 
  4432  0E90                     	;# 
  4433  0E91                     	;# 
  4434  0E92                     	;# 
  4435  0E94                     	;# 
  4436  0E95                     	;# 
  4437  0E9C                     	;# 
  4438  0E9D                     	;# 
  4439  0E9E                     	;# 
  4440  0E9F                     	;# 
  4441  0EA0                     	;# 
  4442  0EA1                     	;# 
  4443  0EA2                     	;# 
  4444  0EA3                     	;# 
  4445  0EA4                     	;# 
  4446  0EA5                     	;# 
  4447  0EA6                     	;# 
  4448  0EA7                     	;# 
  4449  0F0F                     	;# 
  4450  0F10                     	;# 
  4451  0F11                     	;# 
  4452  0F12                     	;# 
  4453  0F13                     	;# 
  4454  0F14                     	;# 
  4455  0F15                     	;# 
  4456  0F16                     	;# 
  4457  0F17                     	;# 
  4458  0F18                     	;# 
  4459  0F19                     	;# 
  4460  0F1A                     	;# 
  4461  0F1B                     	;# 
  4462  0F1C                     	;# 
  4463  0F1D                     	;# 
  4464  0F1E                     	;# 
  4465  0F1F                     	;# 
  4466  0F20                     	;# 
  4467  0F21                     	;# 
  4468  0F22                     	;# 
  4469  0F23                     	;# 
  4470  0F24                     	;# 
  4471  0F25                     	;# 
  4472  0F26                     	;# 
  4473  0F27                     	;# 
  4474  0F28                     	;# 
  4475  0F29                     	;# 
  4476  0F2A                     	;# 
  4477  0F2B                     	;# 
  4478  0F2C                     	;# 
  4479  0F2D                     	;# 
  4480  0F2E                     	;# 
  4481  0F2F                     	;# 
  4482  0F30                     	;# 
  4483  0F31                     	;# 
  4484  0F32                     	;# 
  4485  0F33                     	;# 
  4486  0F34                     	;# 
  4487  0F35                     	;# 
  4488  0F36                     	;# 
  4489  0F37                     	;# 
  4490  0FE4                     	;# 
  4491  0FE5                     	;# 
  4492  0FE6                     	;# 
  4493  0FE7                     	;# 
  4494  0FE8                     	;# 
  4495  0FE9                     	;# 
  4496  0FEA                     	;# 
  4497  0FEB                     	;# 
  4498  0FED                     	;# 
  4499  0FEE                     	;# 
  4500  0FEF                     	;# 
  4501  0000                     	;# 
  4502  0001                     	;# 
  4503  0002                     	;# 
  4504  0003                     	;# 
  4505  0004                     	;# 
  4506  0005                     	;# 
  4507  0006                     	;# 
  4508  0007                     	;# 
  4509  0008                     	;# 
  4510  0009                     	;# 
  4511  000A                     	;# 
  4512  000B                     	;# 
  4513  000C                     	;# 
  4514  000D                     	;# 
  4515  000E                     	;# 
  4516  0010                     	;# 
  4517  0011                     	;# 
  4518  0012                     	;# 
  4519  0013                     	;# 
  4520  0014                     	;# 
  4521  0015                     	;# 
  4522  0016                     	;# 
  4523  0016                     	;# 
  4524  0017                     	;# 
  4525  0018                     	;# 
  4526  0019                     	;# 
  4527  001A                     	;# 
  4528  001A                     	;# 
  4529  001B                     	;# 
  4530  001B                     	;# 
  4531  001C                     	;# 
  4532  001D                     	;# 
  4533  001E                     	;# 
  4534  001F                     	;# 
  4535  008C                     	;# 
  4536  008D                     	;# 
  4537  008E                     	;# 
  4538  0090                     	;# 
  4539  0091                     	;# 
  4540  0092                     	;# 
  4541  0093                     	;# 
  4542  0094                     	;# 
  4543  0095                     	;# 
  4544  0096                     	;# 
  4545  0098                     	;# 
  4546  0099                     	;# 
  4547  009A                     	;# 
  4548  009B                     	;# 
  4549  009B                     	;# 
  4550  009C                     	;# 
  4551  009D                     	;# 
  4552  009E                     	;# 
  4553  009F                     	;# 
  4554  010C                     	;# 
  4555  010D                     	;# 
  4556  010E                     	;# 
  4557  0111                     	;# 
  4558  0112                     	;# 
  4559  0113                     	;# 
  4560  0114                     	;# 
  4561  0115                     	;# 
  4562  0116                     	;# 
  4563  0117                     	;# 
  4564  0118                     	;# 
  4565  0119                     	;# 
  4566  011C                     	;# 
  4567  018C                     	;# 
  4568  018D                     	;# 
  4569  018E                     	;# 
  4570  0191                     	;# 
  4571  0191                     	;# 
  4572  0192                     	;# 
  4573  0193                     	;# 
  4574  0193                     	;# 
  4575  0194                     	;# 
  4576  0195                     	;# 
  4577  0196                     	;# 
  4578  0197                     	;# 
  4579  0199                     	;# 
  4580  0199                     	;# 
  4581  0199                     	;# 
  4582  019A                     	;# 
  4583  019A                     	;# 
  4584  019A                     	;# 
  4585  019B                     	;# 
  4586  019B                     	;# 
  4587  019B                     	;# 
  4588  019B                     	;# 
  4589  019B                     	;# 
  4590  019C                     	;# 
  4591  019C                     	;# 
  4592  019C                     	;# 
  4593  019D                     	;# 
  4594  019D                     	;# 
  4595  019D                     	;# 
  4596  019E                     	;# 
  4597  019E                     	;# 
  4598  019E                     	;# 
  4599  019F                     	;# 
  4600  019F                     	;# 
  4601  019F                     	;# 
  4602  019F                     	;# 
  4603  019F                     	;# 
  4604  020C                     	;# 
  4605  020D                     	;# 
  4606  020E                     	;# 
  4607  0211                     	;# 
  4608  0211                     	;# 
  4609  0212                     	;# 
  4610  0212                     	;# 
  4611  0213                     	;# 
  4612  0213                     	;# 
  4613  0214                     	;# 
  4614  0214                     	;# 
  4615  0215                     	;# 
  4616  0215                     	;# 
  4617  0215                     	;# 
  4618  0215                     	;# 
  4619  0216                     	;# 
  4620  0216                     	;# 
  4621  0217                     	;# 
  4622  0217                     	;# 
  4623  028C                     	;# 
  4624  028D                     	;# 
  4625  028E                     	;# 
  4626  0291                     	;# 
  4627  0291                     	;# 
  4628  0292                     	;# 
  4629  0293                     	;# 
  4630  0294                     	;# 
  4631  0298                     	;# 
  4632  0298                     	;# 
  4633  0299                     	;# 
  4634  029A                     	;# 
  4635  029B                     	;# 
  4636  029E                     	;# 
  4637  030C                     	;# 
  4638  030D                     	;# 
  4639  030E                     	;# 
  4640  038C                     	;# 
  4641  038D                     	;# 
  4642  038E                     	;# 
  4643  0391                     	;# 
  4644  0392                     	;# 
  4645  0393                     	;# 
  4646  0394                     	;# 
  4647  0395                     	;# 
  4648  0396                     	;# 
  4649  0397                     	;# 
  4650  0398                     	;# 
  4651  0399                     	;# 
  4652  040E                     	;# 
  4653  0413                     	;# 
  4654  0413                     	;# 
  4655  0414                     	;# 
  4656  0414                     	;# 
  4657  0415                     	;# 
  4658  0416                     	;# 
  4659  0417                     	;# 
  4660  0418                     	;# 
  4661  041A                     	;# 
  4662  041A                     	;# 
  4663  041B                     	;# 
  4664  041B                     	;# 
  4665  041C                     	;# 
  4666  041D                     	;# 
  4667  041E                     	;# 
  4668  041F                     	;# 
  4669  0493                     	;# 
  4670  0494                     	;# 
  4671  0495                     	;# 
  4672  0496                     	;# 
  4673  049A                     	;# 
  4674  049B                     	;# 
  4675  049C                     	;# 
  4676  049D                     	;# 
  4677  058C                     	;# 
  4678  058C                     	;# 
  4679  058D                     	;# 
  4680  058E                     	;# 
  4681  058E                     	;# 
  4682  058F                     	;# 
  4683  0590                     	;# 
  4684  0590                     	;# 
  4685  0591                     	;# 
  4686  0592                     	;# 
  4687  0592                     	;# 
  4688  0593                     	;# 
  4689  0594                     	;# 
  4690  0594                     	;# 
  4691  0595                     	;# 
  4692  0596                     	;# 
  4693  0596                     	;# 
  4694  0597                     	;# 
  4695  0598                     	;# 
  4696  0599                     	;# 
  4697  059A                     	;# 
  4698  059B                     	;# 
  4699  059B                     	;# 
  4700  059C                     	;# 
  4701  059D                     	;# 
  4702  060C                     	;# 
  4703  060C                     	;# 
  4704  060D                     	;# 
  4705  060E                     	;# 
  4706  060F                     	;# 
  4707  060F                     	;# 
  4708  0610                     	;# 
  4709  0611                     	;# 
  4710  0612                     	;# 
  4711  0613                     	;# 
  4712  0614                     	;# 
  4713  0617                     	;# 
  4714  0618                     	;# 
  4715  0619                     	;# 
  4716  061A                     	;# 
  4717  061B                     	;# 
  4718  061C                     	;# 
  4719  0691                     	;# 
  4720  0692                     	;# 
  4721  0693                     	;# 
  4722  0694                     	;# 
  4723  0695                     	;# 
  4724  0696                     	;# 
  4725  0697                     	;# 
  4726  0699                     	;# 
  4727  069A                     	;# 
  4728  0711                     	;# 
  4729  0712                     	;# 
  4730  0713                     	;# 
  4731  0714                     	;# 
  4732  0715                     	;# 
  4733  0718                     	;# 
  4734  0718                     	;# 
  4735  0719                     	;# 
  4736  071A                     	;# 
  4737  071A                     	;# 
  4738  071B                     	;# 
  4739  071C                     	;# 
  4740  071D                     	;# 
  4741  0791                     	;# 
  4742  0791                     	;# 
  4743  0792                     	;# 
  4744  0793                     	;# 
  4745  0793                     	;# 
  4746  0794                     	;# 
  4747  0795                     	;# 
  4748  0795                     	;# 
  4749  0796                     	;# 
  4750  0797                     	;# 
  4751  0797                     	;# 
  4752  0798                     	;# 
  4753  0799                     	;# 
  4754  079A                     	;# 
  4755  080C                     	;# 
  4756  080C                     	;# 
  4757  080D                     	;# 
  4758  080E                     	;# 
  4759  080E                     	;# 
  4760  080F                     	;# 
  4761  0810                     	;# 
  4762  0810                     	;# 
  4763  0811                     	;# 
  4764  0812                     	;# 
  4765  0812                     	;# 
  4766  0813                     	;# 
  4767  0814                     	;# 
  4768  0815                     	;# 
  4769  0816                     	;# 
  4770  0817                     	;# 
  4771  0818                     	;# 
  4772  0819                     	;# 
  4773  081A                     	;# 
  4774  081A                     	;# 
  4775  081B                     	;# 
  4776  081C                     	;# 
  4777  081C                     	;# 
  4778  081D                     	;# 
  4779  088C                     	;# 
  4780  088D                     	;# 
  4781  088E                     	;# 
  4782  088F                     	;# 
  4783  088F                     	;# 
  4784  0890                     	;# 
  4785  0891                     	;# 
  4786  0892                     	;# 
  4787  0893                     	;# 
  4788  0893                     	;# 
  4789  0894                     	;# 
  4790  0895                     	;# 
  4791  0896                     	;# 
  4792  0897                     	;# 
  4793  0897                     	;# 
  4794  0898                     	;# 
  4795  0899                     	;# 
  4796  0D8C                     	;# 
  4797  0D8C                     	;# 
  4798  0D8D                     	;# 
  4799  0D8E                     	;# 
  4800  0D8F                     	;# 
  4801  0D8F                     	;# 
  4802  0D90                     	;# 
  4803  0D91                     	;# 
  4804  0D92                     	;# 
  4805  0D92                     	;# 
  4806  0D93                     	;# 
  4807  0D94                     	;# 
  4808  0D95                     	;# 
  4809  0D95                     	;# 
  4810  0D96                     	;# 
  4811  0D97                     	;# 
  4812  0D98                     	;# 
  4813  0D99                     	;# 
  4814  0D9A                     	;# 
  4815  0D9B                     	;# 
  4816  0D9C                     	;# 
  4817  0D9D                     	;# 
  4818  0D9E                     	;# 
  4819  0D9E                     	;# 
  4820  0D9F                     	;# 
  4821  0DA0                     	;# 
  4822  0DA1                     	;# 
  4823  0DA1                     	;# 
  4824  0DA2                     	;# 
  4825  0DA3                     	;# 
  4826  0DA4                     	;# 
  4827  0DA4                     	;# 
  4828  0DA5                     	;# 
  4829  0DA6                     	;# 
  4830  0DA7                     	;# 
  4831  0DA7                     	;# 
  4832  0DA8                     	;# 
  4833  0DA9                     	;# 
  4834  0DAA                     	;# 
  4835  0DAB                     	;# 
  4836  0DAC                     	;# 
  4837  0DAD                     	;# 
  4838  0DAE                     	;# 
  4839  0DAF                     	;# 
  4840  0E0F                     	;# 
  4841  0E10                     	;# 
  4842  0E11                     	;# 
  4843  0E12                     	;# 
  4844  0E13                     	;# 
  4845  0E14                     	;# 
  4846  0E15                     	;# 
  4847  0E16                     	;# 
  4848  0E17                     	;# 
  4849  0E18                     	;# 
  4850  0E19                     	;# 
  4851  0E1A                     	;# 
  4852  0E1B                     	;# 
  4853  0E1C                     	;# 
  4854  0E1D                     	;# 
  4855  0E1E                     	;# 
  4856  0E1F                     	;# 
  4857  0E20                     	;# 
  4858  0E21                     	;# 
  4859  0E22                     	;# 
  4860  0E23                     	;# 
  4861  0E24                     	;# 
  4862  0E25                     	;# 
  4863  0E26                     	;# 
  4864  0E27                     	;# 
  4865  0E28                     	;# 
  4866  0E29                     	;# 
  4867  0E2A                     	;# 
  4868  0E2B                     	;# 
  4869  0E2C                     	;# 
  4870  0E2D                     	;# 
  4871  0E2E                     	;# 
  4872  0E90                     	;# 
  4873  0E91                     	;# 
  4874  0E92                     	;# 
  4875  0E94                     	;# 
  4876  0E95                     	;# 
  4877  0E9C                     	;# 
  4878  0E9D                     	;# 
  4879  0E9E                     	;# 
  4880  0E9F                     	;# 
  4881  0EA0                     	;# 
  4882  0EA1                     	;# 
  4883  0EA2                     	;# 
  4884  0EA3                     	;# 
  4885  0EA4                     	;# 
  4886  0EA5                     	;# 
  4887  0EA6                     	;# 
  4888  0EA7                     	;# 
  4889  0F0F                     	;# 
  4890  0F10                     	;# 
  4891  0F11                     	;# 
  4892  0F12                     	;# 
  4893  0F13                     	;# 
  4894  0F14                     	;# 
  4895  0F15                     	;# 
  4896  0F16                     	;# 
  4897  0F17                     	;# 
  4898  0F18                     	;# 
  4899  0F19                     	;# 
  4900  0F1A                     	;# 
  4901  0F1B                     	;# 
  4902  0F1C                     	;# 
  4903  0F1D                     	;# 
  4904  0F1E                     	;# 
  4905  0F1F                     	;# 
  4906  0F20                     	;# 
  4907  0F21                     	;# 
  4908  0F22                     	;# 
  4909  0F23                     	;# 
  4910  0F24                     	;# 
  4911  0F25                     	;# 
  4912  0F26                     	;# 
  4913  0F27                     	;# 
  4914  0F28                     	;# 
  4915  0F29                     	;# 
  4916  0F2A                     	;# 
  4917  0F2B                     	;# 
  4918  0F2C                     	;# 
  4919  0F2D                     	;# 
  4920  0F2E                     	;# 
  4921  0F2F                     	;# 
  4922  0F30                     	;# 
  4923  0F31                     	;# 
  4924  0F32                     	;# 
  4925  0F33                     	;# 
  4926  0F34                     	;# 
  4927  0F35                     	;# 
  4928  0F36                     	;# 
  4929  0F37                     	;# 
  4930  0FE4                     	;# 
  4931  0FE5                     	;# 
  4932  0FE6                     	;# 
  4933  0FE7                     	;# 
  4934  0FE8                     	;# 
  4935  0FE9                     	;# 
  4936  0FEA                     	;# 
  4937  0FEB                     	;# 
  4938  0FED                     	;# 
  4939  0FEE                     	;# 
  4940  0FEF                     	;# 
  4941                           
  4942                           	psect	idataBANK1
  4943  0DB8                     __pidataBANK1:	
  4944                           
  4945                           ;initializer for _display_data_1
  4946  0DB8  3453               	retlw	83
  4947  0DB9  343A               	retlw	58
  4948  0DBA  3430               	retlw	48
  4949  0DBB  3430               	retlw	48
  4950  0DBC  3430               	retlw	48
  4951  0DBD  344D               	retlw	77
  4952  0DBE  343A               	retlw	58
  4953  0DBF  3430               	retlw	48
  4954  0DC0  3430               	retlw	48
  4955  0DC1  3430               	retlw	48
  4956  0DC2  344C               	retlw	76
  4957  0DC3  343A               	retlw	58
  4958  0DC4  3430               	retlw	48
  4959  0DC5  3430               	retlw	48
  4960  0DC6  3430               	retlw	48
  4961  0DC7  3400               	retlw	0
  4962                           
  4963                           ;initializer for _display_data_2
  4964  0DC8  345A               	retlw	90
  4965  0DC9  343A               	retlw	58
  4966  0DCA  3430               	retlw	48
  4967  0DCB  3430               	retlw	48
  4968  0DCC  3430               	retlw	48
  4969  0DCD  3447               	retlw	71
  4970  0DCE  343A               	retlw	58
  4971  0DCF  3430               	retlw	48
  4972  0DD0  3430               	retlw	48
  4973  0DD1  3430               	retlw	48
  4974  0DD2  3400               	retlw	0
  4975                           
  4976                           	psect	nvBANK0
  4977  0058                     __pnvBANK0:	
  4978  0058                     _INT_InterruptHandler:	
  4979  0058                     	ds	2
  4980  005A                     _TMR3_InterruptHandler:	
  4981  005A                     	ds	2
  4982  005C                     _timer3ReloadVal:	
  4983  005C                     	ds	2
  4984  005E                     _TMR1_InterruptHandler:	
  4985  005E                     	ds	2
  4986  0060                     _timer1ReloadVal:	
  4987  0060                     	ds	2
  4988  0062                     _TMR0_InterruptHandler:	
  4989  0062                     	ds	2
  4990  0064                     _timer0ReloadVal:	
  4991  0064                     	ds	1
  4992  000E                     _PORTC	set	14
  4993  000C                     _PORTAbits	set	12
  4994  0014                     _PIR5bits	set	20
  4995  0019                     _T1GCONbits	set	25
  4996  0018                     _T1CONbits	set	24
  4997  0018                     _T1CON	set	24
  4998  0010                     _PIR1bits	set	16
  4999  0016                     _TMR1L	set	22
  5000  0017                     _TMR1H	set	23
  5001  0019                     _T1GCON	set	25
  5002  000B                     _INTCONbits	set	11
  5003  0015                     _TMR0	set	21
  5004  0095                     _OPTION_REGbits	set	149
  5005  008E                     _TRISC	set	142
  5006  008D                     _TRISB	set	141
  5007  008C                     _TRISA	set	140
  5008  0094                     _PIE5bits	set	148
  5009  0098                     _OSCTUNE	set	152
  5010  0099                     _OSCCON	set	153
  5011  0090                     _PIE1bits	set	144
  5012  0095                     _OPTION_REG	set	149
  5013  010C                     _LATAbits	set	268
  5014  010E                     _LATCbits	set	270
  5015  010D                     _LATBbits	set	269
  5016  010E                     _LATC	set	270
  5017  010D                     _LATB	set	269
  5018  010C                     _LATA	set	268
  5019  0116                     _BORCON	set	278
  5020  0193                     _PMDAT	set	403
  5021  0191                     _PMADR	set	401
  5022  0195                     _PMCON1bits	set	405
  5023  018C                     _ANSELA	set	396
  5024  018D                     _ANSELB	set	397
  5025  018E                     _ANSELC	set	398
  5026  020E                     _WPUC	set	526
  5027  020C                     _WPUA	set	524
  5028  020D                     _WPUB	set	525
  5029  028E                     _ODCONC	set	654
  5030  028D                     _ODCONB	set	653
  5031  028C                     _ODCONA	set	652
  5032  0496                     _T3GCONbits	set	1174
  5033  0495                     _T3CONbits	set	1173
  5034  0495                     _T3CON	set	1173
  5035  0493                     _TMR3L	set	1171
  5036  0494                     _TMR3H	set	1172
  5037  0496                     _T3GCON	set	1174
  5038  0E10                     _INTPPS	set	3600
  5039                           
  5040                           	psect	stringtext1
  5041  1000                     __pstringtext1:	
  5042  1000                     STR_1:	
  5043  1000  346D               	retlw	109	;'m'
  5044  1001  3461               	retlw	97	;'a'
  5045  1002  3469               	retlw	105	;'i'
  5046  1003  346E               	retlw	110	;'n'
  5047  1004  342E               	retlw	46	;'.'
  5048  1005  3463               	retlw	99	;'c'
  5049  1006  3400               	retlw	0
  5050                           
  5051                           	psect	stringtext2
  5052  1007                     __pstringtext2:	
  5053  1007                     STR_2:	
  5054  1007  3430               	retlw	48	;'0'
  5055  1008  3420               	retlw	32	;' '
  5056  1009  343D               	retlw	61	;'='
  5057  100A  343D               	retlw	61	;'='
  5058  100B  3420               	retlw	32	;' '
  5059  100C  3472               	retlw	114	;'r'
  5060  100D  3400               	retlw	0
  5061                           
  5062                           	psect	stringtext3
  5063  0000                     __pstringtext3:	
  5064  1000                     
  5065                           ; #config settings
  5066  0000                     
  5067                           	psect	cinit
  5068  0039                     start_initialization:	
  5069  0039                     __initialization:	
  5070                           
  5071                           ; Initialize objects allocated to BANK1
  5072  0039  30B8               	movlw	low __pidataBANK1
  5073  003A  0084               	movwf	4
  5074  003B  308D               	movlw	(high __pidataBANK1)| (0+128)
  5075  003C  0085               	movwf	5
  5076  003D  30C0               	movlw	low __pdataBANK1
  5077  003E  0086               	movwf	6
  5078  003F  3000               	movlw	high __pdataBANK1
  5079  0040  0087               	movwf	7
  5080  0041  301B               	movlw	27
  5081  0042  318C  24BC  3180   	fcall	init_ram
  5082                           
  5083                           ; Clear objects allocated to COMMON
  5084  0045  01F6               	clrf	__pbssCOMMON& (0+127)
  5085  0046  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  5086  0047  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  5087  0048  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  5088  0049  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  5089                           
  5090                           ; Clear objects allocated to BANK0
  5091  004A  3041               	movlw	low __pbssBANK0
  5092  004B  0084               	movwf	4
  5093  004C  3000               	movlw	high __pbssBANK0
  5094  004D  0085               	movwf	5
  5095  004E  3017               	movlw	23
  5096  004F  318C  24B6  3180   	fcall	clear_ram0
  5097                           
  5098                           ; Clear objects allocated to BANK1
  5099  0052  30A0               	movlw	low __pbssBANK1
  5100  0053  0084               	movwf	4
  5101  0054  3000               	movlw	high __pbssBANK1
  5102  0055  0085               	movwf	5
  5103  0056  3020               	movlw	32
  5104  0057  318C  24B6         	fcall	clear_ram0
  5105  0059                     end_of_initialization:	
  5106                           ;End of C runtime variable initialization code
  5107                           
  5108  0059                     __end_of__initialization:	
  5109  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5110  005A  0020               	movlb	0
  5111  005B  3186  2E9E         	ljmp	_main	;jump to C main() function
  5112                           
  5113                           	psect	bssCOMMON
  5114  0076                     __pbssCOMMON:	
  5115  0076                     _gExitFlag:	
  5116  0076                     	ds	1
  5117  0077                     _gEnterFlag:	
  5118  0077                     	ds	1
  5119  0078                     _gTimer0NormalFlashFlag:	
  5120  0078                     	ds	1
  5121  0079                     _gTimer0NormalFalshCnt:	
  5122  0079                     	ds	1
  5123  007A                     _gTimer0AlarmFlashFlag:	
  5124  007A                     	ds	1
  5125                           
  5126                           	psect	bssBANK0
  5127  0041                     __pbssBANK0:	
  5128  0041                     _gBoxCntStruct:	
  5129  0041                     	ds	21
  5130  0056                     _gTimer3Flag:	
  5131  0056                     	ds	1
  5132  0057                     _gInterruptFlag:	
  5133  0057                     	ds	1
  5134                           
  5135                           	psect	bssBANK1
  5136  00A0                     __pbssBANK1:	
  5137  00A0                     _HEFBufferData:	
  5138  00A0                     	ds	32
  5139                           
  5140                           	psect	dataBANK1
  5141  00C0                     __pdataBANK1:	
  5142  00C0                     _display_data_1:	
  5143  00C0                     	ds	16
  5144  00D0                     _display_data_2:	
  5145  00D0                     	ds	11
  5146                           
  5147                           	psect	inittext
  5148  0CBC                     init_ram:	
  5149  0CBC  00FE               	movwf	126
  5150  0CBD                     initloop:	
  5151  0CBD  0012               	moviw fsr0++
  5152  0CBE  001E               	movwi fsr1++
  5153  0CBF  0BFE               	decfsz	126,f
  5154  0CC0  2CBD               	goto	initloop
  5155  0CC1  3400               	retlw	0
  5156                           
  5157                           	psect	clrtext
  5158  0CB6                     clear_ram0:	
  5159                           ;	Called with FSR0 containing the base address, and
  5160                           ;	WREG with the size to clear
  5161                           
  5162  0CB6  0064               	clrwdt	;clear the watchdog before getting into this loop
  5163  0CB7                     clrloop0:	
  5164  0CB7  0180               	clrf	0	;clear RAM location pointed to by FSR
  5165  0CB8  3101               	addfsr 0,1
  5166  0CB9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5167  0CBA  2CB7               	goto	clrloop0	;have we reached the end yet?
  5168  0CBB  3400               	retlw	0	;all done for this memory range, return
  5169                           
  5170                           	psect	cstackCOMMON
  5171  0070                     __pcstackCOMMON:	
  5172  0070                     ?_TMR0_DefaultInterruptHandler:	
  5173  0070                     ??_TMR0_DefaultInterruptHandler:	
  5174                           ; 1 bytes @ 0x0
  5175                           
  5176  0070                     ?_TMR0_CallBack:	
  5177                           ; 1 bytes @ 0x0
  5178                           
  5179  0070                     ??_TMR0_CallBack:	
  5180                           ; 1 bytes @ 0x0
  5181                           
  5182  0070                     ?_TMR1_DefaultInterruptHandler:	
  5183                           ; 1 bytes @ 0x0
  5184                           
  5185  0070                     ??_TMR1_DefaultInterruptHandler:	
  5186                           ; 1 bytes @ 0x0
  5187                           
  5188  0070                     ?_TMR1_CallBack:	
  5189                           ; 1 bytes @ 0x0
  5190                           
  5191  0070                     ??_TMR1_CallBack:	
  5192                           ; 1 bytes @ 0x0
  5193                           
  5194  0070                     ?_PIN_MANAGER_Initialize:	
  5195                           ; 1 bytes @ 0x0
  5196                           
  5197  0070                     ?_OSCILLATOR_Initialize:	
  5198                           ; 1 bytes @ 0x0
  5199                           
  5200  0070                     ?_TMR3_Initialize:	
  5201                           ; 1 bytes @ 0x0
  5202                           
  5203  0070                     ?_EXT_INT_Initialize:	
  5204                           ; 1 bytes @ 0x0
  5205                           
  5206  0070                     ?_INT_ISR:	
  5207                           ; 1 bytes @ 0x0
  5208                           
  5209  0070                     ?_PIN_MANAGER_IOC:	
  5210                           ; 1 bytes @ 0x0
  5211                           
  5212  0070                     ??_PIN_MANAGER_IOC:	
  5213                           ; 1 bytes @ 0x0
  5214                           
  5215  0070                     ?_TMR3_ISR:	
  5216                           ; 1 bytes @ 0x0
  5217                           
  5218  0070                     ?_TMR3_DefaultInterruptHandler:	
  5219                           ; 1 bytes @ 0x0
  5220                           
  5221  0070                     ??_TMR3_DefaultInterruptHandler:	
  5222                           ; 1 bytes @ 0x0
  5223                           
  5224  0070                     ?_TMR3_CallBack:	
  5225                           ; 1 bytes @ 0x0
  5226                           
  5227  0070                     ??_TMR3_CallBack:	
  5228                           ; 1 bytes @ 0x0
  5229                           
  5230  0070                     ?_bsp_TimerInterruptISRCallback:	
  5231                           ; 1 bytes @ 0x0
  5232                           
  5233  0070                     ??_bsp_TimerInterruptISRCallback:	
  5234                           ; 1 bytes @ 0x0
  5235                           
  5236  0070                     ?_INT_CallBack:	
  5237                           ; 1 bytes @ 0x0
  5238                           
  5239  0070                     ??_INT_CallBack:	
  5240                           ; 1 bytes @ 0x0
  5241                           
  5242  0070                     ?_bsp_CounterInit:	
  5243                           ; 1 bytes @ 0x0
  5244                           
  5245  0070                     ?_TMR0_Initialize:	
  5246                           ; 1 bytes @ 0x0
  5247                           
  5248  0070                     ?_TMR0_ISR:	
  5249                           ; 1 bytes @ 0x0
  5250                           
  5251  0070                     ?_TMR1_Initialize:	
  5252                           ; 1 bytes @ 0x0
  5253                           
  5254  0070                     ?_TMR1_WriteTimer:	
  5255                           ; 1 bytes @ 0x0
  5256                           
  5257  0070                     ?_TMR1_ISR:	
  5258                           ; 1 bytes @ 0x0
  5259                           
  5260  0070                     ?_SYSTEM_Initialize:	
  5261                           ; 1 bytes @ 0x0
  5262                           
  5263  0070                     ?_INTERRUPT_InterruptManager:	
  5264                           ; 1 bytes @ 0x0
  5265                           
  5266  0070                     ?_TMR3_WriteTimer:	
  5267                           ; 1 bytes @ 0x0
  5268                           
  5269  0070                     ?_INT_DefaultInterruptHandler:	
  5270                           ; 1 bytes @ 0x0
  5271                           
  5272  0070                     ??_INT_DefaultInterruptHandler:	
  5273                           ; 1 bytes @ 0x0
  5274                           
  5275  0070                     ?_LCDInit:	
  5276                           ; 1 bytes @ 0x0
  5277                           
  5278  0070                     ?_Data_Toseg:	
  5279                           ; 1 bytes @ 0x0
  5280                           
  5281  0070                     ?_HEFLASH_checkData:	
  5282                           ; 1 bytes @ 0x0
  5283                           
  5284  0070                     ?_main:	
  5285                           ; 1 bytes @ 0x0
  5286                           
  5287  0070                     ?__unlock:	
  5288                           ; 1 bytes @ 0x0
  5289                           
  5290  0070                     TMR1_WriteTimer@timerVal:	
  5291                           ; 1 bytes @ 0x0
  5292                           
  5293  0070                     TMR3_WriteTimer@timerVal:	
  5294                           ; 2 bytes @ 0x0
  5295                           
  5296                           
  5297                           ; 2 bytes @ 0x0
  5298  0070                     	ds	1
  5299  0071                     ??_INT_ISR:	
  5300  0071                     ??_TMR0_ISR:	
  5301                           ; 1 bytes @ 0x1
  5302                           
  5303                           
  5304                           ; 1 bytes @ 0x1
  5305  0071                     	ds	1
  5306  0072                     ??_TMR3_ISR:	
  5307  0072                     ??_TMR1_WriteTimer:	
  5308                           ; 1 bytes @ 0x2
  5309                           
  5310  0072                     ??_TMR1_ISR:	
  5311                           ; 1 bytes @ 0x2
  5312                           
  5313  0072                     ??_INTERRUPT_InterruptManager:	
  5314                           ; 1 bytes @ 0x2
  5315                           
  5316  0072                     ??_TMR3_WriteTimer:	
  5317                           ; 1 bytes @ 0x2
  5318                           
  5319                           
  5320                           ; 1 bytes @ 0x2
  5321  0072                     	ds	1
  5322  0073                     ?_TMR0_SetInterruptHandler:	
  5323  0073                     ?_TMR1_SetInterruptHandler:	
  5324                           ; 1 bytes @ 0x3
  5325                           
  5326  0073                     ??_PIN_MANAGER_Initialize:	
  5327                           ; 1 bytes @ 0x3
  5328                           
  5329  0073                     ??_OSCILLATOR_Initialize:	
  5330                           ; 1 bytes @ 0x3
  5331                           
  5332  0073                     ?_TMR3_SetInterruptHandler:	
  5333                           ; 1 bytes @ 0x3
  5334                           
  5335  0073                     ??_memset:	
  5336                           ; 1 bytes @ 0x3
  5337                           
  5338  0073                     ??_bsp_CounterInit:	
  5339                           ; 1 bytes @ 0x3
  5340                           
  5341  0073                     ?_INT_SetInterruptHandler:	
  5342                           ; 1 bytes @ 0x3
  5343                           
  5344  0073                     ??__fassert:	
  5345                           ; 1 bytes @ 0x3
  5346                           
  5347  0073                     ?_LCDSendData:	
  5348                           ; 1 bytes @ 0x3
  5349                           
  5350  0073                     ??__unlock:	
  5351                           ; 1 bytes @ 0x3
  5352                           
  5353  0073                     ??_FLASH_write:	
  5354                           ; 1 bytes @ 0x3
  5355                           
  5356  0073                     ?_FLASH_erase:	
  5357                           ; 1 bytes @ 0x3
  5358                           
  5359  0073                     ??___llmod:	
  5360                           ; 1 bytes @ 0x3
  5361                           
  5362  0073                     ??___lwmod:	
  5363                           ; 1 bytes @ 0x3
  5364                           
  5365  0073                     ?_FLASH_read:	
  5366                           ; 1 bytes @ 0x3
  5367                           
  5368  0073                     FLASH_write@temp:	
  5369                           ; 2 bytes @ 0x3
  5370                           
  5371  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  5372                           ; 1 bytes @ 0x3
  5373                           
  5374  0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  5375                           ; 2 bytes @ 0x3
  5376                           
  5377  0073                     TMR3_SetInterruptHandler@InterruptHandler:	
  5378                           ; 2 bytes @ 0x3
  5379                           
  5380  0073                     INT_SetInterruptHandler@InterruptHandler:	
  5381                           ; 2 bytes @ 0x3
  5382                           
  5383  0073                     LCDSendData@RS:	
  5384                           ; 2 bytes @ 0x3
  5385                           
  5386  0073                     FLASH_read@address:	
  5387                           ; 2 bytes @ 0x3
  5388                           
  5389  0073                     FLASH_erase@address:	
  5390                           ; 2 bytes @ 0x3
  5391                           
  5392                           
  5393                           ; 2 bytes @ 0x3
  5394  0073                     	ds	1
  5395  0074                     ___llmod@counter:	
  5396  0074                     ___lwmod@counter:	
  5397                           ; 1 bytes @ 0x4
  5398                           
  5399  0074                     memset@p1:	
  5400                           ; 1 bytes @ 0x4
  5401                           
  5402                           
  5403                           ; 1 bytes @ 0x4
  5404  0074                     	ds	1
  5405  0075                     ??_TMR0_SetInterruptHandler:	
  5406  0075                     ??_TMR1_SetInterruptHandler:	
  5407                           ; 1 bytes @ 0x5
  5408                           
  5409  0075                     ??_TMR3_Initialize:	
  5410                           ; 1 bytes @ 0x5
  5411                           
  5412  0075                     ??_EXT_INT_Initialize:	
  5413                           ; 1 bytes @ 0x5
  5414                           
  5415  0075                     ??_TMR3_SetInterruptHandler:	
  5416                           ; 1 bytes @ 0x5
  5417                           
  5418  0075                     ??_TMR0_Initialize:	
  5419                           ; 1 bytes @ 0x5
  5420                           
  5421  0075                     ??_TMR1_Initialize:	
  5422                           ; 1 bytes @ 0x5
  5423                           
  5424  0075                     ??_INT_SetInterruptHandler:	
  5425                           ; 1 bytes @ 0x5
  5426                           
  5427  0075                     ??_FLASH_read:	
  5428                           ; 1 bytes @ 0x5
  5429                           
  5430  0075                     ??_FLASH_erase:	
  5431                           ; 1 bytes @ 0x5
  5432                           
  5433  0075                     ??___lldiv:	
  5434                           ; 1 bytes @ 0x5
  5435                           
  5436  0075                     ??___lwdiv:	
  5437                           ; 1 bytes @ 0x5
  5438                           
  5439  0075                     LCDSendData@value:	
  5440                           ; 1 bytes @ 0x5
  5441                           
  5442  0075                     FLASH_erase@temp:	
  5443                           ; 1 bytes @ 0x5
  5444                           
  5445  0075                     memset@p:	
  5446                           ; 1 bytes @ 0x5
  5447                           
  5448                           
  5449                           ; 1 bytes @ 0x5
  5450  0075                     	ds	1
  5451  0076                     ??_SYSTEM_Initialize:	
  5452                           
  5453                           	psect	cstackBANK0
  5454  0020                     __pcstackBANK0:	
  5455                           ; 1 bytes @ 0x6
  5456                           
  5457  0020                     ?_HEFLASH_readBlock:	
  5458  0020                     ?_memset:	
  5459                           ; 1 bytes @ 0x0
  5460                           
  5461  0020                     ?__fassert:	
  5462                           ; 1 bytes @ 0x0
  5463                           
  5464  0020                     ??_LCDSendData:	
  5465                           ; 1 bytes @ 0x0
  5466                           
  5467  0020                     ?_FLASH_write:	
  5468                           ; 1 bytes @ 0x0
  5469                           
  5470  0020                     ?___lwmod:	
  5471                           ; 1 bytes @ 0x0
  5472                           
  5473  0020                     ?___llmod:	
  5474                           ; 2 bytes @ 0x0
  5475                           
  5476  0020                     HEFLASH_readBlock@radd:	
  5477                           ; 4 bytes @ 0x0
  5478                           
  5479  0020                     __fassert@line:	
  5480                           ; 1 bytes @ 0x0
  5481                           
  5482  0020                     FLASH_write@address:	
  5483                           ; 2 bytes @ 0x0
  5484                           
  5485  0020                     ___lwmod@divisor:	
  5486                           ; 2 bytes @ 0x0
  5487                           
  5488  0020                     memset@c:	
  5489                           ; 2 bytes @ 0x0
  5490                           
  5491  0020                     ___llmod@divisor:	
  5492                           ; 2 bytes @ 0x0
  5493                           
  5494                           
  5495                           ; 4 bytes @ 0x0
  5496  0020                     	ds	1
  5497  0021                     HEFLASH_readBlock@count:	
  5498                           
  5499                           ; 1 bytes @ 0x1
  5500  0021                     	ds	1
  5501  0022                     ??_HEFLASH_readBlock:	
  5502  0022                     ??_LCDInit:	
  5503                           ; 1 bytes @ 0x2
  5504                           
  5505  0022                     ?_Print:	
  5506                           ; 1 bytes @ 0x2
  5507                           
  5508  0022                     ??_Print:	
  5509                           ; 1 bytes @ 0x2
  5510                           
  5511  0022                     __fassert@file:	
  5512                           ; 1 bytes @ 0x2
  5513                           
  5514  0022                     FLASH_write@data:	
  5515                           ; 2 bytes @ 0x2
  5516                           
  5517  0022                     ___lwmod@dividend:	
  5518                           ; 2 bytes @ 0x2
  5519                           
  5520  0022                     memset@n:	
  5521                           ; 2 bytes @ 0x2
  5522                           
  5523                           
  5524                           ; 2 bytes @ 0x2
  5525  0022                     	ds	1
  5526  0023                     Print@str:	
  5527                           
  5528                           ; 1 bytes @ 0x3
  5529  0023                     	ds	1
  5530  0024                     ?___lwdiv:	
  5531  0024                     FLASH_write@latch:	
  5532                           ; 2 bytes @ 0x4
  5533                           
  5534  0024                     __fassert@expr:	
  5535                           ; 1 bytes @ 0x4
  5536                           
  5537  0024                     HEFLASH_readBlock@add:	
  5538                           ; 2 bytes @ 0x4
  5539                           
  5540  0024                     ___lwdiv@divisor:	
  5541                           ; 2 bytes @ 0x4
  5542                           
  5543  0024                     ___llmod@dividend:	
  5544                           ; 2 bytes @ 0x4
  5545                           
  5546                           
  5547                           ; 4 bytes @ 0x4
  5548  0024                     	ds	1
  5549  0025                     ?_HEFLASH_writeBlock:	
  5550  0025                     HEFLASH_writeBlock@data:	
  5551                           ; 1 bytes @ 0x5
  5552                           
  5553                           
  5554                           ; 1 bytes @ 0x5
  5555  0025                     	ds	1
  5556  0026                     HEFLASH_writeBlock@count:	
  5557  0026                     HEFLASH_readBlock@buffer:	
  5558                           ; 1 bytes @ 0x6
  5559                           
  5560  0026                     ___lwdiv@dividend:	
  5561                           ; 1 bytes @ 0x6
  5562                           
  5563                           
  5564                           ; 2 bytes @ 0x6
  5565  0026                     	ds	1
  5566  0027                     ??_HEFLASH_writeBlock:	
  5567                           
  5568                           ; 1 bytes @ 0x7
  5569  0027                     	ds	1
  5570  0028                     ?___lldiv:	
  5571  0028                     ___lwdiv@counter:	
  5572                           ; 4 bytes @ 0x8
  5573                           
  5574  0028                     ___lldiv@divisor:	
  5575                           ; 1 bytes @ 0x8
  5576                           
  5577                           
  5578                           ; 4 bytes @ 0x8
  5579  0028                     	ds	1
  5580  0029                     HEFLASH_writeBlock@radd:	
  5581  0029                     ___lwdiv@quotient:	
  5582                           ; 1 bytes @ 0x9
  5583                           
  5584                           
  5585                           ; 2 bytes @ 0x9
  5586  0029                     	ds	1
  5587  002A                     HEFLASH_writeBlock@add:	
  5588                           
  5589                           ; 2 bytes @ 0xA
  5590  002A                     	ds	2
  5591  002C                     ___lldiv@dividend:	
  5592                           
  5593                           ; 4 bytes @ 0xC
  5594  002C                     	ds	4
  5595  0030                     ___lldiv@quotient:	
  5596                           
  5597                           ; 4 bytes @ 0x10
  5598  0030                     	ds	4
  5599  0034                     ___lldiv@counter:	
  5600                           
  5601                           ; 1 bytes @ 0x14
  5602  0034                     	ds	1
  5603  0035                     ??_Data_Toseg:	
  5604  0035                     ??_HEFLASH_checkData:	
  5605                           ; 1 bytes @ 0x15
  5606                           
  5607                           
  5608                           ; 1 bytes @ 0x15
  5609  0035                     	ds	9
  5610  003E                     HEFLASH_checkData@r:	
  5611                           
  5612                           ; 2 bytes @ 0x1E
  5613  003E                     	ds	2
  5614  0040                     ??_main:	
  5615                           
  5616                           ; 1 bytes @ 0x20
  5617  0040                     	ds	1
  5618                           
  5619                           	psect	maintext
  5620  069E                     __pmaintext:	
  5621 ;;
  5622 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5623 ;;
  5624 ;; *************** function _main *****************
  5625 ;; Defined at:
  5626 ;;		line 245 in file "main.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;		None
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  1    wreg      void 
  5633 ;; Registers used:
  5634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : B1F/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;Total ram usage:        1 bytes
  5645 ;; Hardware stack levels required when called:    8
  5646 ;; This function calls:
  5647 ;;		_Data_Toseg
  5648 ;;		_HEFLASH_checkData
  5649 ;;		_LCDInit
  5650 ;;		_LCDSendData
  5651 ;;		_Print
  5652 ;;		_SYSTEM_Initialize
  5653 ;;		_bsp_CounterInit
  5654 ;; This function is called by:
  5655 ;;		Startup code after reset
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _main
  5661  069E                     _main:	
  5662                           
  5663                           ;main.c: 249: SYSTEM_Initialize();
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5667  069E  318D  2549  3186   	fcall	_SYSTEM_Initialize
  5668                           
  5669                           ;main.c: 250: bsp_CounterInit();
  5670  06A1  318E  260B  3186   	fcall	_bsp_CounterInit
  5671                           
  5672                           ;main.c: 251: LCDInit();
  5673  06A4  3187  273F  3186   	fcall	_LCDInit
  5674                           
  5675                           ;main.c: 255: HEFLASH_checkData();
  5676  06A7  3180  205D  3186   	fcall	_HEFLASH_checkData
  5677                           
  5678                           ;main.c: 257: LCDSendData(0, 0b10000000);
  5679  06AA  3000               	movlw	0
  5680  06AB  00F3               	movwf	LCDSendData@RS
  5681  06AC  00F4               	movwf	LCDSendData@RS+1
  5682  06AD  3080               	movlw	128
  5683  06AE  0020               	movlb	0	; select bank0
  5684  06AF  00C0               	movwf	??_main
  5685  06B0  0840               	movf	??_main,w
  5686  06B1  00F5               	movwf	LCDSendData@value
  5687  06B2  3185  25E9  3186   	fcall	_LCDSendData
  5688                           
  5689                           ;main.c: 258: Print(display_data_1);
  5690  06B5  30C0               	movlw	(low (_display_data_1| 0))& (0+255)
  5691  06B6  318E  2628  3186   	fcall	_Print
  5692                           
  5693                           ;main.c: 259: _delay((unsigned long)((200)*(2000000/4000.0)));
  5694  06B9  3082               	movlw	130
  5695  06BA  0020               	movlb	0	; select bank0
  5696  06BB  00C0               	movwf	??_main
  5697  06BC  30DD               	movlw	221
  5698  06BD                     u2367:	
  5699  06BD  0B89               	decfsz	9,f
  5700  06BE  2EBD               	goto	u2367
  5701  06BF  0BC0               	decfsz	??_main,f
  5702  06C0  2EBD               	goto	u2367
  5703  06C1  3200               	nop2
  5704                           
  5705                           ;main.c: 260: LCDSendData(0, 0b11000000);
  5706  06C2  3000               	movlw	0
  5707  06C3  00F3               	movwf	LCDSendData@RS
  5708  06C4  00F4               	movwf	LCDSendData@RS+1
  5709  06C5  30C0               	movlw	192
  5710  06C6  0020               	movlb	0	; select bank0
  5711  06C7  00C0               	movwf	??_main
  5712  06C8  0840               	movf	??_main,w
  5713  06C9  00F5               	movwf	LCDSendData@value
  5714  06CA  3185  25E9  3186   	fcall	_LCDSendData
  5715                           
  5716                           ;main.c: 261: Print(display_data_2);
  5717  06CD  30D0               	movlw	(low (_display_data_2| 0))& (0+255)
  5718  06CE  318E  2628  3186   	fcall	_Print
  5719                           
  5720                           ;main.c: 263: (INTCONbits.GIE = 1);
  5721  06D1  178B               	bsf	11,7	;volatile
  5722                           
  5723                           ;main.c: 266: (INTCONbits.PEIE = 1);
  5724  06D2  170B               	bsf	11,6	;volatile
  5725  06D3                     l2582:	
  5726                           ;main.c: 275: while (1)
  5727                           
  5728                           
  5729                           ;main.c: 276: {
  5730                           ;main.c: 278: if(gInterruptFlag)
  5731  06D3  0020               	movlb	0	; select bank0
  5732  06D4  0857               	movf	_gInterruptFlag,w	;volatile
  5733  06D5  1D03               	btfss	3,2
  5734                           
  5735                           ;main.c: 279: {
  5736                           ;main.c: 281: gInterruptFlag = 0;
  5737  06D6  01D7               	clrf	_gInterruptFlag	;volatile
  5738                           
  5739                           ;main.c: 282: }
  5740                           ;main.c: 284: if(0 == PORTAbits.RA1 )
  5741  06D7  188C               	btfsc	12,1	;volatile
  5742  06D8  2EE7               	goto	l2594
  5743                           
  5744                           ;main.c: 285: {
  5745                           ;main.c: 286: _delay((unsigned long)((5)*(2000000/4000.0)));
  5746  06D9  3004               	movlw	4
  5747  06DA  0020               	movlb	0	; select bank0
  5748  06DB  00C0               	movwf	??_main
  5749  06DC  303D               	movlw	61
  5750  06DD                     u2377:	
  5751  06DD  0B89               	decfsz	9,f
  5752  06DE  2EDD               	goto	u2377
  5753  06DF  0BC0               	decfsz	??_main,f
  5754  06E0  2EDD               	goto	u2377
  5755  06E1  3200               	nop2
  5756                           
  5757                           ;main.c: 287: if(0 == PORTAbits.RA1 )
  5758  06E2  0020               	movlb	0	; select bank0
  5759  06E3  188C               	btfsc	12,1	;volatile
  5760  06E4  2EE7               	goto	l2594
  5761                           
  5762                           ;main.c: 288: {
  5763                           ;main.c: 289: gBoxCntStruct.AlarmFlag = 0;
  5764  06E5  01C3               	clrf	_gBoxCntStruct+2
  5765                           
  5766                           ;main.c: 290: gBoxCntStruct.JamFlag = 0;
  5767  06E6  01C4               	clrf	_gBoxCntStruct+3
  5768  06E7                     l2594:	
  5769                           
  5770                           ;main.c: 291: }
  5771                           ;main.c: 292: }
  5772                           ;main.c: 294: if(gTimer0NormalFlashFlag)
  5773  06E7  0878               	movf	_gTimer0NormalFlashFlag,w	;volatile
  5774  06E8  1903               	btfsc	3,2
  5775  06E9  2F05               	goto	l2604
  5776                           
  5777                           ;main.c: 295: {
  5778                           ;main.c: 296: gTimer0NormalFlashFlag = 0;
  5779  06EA  01F8               	clrf	_gTimer0NormalFlashFlag	;volatile
  5780                           
  5781                           ;main.c: 298: do { LATAbits.LATA4 = ~LATAbits.LATA4; } while(0);
  5782  06EB  1003               	clrc
  5783  06EC  0022               	movlb	2	; select bank2
  5784  06ED  1E0C               	btfss	12,4	;volatile
  5785  06EE  1403               	setc
  5786  06EF  1C03               	btfss	3,0
  5787  06F0  2EF4               	goto	u2260
  5788  06F1  0022               	movlb	2	; select bank2
  5789  06F2  160C               	bsf	12,4	;volatile
  5790  06F3  2EF6               	goto	l2600
  5791  06F4                     u2260:	
  5792  06F4  0022               	movlb	2	; select bank2
  5793  06F5  120C               	bcf	12,4	;volatile
  5794  06F6                     l2600:	
  5795                           
  5796                           ;main.c: 299: if(0 == gBoxCntStruct.AlarmFlag)
  5797  06F6  0020               	movlb	0	; select bank0
  5798  06F7  0843               	movf	_gBoxCntStruct+2,w
  5799  06F8  1D03               	btfss	3,2
  5800  06F9  2F05               	goto	l2604
  5801                           
  5802                           ;main.c: 300: {
  5803                           ;main.c: 301: LATAbits.LATA5 = ~LATAbits.LATA4;
  5804  06FA  1003               	clrc
  5805  06FB  0022               	movlb	2	; select bank2
  5806  06FC  1E0C               	btfss	12,4	;volatile
  5807  06FD  1403               	setc
  5808  06FE  1C03               	btfss	3,0
  5809  06FF  2F03               	goto	u2290
  5810  0700  0022               	movlb	2	; select bank2
  5811  0701  168C               	bsf	12,5	;volatile
  5812  0702  2F05               	goto	l2604
  5813  0703                     u2290:	
  5814  0703  0022               	movlb	2	; select bank2
  5815  0704  128C               	bcf	12,5	;volatile
  5816  0705                     l2604:	
  5817                           
  5818                           ;main.c: 302: }
  5819                           ;main.c: 303: }
  5820                           ;main.c: 304: if(1 == gTimer0AlarmFlashFlag)
  5821  0705  037A               	decf	_gTimer0AlarmFlashFlag,w	;volatile
  5822  0706  1D03               	btfss	3,2
  5823  0707  2F18               	goto	l2612
  5824                           
  5825                           ;main.c: 305: {
  5826                           ;main.c: 306: gTimer0AlarmFlashFlag = 0;
  5827  0708  01FA               	clrf	_gTimer0AlarmFlashFlag	;volatile
  5828                           
  5829                           ;main.c: 307: if(1 == gBoxCntStruct.AlarmFlag)
  5830  0709  0020               	movlb	0	; select bank0
  5831  070A  0343               	decf	_gBoxCntStruct+2,w
  5832  070B  1D03               	btfss	3,2
  5833  070C  2F18               	goto	l2612
  5834                           
  5835                           ;main.c: 308: {
  5836                           ;main.c: 309: LATAbits.LATA5 = ~LATAbits.LATA5;
  5837  070D  1003               	clrc
  5838  070E  0022               	movlb	2	; select bank2
  5839  070F  1E8C               	btfss	12,5	;volatile
  5840  0710  1403               	setc
  5841  0711  1C03               	btfss	3,0
  5842  0712  2F16               	goto	u2330
  5843  0713  0022               	movlb	2	; select bank2
  5844  0714  168C               	bsf	12,5	;volatile
  5845  0715  2F18               	goto	l2612
  5846  0716                     u2330:	
  5847  0716  0022               	movlb	2	; select bank2
  5848  0717  128C               	bcf	12,5	;volatile
  5849  0718                     l2612:	
  5850                           
  5851                           ;main.c: 310: }
  5852                           ;main.c: 311: }
  5853                           ;main.c: 320: if(gBoxCntStruct.DisplayReflashFlag)
  5854  0718  0020               	movlb	0	; select bank0
  5855  0719  0845               	movf	_gBoxCntStruct+4,w
  5856  071A  1903               	btfsc	3,2
  5857  071B  2ED3               	goto	l2582
  5858                           
  5859                           ;main.c: 321: {
  5860                           ;main.c: 323: gBoxCntStruct.DisplayReflashFlag = 0;
  5861  071C  01C5               	clrf	_gBoxCntStruct+4
  5862                           
  5863                           ;main.c: 324: Data_Toseg();
  5864  071D  3182  22FA  3186   	fcall	_Data_Toseg
  5865                           
  5866                           ;main.c: 325: LCDSendData(0, 0b10000000);
  5867  0720  3000               	movlw	0
  5868  0721  00F3               	movwf	LCDSendData@RS
  5869  0722  00F4               	movwf	LCDSendData@RS+1
  5870  0723  3080               	movlw	128
  5871  0724  0020               	movlb	0	; select bank0
  5872  0725  00C0               	movwf	??_main
  5873  0726  0840               	movf	??_main,w
  5874  0727  00F5               	movwf	LCDSendData@value
  5875  0728  3185  25E9  3186   	fcall	_LCDSendData
  5876                           
  5877                           ;main.c: 326: Print(display_data_1);
  5878  072B  30C0               	movlw	(low (_display_data_1| 0))& (0+255)
  5879  072C  318E  2628  3186   	fcall	_Print
  5880                           
  5881                           ;main.c: 327: LCDSendData(0, 0b11000000);
  5882  072F  3000               	movlw	0
  5883  0730  00F3               	movwf	LCDSendData@RS
  5884  0731  00F4               	movwf	LCDSendData@RS+1
  5885  0732  30C0               	movlw	192
  5886  0733  0020               	movlb	0	; select bank0
  5887  0734  00C0               	movwf	??_main
  5888  0735  0840               	movf	??_main,w
  5889  0736  00F5               	movwf	LCDSendData@value
  5890  0737  3185  25E9  3186   	fcall	_LCDSendData
  5891                           
  5892                           ;main.c: 330: Print(display_data_2);
  5893  073A  30D0               	movlw	(low (_display_data_2| 0))& (0+255)
  5894  073B  318E  2628  3186   	fcall	_Print
  5895  073E  2ED3               	goto	l2582
  5896  073F                     __end_of_main:	
  5897                           
  5898                           	psect	text1
  5899  0E0B                     __ptext1:	
  5900 ;; *************** function _bsp_CounterInit *****************
  5901 ;; Defined at:
  5902 ;;		line 6 in file "bsp_counter.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;		None
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, status,2
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    4
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           
  5931                           ;psect for function _bsp_CounterInit
  5932  0E0B                     _bsp_CounterInit:	
  5933                           
  5934                           ;bsp_counter.c: 8: gBoxCntStruct.AlarmFlag = 0;
  5935                           
  5936                           ;incstack = 0
  5937                           ; Regs used in _bsp_CounterInit: [wreg+status,2]
  5938  0E0B  0020               	movlb	0	; select bank0
  5939  0E0C  01C3               	clrf	_gBoxCntStruct+2
  5940                           
  5941                           ;bsp_counter.c: 9: gBoxCntStruct.JamFlag = 0;
  5942  0E0D  01C4               	clrf	_gBoxCntStruct+3
  5943                           
  5944                           ;bsp_counter.c: 10: gBoxCntStruct.LargeBoxCnt = 0;
  5945  0E0E  01CE               	clrf	_gBoxCntStruct+13
  5946  0E0F  01CF               	clrf	_gBoxCntStruct+14
  5947                           
  5948                           ;bsp_counter.c: 11: gBoxCntStruct.MiddleBoxCnt = 0;
  5949  0E10  01CC               	clrf	_gBoxCntStruct+11
  5950  0E11  01CD               	clrf	_gBoxCntStruct+12
  5951                           
  5952                           ;bsp_counter.c: 12: gBoxCntStruct.SmallBoxCnt = 0;
  5953  0E12  01CA               	clrf	_gBoxCntStruct+9
  5954  0E13  01CB               	clrf	_gBoxCntStruct+10
  5955                           
  5956                           ;bsp_counter.c: 13: gBoxCntStruct.BoxSum = 0;
  5957  0E14  3000               	movlw	0
  5958  0E15  00D5               	movwf	_gBoxCntStruct+20
  5959  0E16  3000               	movlw	0
  5960  0E17  00D4               	movwf	_gBoxCntStruct+19
  5961  0E18  3000               	movlw	0
  5962  0E19  00D3               	movwf	_gBoxCntStruct+18
  5963  0E1A  3000               	movlw	0
  5964  0E1B  00D2               	movwf	_gBoxCntStruct+17
  5965                           
  5966                           ;bsp_counter.c: 14: gBoxCntStruct.SingleTimeCnt = 0;
  5967  0E1C  3000               	movlw	0
  5968  0E1D  00C9               	movwf	_gBoxCntStruct+8
  5969  0E1E  3000               	movlw	0
  5970  0E1F  00C8               	movwf	_gBoxCntStruct+7
  5971  0E20  3000               	movlw	0
  5972  0E21  00C7               	movwf	_gBoxCntStruct+6
  5973  0E22  3000               	movlw	0
  5974  0E23  00C6               	movwf	_gBoxCntStruct+5
  5975                           
  5976                           ;bsp_counter.c: 15: gBoxCntStruct.TimeCntEndFlag = 0;
  5977  0E24  01C2               	clrf	_gBoxCntStruct+1
  5978                           
  5979                           ;bsp_counter.c: 16: gBoxCntStruct.TimeCntStartFlag = 0;
  5980  0E25  01C1               	clrf	_gBoxCntStruct
  5981                           
  5982                           ;bsp_counter.c: 17: gBoxCntStruct.DisplayReflashFlag = 0;
  5983  0E26  01C5               	clrf	_gBoxCntStruct+4
  5984  0E27  0008               	return
  5985  0E28                     __end_of_bsp_CounterInit:	
  5986                           
  5987                           	psect	text2
  5988  0D49                     __ptext2:	
  5989 ;; *************** function _SYSTEM_Initialize *****************
  5990 ;; Defined at:
  5991 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;		None
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;		None
  5996 ;; Return value:  Size  Location     Type
  5997 ;;                  1    wreg      void 
  5998 ;; Registers used:
  5999 ;;		wreg, status,2, status,0, pclath, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6009 ;;Total ram usage:        0 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    6
  6012 ;; This function calls:
  6013 ;;		_EXT_INT_Initialize
  6014 ;;		_OSCILLATOR_Initialize
  6015 ;;		_PIN_MANAGER_Initialize
  6016 ;;		_TMR0_Initialize
  6017 ;;		_TMR1_Initialize
  6018 ;;		_TMR3_Initialize
  6019 ;; This function is called by:
  6020 ;;		_main
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           
  6025                           ;psect for function _SYSTEM_Initialize
  6026  0D49                     _SYSTEM_Initialize:	
  6027                           
  6028                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  6029                           
  6030                           ;incstack = 0
  6031                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6032  0D49  318E  2649  318D   	fcall	_PIN_MANAGER_Initialize
  6033                           
  6034                           ;mcc.c: 53: OSCILLATOR_Initialize();
  6035  0D4C  318C  24D0  318D   	fcall	_OSCILLATOR_Initialize
  6036                           
  6037                           ;mcc.c: 54: TMR3_Initialize();
  6038  0D4F  318D  259E  318D   	fcall	_TMR3_Initialize
  6039                           
  6040                           ;mcc.c: 55: EXT_INT_Initialize();
  6041  0D52  318C  24EB  318D   	fcall	_EXT_INT_Initialize
  6042                           
  6043                           ;mcc.c: 56: TMR1_Initialize();
  6044  0D55  318D  2587  318D   	fcall	_TMR1_Initialize
  6045                           
  6046                           ;mcc.c: 57: TMR0_Initialize();
  6047  0D58  318D  255B         	fcall	_TMR0_Initialize
  6048  0D5A  0008               	return
  6049  0D5B                     __end_of_SYSTEM_Initialize:	
  6050                           
  6051                           	psect	text3
  6052  0D9E                     __ptext3:	
  6053 ;; *************** function _TMR3_Initialize *****************
  6054 ;; Defined at:
  6055 ;;		line 67 in file "mcc_generated_files/tmr3.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;		None
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;		None
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		wreg, status,2, status,0, pclath, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6073 ;;Total ram usage:        0 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; Hardware stack levels required when called:    5
  6076 ;; This function calls:
  6077 ;;		_TMR3_SetInterruptHandler
  6078 ;; This function is called by:
  6079 ;;		_SYSTEM_Initialize
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           
  6084                           ;psect for function _TMR3_Initialize
  6085  0D9E                     _TMR3_Initialize:	
  6086                           
  6087                           ;tmr3.c: 72: T3GCON = 0x00;
  6088                           
  6089                           ;incstack = 0
  6090                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6091  0D9E  0029               	movlb	9	; select bank9
  6092  0D9F  0196               	clrf	22	;volatile
  6093                           
  6094                           ;tmr3.c: 75: TMR3H = 0xEC;
  6095  0DA0  30EC               	movlw	236
  6096  0DA1  0094               	movwf	20	;volatile
  6097                           
  6098                           ;tmr3.c: 78: TMR3L = 0x78;
  6099  0DA2  3078               	movlw	120
  6100  0DA3  0093               	movwf	19	;volatile
  6101                           
  6102                           ;tmr3.c: 81: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  6103  0DA4  0814               	movf	20,w	;volatile
  6104  0DA5  0020               	movlb	0	; select bank0
  6105  0DA6  00DD               	movwf	_timer3ReloadVal+1	;volatile
  6106  0DA7  0029               	movlb	9	; select bank9
  6107  0DA8  0813               	movf	19,w	;volatile
  6108  0DA9  0020               	movlb	0	; select bank0
  6109  0DAA  00DC               	movwf	_timer3ReloadVal	;volatile
  6110                           
  6111                           ;tmr3.c: 84: PIR5bits.TMR3IF = 0;
  6112  0DAB  1314               	bcf	20,6	;volatile
  6113                           
  6114                           ;tmr3.c: 87: PIE5bits.TMR3IE = 1;
  6115  0DAC  0021               	movlb	1	; select bank1
  6116  0DAD  1714               	bsf	20,6	;volatile
  6117                           
  6118                           ;tmr3.c: 90: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  6119  0DAE  30FF               	movlw	low _TMR3_DefaultInterruptHandler
  6120  0DAF  00F3               	movwf	TMR3_SetInterruptHandler@InterruptHandler
  6121  0DB0  3007               	movlw	high _TMR3_DefaultInterruptHandler
  6122  0DB1  00F4               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
  6123  0DB2  318C  24B0         	fcall	_TMR3_SetInterruptHandler
  6124                           
  6125                           ;tmr3.c: 93: T3CON = 0x05;
  6126  0DB4  3005               	movlw	5
  6127  0DB5  0029               	movlb	9	; select bank9
  6128  0DB6  0095               	movwf	21	;volatile
  6129  0DB7  0008               	return
  6130  0DB8                     __end_of_TMR3_Initialize:	
  6131                           
  6132                           	psect	text4
  6133  0CB0                     __ptext4:	
  6134 ;; *************** function _TMR3_SetInterruptHandler *****************
  6135 ;; Defined at:
  6136 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6139 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;		None
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6155 ;;Total ram usage:        2 bytes
  6156 ;; Hardware stack levels used:    1
  6157 ;; Hardware stack levels required when called:    4
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_TMR3_Initialize
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           
  6166                           ;psect for function _TMR3_SetInterruptHandler
  6167  0CB0                     _TMR3_SetInterruptHandler:	
  6168                           
  6169                           ;tmr3.c: 183: TMR3_InterruptHandler = InterruptHandler;
  6170                           
  6171                           ;incstack = 0
  6172                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  6173  0CB0  0874               	movf	TMR3_SetInterruptHandler@InterruptHandler+1,w
  6174  0CB1  0020               	movlb	0	; select bank0
  6175  0CB2  00DB               	movwf	_TMR3_InterruptHandler+1
  6176  0CB3  0873               	movf	TMR3_SetInterruptHandler@InterruptHandler,w
  6177  0CB4  00DA               	movwf	_TMR3_InterruptHandler
  6178  0CB5  0008               	return
  6179  0CB6                     __end_of_TMR3_SetInterruptHandler:	
  6180                           
  6181                           	psect	text5
  6182  0D87                     __ptext5:	
  6183 ;; *************** function _TMR1_Initialize *****************
  6184 ;; Defined at:
  6185 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, pclath, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used:    1
  6205 ;; Hardware stack levels required when called:    5
  6206 ;; This function calls:
  6207 ;;		_TMR1_SetInterruptHandler
  6208 ;; This function is called by:
  6209 ;;		_SYSTEM_Initialize
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function _TMR1_Initialize
  6215  0D87                     _TMR1_Initialize:	
  6216                           
  6217                           ;tmr1.c: 69: T1GCON = 0x00;
  6218                           
  6219                           ;incstack = 0
  6220                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6221  0D87  0020               	movlb	0	; select bank0
  6222  0D88  0199               	clrf	25	;volatile
  6223                           
  6224                           ;tmr1.c: 72: TMR1H = 0xFF;
  6225  0D89  30FF               	movlw	255
  6226  0D8A  0097               	movwf	23	;volatile
  6227                           
  6228                           ;tmr1.c: 75: TMR1L = 0xFF;
  6229  0D8B  30FF               	movlw	255
  6230  0D8C  0096               	movwf	22	;volatile
  6231                           
  6232                           ;tmr1.c: 78: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6233  0D8D  0817               	movf	23,w	;volatile
  6234  0D8E  00E1               	movwf	_timer1ReloadVal+1	;volatile
  6235  0D8F  0816               	movf	22,w	;volatile
  6236  0D90  00E0               	movwf	_timer1ReloadVal	;volatile
  6237                           
  6238                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  6239  0D91  1010               	bcf	16,0	;volatile
  6240                           
  6241                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  6242  0D92  0021               	movlb	1	; select bank1
  6243  0D93  1410               	bsf	16,0	;volatile
  6244                           
  6245                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  6246  0D94  3003               	movlw	low _TMR1_DefaultInterruptHandler
  6247  0D95  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6248  0D96  3000               	movlw	high _TMR1_DefaultInterruptHandler
  6249  0D97  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6250  0D98  318C  24AA         	fcall	_TMR1_SetInterruptHandler
  6251                           
  6252                           ;tmr1.c: 90: T1CON = 0x01;
  6253  0D9A  3001               	movlw	1
  6254  0D9B  0020               	movlb	0	; select bank0
  6255  0D9C  0098               	movwf	24	;volatile
  6256  0D9D  0008               	return
  6257  0D9E                     __end_of_TMR1_Initialize:	
  6258                           
  6259                           	psect	text6
  6260  0CAA                     __ptext6:	
  6261 ;; *************** function _TMR1_SetInterruptHandler *****************
  6262 ;; Defined at:
  6263 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6266 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;		None
  6269 ;; Return value:  Size  Location     Type
  6270 ;;                  1    wreg      void 
  6271 ;; Registers used:
  6272 ;;		wreg
  6273 ;; Tracked objects:
  6274 ;;		On entry : 0/0
  6275 ;;		On exit  : 0/0
  6276 ;;		Unchanged: 0/0
  6277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6281 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6282 ;;Total ram usage:        2 bytes
  6283 ;; Hardware stack levels used:    1
  6284 ;; Hardware stack levels required when called:    4
  6285 ;; This function calls:
  6286 ;;		Nothing
  6287 ;; This function is called by:
  6288 ;;		_TMR1_Initialize
  6289 ;; This function uses a non-reentrant model
  6290 ;;
  6291                           
  6292                           
  6293                           ;psect for function _TMR1_SetInterruptHandler
  6294  0CAA                     _TMR1_SetInterruptHandler:	
  6295                           
  6296                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  6297                           
  6298                           ;incstack = 0
  6299                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6300  0CAA  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6301  0CAB  0020               	movlb	0	; select bank0
  6302  0CAC  00DF               	movwf	_TMR1_InterruptHandler+1
  6303  0CAD  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6304  0CAE  00DE               	movwf	_TMR1_InterruptHandler
  6305  0CAF  0008               	return
  6306  0CB0                     __end_of_TMR1_SetInterruptHandler:	
  6307                           
  6308                           	psect	text7
  6309  0D5B                     __ptext7:	
  6310 ;; *************** function _TMR0_Initialize *****************
  6311 ;; Defined at:
  6312 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  6313 ;; Parameters:    Size  Location     Type
  6314 ;;		None
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;		None
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, status,2, status,0, pclath, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;Total ram usage:        1 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    5
  6333 ;; This function calls:
  6334 ;;		_TMR0_SetInterruptHandler
  6335 ;; This function is called by:
  6336 ;;		_SYSTEM_Initialize
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           
  6341                           ;psect for function _TMR0_Initialize
  6342  0D5B                     _TMR0_Initialize:	
  6343                           
  6344                           ;tmr0.c: 73: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6348  0D5B  0021               	movlb	1	; select bank1
  6349  0D5C  0815               	movf	21,w	;volatile
  6350  0D5D  39C0               	andlw	192
  6351  0D5E  3817               	iorlw	23
  6352  0D5F  0095               	movwf	21	;volatile
  6353                           
  6354                           ;tmr0.c: 76: TMR0 = 0x9E;
  6355  0D60  309E               	movlw	158
  6356  0D61  0020               	movlb	0	; select bank0
  6357  0D62  0095               	movwf	21	;volatile
  6358                           
  6359                           ;tmr0.c: 79: timer0ReloadVal= 158;
  6360  0D63  309E               	movlw	158
  6361  0D64  00F5               	movwf	??_TMR0_Initialize
  6362  0D65  0875               	movf	??_TMR0_Initialize,w
  6363  0D66  00E4               	movwf	_timer0ReloadVal	;volatile
  6364                           
  6365                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  6366  0D67  110B               	bcf	11,2	;volatile
  6367                           
  6368                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  6369  0D68  168B               	bsf	11,5	;volatile
  6370                           
  6371                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  6372  0D69  309D               	movlw	low _TMR0_DefaultInterruptHandler
  6373  0D6A  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6374  0D6B  300C               	movlw	high _TMR0_DefaultInterruptHandler
  6375  0D6C  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6376  0D6D  318C  24A4         	fcall	_TMR0_SetInterruptHandler
  6377  0D6F  0008               	return
  6378  0D70                     __end_of_TMR0_Initialize:	
  6379                           
  6380                           	psect	text8
  6381  0CA4                     __ptext8:	
  6382 ;; *************** function _TMR0_SetInterruptHandler *****************
  6383 ;; Defined at:
  6384 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6387 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6403 ;;Total ram usage:        2 bytes
  6404 ;; Hardware stack levels used:    1
  6405 ;; Hardware stack levels required when called:    4
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_TMR0_Initialize
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           
  6414                           ;psect for function _TMR0_SetInterruptHandler
  6415  0CA4                     _TMR0_SetInterruptHandler:	
  6416                           
  6417                           ;tmr0.c: 145: TMR0_InterruptHandler = InterruptHandler;
  6418                           
  6419                           ;incstack = 0
  6420                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6421  0CA4  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6422  0CA5  0020               	movlb	0	; select bank0
  6423  0CA6  00E3               	movwf	_TMR0_InterruptHandler+1
  6424  0CA7  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6425  0CA8  00E2               	movwf	_TMR0_InterruptHandler
  6426  0CA9  0008               	return
  6427  0CAA                     __end_of_TMR0_SetInterruptHandler:	
  6428                           
  6429                           	psect	text9
  6430  0E49                     __ptext9:	
  6431 ;; *************** function _PIN_MANAGER_Initialize *****************
  6432 ;; Defined at:
  6433 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;		None
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;		None
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  1    wreg      void 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;Total ram usage:        0 bytes
  6452 ;; Hardware stack levels used:    1
  6453 ;; Hardware stack levels required when called:    4
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_SYSTEM_Initialize
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function _PIN_MANAGER_Initialize
  6463  0E49                     _PIN_MANAGER_Initialize:	
  6464                           
  6465                           ;pin_manager.c: 62: LATA = 0x02;
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6469  0E49  3002               	movlw	2
  6470  0E4A  0022               	movlb	2	; select bank2
  6471  0E4B  008C               	movwf	12	;volatile
  6472                           
  6473                           ;pin_manager.c: 63: LATB = 0xE0;
  6474  0E4C  30E0               	movlw	224
  6475  0E4D  008D               	movwf	13	;volatile
  6476                           
  6477                           ;pin_manager.c: 64: LATC = 0xFE;
  6478  0E4E  30FE               	movlw	254
  6479  0E4F  008E               	movwf	14	;volatile
  6480                           
  6481                           ;pin_manager.c: 69: TRISA = 0x05;
  6482  0E50  3005               	movlw	5
  6483  0E51  0021               	movlb	1	; select bank1
  6484  0E52  008C               	movwf	12	;volatile
  6485                           
  6486                           ;pin_manager.c: 70: TRISB = 0x10;
  6487  0E53  3010               	movlw	16
  6488  0E54  008D               	movwf	13	;volatile
  6489                           
  6490                           ;pin_manager.c: 71: TRISC = 0x01;
  6491  0E55  3001               	movlw	1
  6492  0E56  008E               	movwf	14	;volatile
  6493                           
  6494                           ;pin_manager.c: 76: ANSELC = 0x01;
  6495  0E57  3001               	movlw	1
  6496  0E58  0023               	movlb	3	; select bank3
  6497  0E59  008E               	movwf	14	;volatile
  6498                           
  6499                           ;pin_manager.c: 77: ANSELB = 0x10;
  6500  0E5A  3010               	movlw	16
  6501  0E5B  008D               	movwf	13	;volatile
  6502                           
  6503                           ;pin_manager.c: 78: ANSELA = 0x11;
  6504  0E5C  3011               	movlw	17
  6505  0E5D  008C               	movwf	12	;volatile
  6506                           
  6507                           ;pin_manager.c: 83: WPUB = 0x00;
  6508  0E5E  0024               	movlb	4	; select bank4
  6509  0E5F  018D               	clrf	13	;volatile
  6510                           
  6511                           ;pin_manager.c: 84: WPUA = 0x00;
  6512  0E60  018C               	clrf	12	;volatile
  6513                           
  6514                           ;pin_manager.c: 85: WPUC = 0x00;
  6515  0E61  018E               	clrf	14	;volatile
  6516                           
  6517                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
  6518  0E62  0021               	movlb	1	; select bank1
  6519  0E63  1795               	bsf	21,7	;volatile
  6520                           
  6521                           ;pin_manager.c: 91: ODCONA = 0x00;
  6522  0E64  0025               	movlb	5	; select bank5
  6523  0E65  018C               	clrf	12	;volatile
  6524                           
  6525                           ;pin_manager.c: 92: ODCONB = 0x00;
  6526  0E66  018D               	clrf	13	;volatile
  6527                           
  6528                           ;pin_manager.c: 93: ODCONC = 0x00;
  6529  0E67  018E               	clrf	14	;volatile
  6530                           
  6531                           ;pin_manager.c: 101: INTCONbits.IOCIE = 1;
  6532  0E68  158B               	bsf	11,3	;volatile
  6533                           
  6534                           ;pin_manager.c: 104: INTPPS = 0x02;
  6535  0E69  3002               	movlw	2
  6536  0E6A  003C               	movlb	28	; select bank28
  6537  0E6B  0090               	movwf	16	;volatile
  6538  0E6C  0008               	return
  6539  0E6D                     __end_of_PIN_MANAGER_Initialize:	
  6540                           
  6541                           	psect	text10
  6542  0CD0                     __ptext10:	
  6543 ;; *************** function _OSCILLATOR_Initialize *****************
  6544 ;; Defined at:
  6545 ;;		line 60 in file "mcc_generated_files/mcc.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;		None
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;Total ram usage:        0 bytes
  6564 ;; Hardware stack levels used:    1
  6565 ;; Hardware stack levels required when called:    4
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_SYSTEM_Initialize
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           
  6574                           ;psect for function _OSCILLATOR_Initialize
  6575  0CD0                     _OSCILLATOR_Initialize:	
  6576                           
  6577                           ;mcc.c: 63: OSCCON = 0x60;
  6578                           
  6579                           ;incstack = 0
  6580                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6581  0CD0  3060               	movlw	96
  6582  0CD1  0021               	movlb	1	; select bank1
  6583  0CD2  0099               	movwf	25	;volatile
  6584                           
  6585                           ;mcc.c: 65: OSCTUNE = 0x00;
  6586  0CD3  0198               	clrf	24	;volatile
  6587                           
  6588                           ;mcc.c: 67: BORCON = 0x00;
  6589  0CD4  0022               	movlb	2	; select bank2
  6590  0CD5  0196               	clrf	22	;volatile
  6591  0CD6  0008               	return
  6592  0CD7                     __end_of_OSCILLATOR_Initialize:	
  6593                           
  6594                           	psect	text11
  6595  0CEB                     __ptext11:	
  6596 ;; *************** function _EXT_INT_Initialize *****************
  6597 ;; Defined at:
  6598 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  6599 ;; Parameters:    Size  Location     Type
  6600 ;;		None
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;		None
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  1    wreg      void 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0, pclath, cstack
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6616 ;;Total ram usage:        0 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; Hardware stack levels required when called:    5
  6619 ;; This function calls:
  6620 ;;		_INT_SetInterruptHandler
  6621 ;; This function is called by:
  6622 ;;		_SYSTEM_Initialize
  6623 ;; This function uses a non-reentrant model
  6624 ;;
  6625                           
  6626                           
  6627                           ;psect for function _EXT_INT_Initialize
  6628  0CEB                     _EXT_INT_Initialize:	
  6629                           
  6630                           ;ext_int.c: 83: (INTCONbits.INTF = 0);
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6634  0CEB  108B               	bcf	11,1	;volatile
  6635                           
  6636                           ;ext_int.c: 84: (OPTION_REGbits.INTEDG = 1);
  6637  0CEC  0021               	movlb	1	; select bank1
  6638  0CED  1715               	bsf	21,6	;volatile
  6639                           
  6640                           ;ext_int.c: 86: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  6641  0CEE  309B               	movlw	low _INT_DefaultInterruptHandler
  6642  0CEF  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler
  6643  0CF0  300C               	movlw	high _INT_DefaultInterruptHandler
  6644  0CF1  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  6645  0CF2  318C  249E         	fcall	_INT_SetInterruptHandler
  6646                           
  6647                           ;ext_int.c: 87: (INTCONbits.INTE = 1);
  6648  0CF4  160B               	bsf	11,4	;volatile
  6649  0CF5  0008               	return
  6650  0CF6                     __end_of_EXT_INT_Initialize:	
  6651                           
  6652                           	psect	text12
  6653  0C9E                     __ptext12:	
  6654 ;; *************** function _INT_SetInterruptHandler *****************
  6655 ;; Defined at:
  6656 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6659 ;;		 -> INT_DefaultInterruptHandler(1), 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;Total ram usage:        2 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    4
  6678 ;; This function calls:
  6679 ;;		Nothing
  6680 ;; This function is called by:
  6681 ;;		_EXT_INT_Initialize
  6682 ;; This function uses a non-reentrant model
  6683 ;;
  6684                           
  6685                           
  6686                           ;psect for function _INT_SetInterruptHandler
  6687  0C9E                     _INT_SetInterruptHandler:	
  6688                           
  6689                           ;ext_int.c: 70: INT_InterruptHandler = InterruptHandler;
  6690                           
  6691                           ;incstack = 0
  6692                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  6693  0C9E  0874               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  6694  0C9F  0020               	movlb	0	; select bank0
  6695  0CA0  00D9               	movwf	_INT_InterruptHandler+1
  6696  0CA1  0873               	movf	INT_SetInterruptHandler@InterruptHandler,w
  6697  0CA2  00D8               	movwf	_INT_InterruptHandler
  6698  0CA3  0008               	return
  6699  0CA4                     __end_of_INT_SetInterruptHandler:	
  6700                           
  6701                           	psect	text13
  6702  0E28                     __ptext13:	
  6703 ;; *************** function _Print *****************
  6704 ;; Defined at:
  6705 ;;		line 138 in file "main.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  str             1    wreg     PTR unsigned char 
  6708 ;;		 -> display_data_2(11), display_data_1(16), 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  str             1    3[BANK0 ] PTR unsigned char 
  6711 ;;		 -> display_data_2(11), display_data_1(16), 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6724 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6725 ;;Total ram usage:        2 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    5
  6728 ;; This function calls:
  6729 ;;		_LCDSendData
  6730 ;; This function is called by:
  6731 ;;		_main
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           
  6736                           ;psect for function _Print
  6737  0E28                     _Print:	
  6738                           
  6739                           ;incstack = 0
  6740                           ; Regs used in _Print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6741                           ;Print@str stored from wreg
  6742  0E28  0020               	movlb	0	; select bank0
  6743  0E29  00A3               	movwf	Print@str
  6744  0E2A                     l2472:	
  6745                           ;main.c: 140: while(*str !='\0')
  6746                           
  6747  0E2A  0020               	movlb	0	; select bank0
  6748  0E2B  0823               	movf	Print@str,w
  6749  0E2C  0086               	movwf	6
  6750  0E2D  0187               	clrf	7
  6751  0E2E  0801               	movf	1,w
  6752  0E2F  1903               	btfsc	3,2
  6753  0E30  0008               	return
  6754                           
  6755                           ;main.c: 141: {
  6756                           ;main.c: 142: LCDSendData(1,*str);
  6757  0E31  3001               	movlw	1
  6758  0E32  00F3               	movwf	LCDSendData@RS
  6759  0E33  3000               	movlw	0
  6760  0E34  00F4               	movwf	LCDSendData@RS+1
  6761  0E35  0823               	movf	Print@str,w
  6762  0E36  0086               	movwf	6
  6763  0E37  0187               	clrf	7
  6764  0E38  0801               	movf	1,w
  6765  0E39  00A2               	movwf	??_Print
  6766  0E3A  0822               	movf	??_Print,w
  6767  0E3B  00F5               	movwf	LCDSendData@value
  6768  0E3C  3185  25E9  318E   	fcall	_LCDSendData
  6769                           
  6770                           ;main.c: 143: str++;
  6771  0E3F  3001               	movlw	1
  6772  0E40  0020               	movlb	0	; select bank0
  6773  0E41  00A2               	movwf	??_Print
  6774  0E42  0822               	movf	??_Print,w
  6775  0E43  07A3               	addwf	Print@str,f
  6776                           
  6777                           ;main.c: 144: _delay((unsigned long)((1)*(2000000/4000.0)));
  6778  0E44  30A6               	movlw	166
  6779  0E45                     u2387:	
  6780  0E45  0B89               	decfsz	9,f
  6781  0E46  2E45               	goto	u2387
  6782  0E47  3200               	nop2
  6783  0E48  2E2A               	goto	l2472
  6784  0E49                     __end_of_Print:	
  6785                           
  6786                           	psect	text14
  6787  073F                     __ptext14:	
  6788 ;; *************** function _LCDInit *****************
  6789 ;; Defined at:
  6790 ;;		line 102 in file "main.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6806 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6807 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6808 ;;Total ram usage:        1 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    5
  6811 ;; This function calls:
  6812 ;;		_LCDSendData
  6813 ;; This function is called by:
  6814 ;;		_main
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           
  6819                           ;psect for function _LCDInit
  6820  073F                     _LCDInit:	
  6821                           
  6822                           ;main.c: 104: LATBbits.LATB6 = 0;
  6823                           
  6824                           ;incstack = 0
  6825                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  6826  073F  0022               	movlb	2	; select bank2
  6827  0740  130D               	bcf	13,6	;volatile
  6828                           
  6829                           ;main.c: 105: LATBbits.LATB7 = 0;
  6830  0741  138D               	bcf	13,7	;volatile
  6831                           
  6832                           ;main.c: 106: LATBbits.LATB5 = 0;
  6833  0742  128D               	bcf	13,5	;volatile
  6834                           
  6835                           ;main.c: 107: LATCbits.LATC1 = 0;
  6836  0743  108E               	bcf	14,1	;volatile
  6837                           
  6838                           ;main.c: 108: LATCbits.LATC2 = 0;
  6839  0744  110E               	bcf	14,2	;volatile
  6840                           
  6841                           ;main.c: 109: LATCbits.LATC3 = 0;
  6842  0745  118E               	bcf	14,3	;volatile
  6843                           
  6844                           ;main.c: 110: LATCbits.LATC4 = 0;
  6845  0746  120E               	bcf	14,4	;volatile
  6846                           
  6847                           ;main.c: 111: LATCbits.LATC5 = 0;
  6848  0747  128E               	bcf	14,5	;volatile
  6849                           
  6850                           ;main.c: 112: LATCbits.LATC6 = 0;
  6851  0748  130E               	bcf	14,6	;volatile
  6852                           
  6853                           ;main.c: 113: LATCbits.LATC7 = 0;
  6854  0749  138E               	bcf	14,7	;volatile
  6855                           
  6856                           ;main.c: 115: _delay((unsigned long)((50)*(2000000/4000.0)));
  6857  074A  3021               	movlw	33
  6858  074B  0020               	movlb	0	; select bank0
  6859  074C  00A2               	movwf	??_LCDInit
  6860  074D  3076               	movlw	118
  6861  074E                     u2397:	
  6862  074E  0B89               	decfsz	9,f
  6863  074F  2F4E               	goto	u2397
  6864  0750  0BA2               	decfsz	??_LCDInit,f
  6865  0751  2F4E               	goto	u2397
  6866  0752  0000               	nop
  6867                           
  6868                           ;main.c: 116: LCDSendData(0, 0b00111000);
  6869  0753  3000               	movlw	0
  6870  0754  00F3               	movwf	LCDSendData@RS
  6871  0755  00F4               	movwf	LCDSendData@RS+1
  6872  0756  3038               	movlw	56
  6873  0757  0020               	movlb	0	; select bank0
  6874  0758  00A2               	movwf	??_LCDInit
  6875  0759  0822               	movf	??_LCDInit,w
  6876  075A  00F5               	movwf	LCDSendData@value
  6877  075B  3185  25E9  3187   	fcall	_LCDSendData
  6878                           
  6879                           ;main.c: 119: _delay((unsigned long)((50)*(2000000/4000.0)));
  6880  075E  3021               	movlw	33
  6881  075F  0020               	movlb	0	; select bank0
  6882  0760  00A2               	movwf	??_LCDInit
  6883  0761  3076               	movlw	118
  6884  0762                     u2407:	
  6885  0762  0B89               	decfsz	9,f
  6886  0763  2F62               	goto	u2407
  6887  0764  0BA2               	decfsz	??_LCDInit,f
  6888  0765  2F62               	goto	u2407
  6889  0766  0000               	nop
  6890                           
  6891                           ;main.c: 120: LCDSendData(0, 0b00111000);
  6892  0767  3000               	movlw	0
  6893  0768  00F3               	movwf	LCDSendData@RS
  6894  0769  00F4               	movwf	LCDSendData@RS+1
  6895  076A  3038               	movlw	56
  6896  076B  0020               	movlb	0	; select bank0
  6897  076C  00A2               	movwf	??_LCDInit
  6898  076D  0822               	movf	??_LCDInit,w
  6899  076E  00F5               	movwf	LCDSendData@value
  6900  076F  3185  25E9  3187   	fcall	_LCDSendData
  6901                           
  6902                           ;main.c: 123: _delay((unsigned long)((50)*(2000000/4000.0)));
  6903  0772  3021               	movlw	33
  6904  0773  0020               	movlb	0	; select bank0
  6905  0774  00A2               	movwf	??_LCDInit
  6906  0775  3076               	movlw	118
  6907  0776                     u2417:	
  6908  0776  0B89               	decfsz	9,f
  6909  0777  2F76               	goto	u2417
  6910  0778  0BA2               	decfsz	??_LCDInit,f
  6911  0779  2F76               	goto	u2417
  6912  077A  0000               	nop
  6913                           
  6914                           ;main.c: 124: LCDSendData(0, 0b00111000);
  6915  077B  3000               	movlw	0
  6916  077C  00F3               	movwf	LCDSendData@RS
  6917  077D  00F4               	movwf	LCDSendData@RS+1
  6918  077E  3038               	movlw	56
  6919  077F  0020               	movlb	0	; select bank0
  6920  0780  00A2               	movwf	??_LCDInit
  6921  0781  0822               	movf	??_LCDInit,w
  6922  0782  00F5               	movwf	LCDSendData@value
  6923  0783  3185  25E9  3187   	fcall	_LCDSendData
  6924                           
  6925                           ;main.c: 127: _delay((unsigned long)((50)*(2000000/4000.0)));
  6926  0786  3021               	movlw	33
  6927  0787  0020               	movlb	0	; select bank0
  6928  0788  00A2               	movwf	??_LCDInit
  6929  0789  3076               	movlw	118
  6930  078A                     u2427:	
  6931  078A  0B89               	decfsz	9,f
  6932  078B  2F8A               	goto	u2427
  6933  078C  0BA2               	decfsz	??_LCDInit,f
  6934  078D  2F8A               	goto	u2427
  6935  078E  0000               	nop
  6936                           
  6937                           ;main.c: 128: LCDSendData(0, 0b00111000);
  6938  078F  3000               	movlw	0
  6939  0790  00F3               	movwf	LCDSendData@RS
  6940  0791  00F4               	movwf	LCDSendData@RS+1
  6941  0792  3038               	movlw	56
  6942  0793  0020               	movlb	0	; select bank0
  6943  0794  00A2               	movwf	??_LCDInit
  6944  0795  0822               	movf	??_LCDInit,w
  6945  0796  00F5               	movwf	LCDSendData@value
  6946  0797  3185  25E9  3187   	fcall	_LCDSendData
  6947                           
  6948                           ;main.c: 129: LCDSendData(0, 0b00001111);
  6949  079A  3000               	movlw	0
  6950  079B  00F3               	movwf	LCDSendData@RS
  6951  079C  00F4               	movwf	LCDSendData@RS+1
  6952  079D  300F               	movlw	15
  6953  079E  0020               	movlb	0	; select bank0
  6954  079F  00A2               	movwf	??_LCDInit
  6955  07A0  0822               	movf	??_LCDInit,w
  6956  07A1  00F5               	movwf	LCDSendData@value
  6957  07A2  3185  25E9  3187   	fcall	_LCDSendData
  6958                           
  6959                           ;main.c: 130: LCDSendData(0, 0b00000001);
  6960  07A5  3000               	movlw	0
  6961  07A6  00F3               	movwf	LCDSendData@RS
  6962  07A7  00F4               	movwf	LCDSendData@RS+1
  6963  07A8  01F5               	clrf	LCDSendData@value
  6964  07A9  0AF5               	incf	LCDSendData@value,f
  6965  07AA  3185  25E9  3187   	fcall	_LCDSendData
  6966                           
  6967                           ;main.c: 131: LCDSendData(0, 0b00000110);
  6968  07AD  3000               	movlw	0
  6969  07AE  00F3               	movwf	LCDSendData@RS
  6970  07AF  00F4               	movwf	LCDSendData@RS+1
  6971  07B0  3006               	movlw	6
  6972  07B1  0020               	movlb	0	; select bank0
  6973  07B2  00A2               	movwf	??_LCDInit
  6974  07B3  0822               	movf	??_LCDInit,w
  6975  07B4  00F5               	movwf	LCDSendData@value
  6976  07B5  3185  25E9         	fcall	_LCDSendData
  6977  07B7  0008               	return
  6978  07B8                     __end_of_LCDInit:	
  6979                           
  6980                           	psect	text15
  6981  05E9                     __ptext15:	
  6982 ;; *************** function _LCDSendData *****************
  6983 ;; Defined at:
  6984 ;;		line 78 in file "main.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;  RS              2    3[COMMON] int 
  6987 ;;  value           1    5[COMMON] unsigned char 
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6999 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;Total ram usage:        5 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    4
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_LCDInit
  7010 ;;		_Print
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _LCDSendData
  7017  05E9                     _LCDSendData:	
  7018                           
  7019                           ;main.c: 80: LATBbits.LATB5 = value & 1;
  7020                           
  7021                           ;incstack = 0
  7022                           ; Regs used in _LCDSendData: [wreg+status,2+status,0]
  7023  05E9  0875               	movf	LCDSendData@value,w
  7024  05EA  3901               	andlw	1
  7025  05EB  0020               	movlb	0	; select bank0
  7026  05EC  00A0               	movwf	??_LCDSendData
  7027  05ED  0EA0               	swapf	??_LCDSendData,f
  7028  05EE  0DA0               	rlf	??_LCDSendData,f
  7029  05EF  0022               	movlb	2	; select bank2
  7030  05F0  080D               	movf	13,w	;volatile
  7031  05F1  0020               	movlb	0	; select bank0
  7032  05F2  0620               	xorwf	??_LCDSendData,w
  7033  05F3  39DF               	andlw	-33
  7034  05F4  0620               	xorwf	??_LCDSendData,w
  7035  05F5  0022               	movlb	2	; select bank2
  7036  05F6  008D               	movwf	13	;volatile
  7037                           
  7038                           ;main.c: 81: LATCbits.LATC1 = (value & 2) >> 1;
  7039  05F7  3675               	lsrf	LCDSendData@value,w
  7040  05F8  3901               	andlw	1
  7041  05F9  0020               	movlb	0	; select bank0
  7042  05FA  00A0               	movwf	??_LCDSendData
  7043  05FB  0DA0               	rlf	??_LCDSendData,f
  7044  05FC  0022               	movlb	2	; select bank2
  7045  05FD  080E               	movf	14,w	;volatile
  7046  05FE  0020               	movlb	0	; select bank0
  7047  05FF  0620               	xorwf	??_LCDSendData,w
  7048  0600  39FD               	andlw	-3
  7049  0601  0620               	xorwf	??_LCDSendData,w
  7050  0602  0022               	movlb	2	; select bank2
  7051  0603  008E               	movwf	14	;volatile
  7052                           
  7053                           ;main.c: 82: LATCbits.LATC2 = (value & 4) >> 2;
  7054  0604  0875               	movf	LCDSendData@value,w
  7055  0605  0020               	movlb	0	; select bank0
  7056  0606  00A0               	movwf	??_LCDSendData
  7057  0607  3002               	movlw	2
  7058  0608                     u1215:	
  7059  0608  36A0               	lsrf	??_LCDSendData,f
  7060  0609  0B89               	decfsz	9,f
  7061  060A  2E08               	goto	u1215
  7062  060B  0820               	movf	??_LCDSendData,w
  7063  060C  3901               	andlw	1
  7064  060D  00A1               	movwf	??_LCDSendData+1
  7065  060E  0DA1               	rlf	??_LCDSendData+1,f
  7066  060F  0DA1               	rlf	??_LCDSendData+1,f
  7067  0610  0022               	movlb	2	; select bank2
  7068  0611  080E               	movf	14,w	;volatile
  7069  0612  0020               	movlb	0	; select bank0
  7070  0613  0621               	xorwf	??_LCDSendData+1,w
  7071  0614  39FB               	andlw	-5
  7072  0615  0621               	xorwf	??_LCDSendData+1,w
  7073  0616  0022               	movlb	2	; select bank2
  7074  0617  008E               	movwf	14	;volatile
  7075                           
  7076                           ;main.c: 83: LATCbits.LATC3 = (value & 8) >> 3;
  7077  0618  0875               	movf	LCDSendData@value,w
  7078  0619  0020               	movlb	0	; select bank0
  7079  061A  00A0               	movwf	??_LCDSendData
  7080  061B  3003               	movlw	3
  7081  061C                     u1225:	
  7082  061C  36A0               	lsrf	??_LCDSendData,f
  7083  061D  0B89               	decfsz	9,f
  7084  061E  2E1C               	goto	u1225
  7085  061F  0820               	movf	??_LCDSendData,w
  7086  0620  3901               	andlw	1
  7087  0621  00A1               	movwf	??_LCDSendData+1
  7088  0622  0DA1               	rlf	??_LCDSendData+1,f
  7089  0623  0DA1               	rlf	??_LCDSendData+1,f
  7090  0624  0DA1               	rlf	??_LCDSendData+1,f
  7091  0625  0022               	movlb	2	; select bank2
  7092  0626  080E               	movf	14,w	;volatile
  7093  0627  0020               	movlb	0	; select bank0
  7094  0628  0621               	xorwf	??_LCDSendData+1,w
  7095  0629  39F7               	andlw	-9
  7096  062A  0621               	xorwf	??_LCDSendData+1,w
  7097  062B  0022               	movlb	2	; select bank2
  7098  062C  008E               	movwf	14	;volatile
  7099                           
  7100                           ;main.c: 84: LATCbits.LATC4 = (value & 16) >> 4;
  7101  062D  0875               	movf	LCDSendData@value,w
  7102  062E  0020               	movlb	0	; select bank0
  7103  062F  00A0               	movwf	??_LCDSendData
  7104  0630  3004               	movlw	4
  7105  0631                     u1235:	
  7106  0631  36A0               	lsrf	??_LCDSendData,f
  7107  0632  0B89               	decfsz	9,f
  7108  0633  2E31               	goto	u1235
  7109  0634  0820               	movf	??_LCDSendData,w
  7110  0635  3901               	andlw	1
  7111  0636  00A1               	movwf	??_LCDSendData+1
  7112  0637  0EA1               	swapf	??_LCDSendData+1,f
  7113  0638  0022               	movlb	2	; select bank2
  7114  0639  080E               	movf	14,w	;volatile
  7115  063A  0020               	movlb	0	; select bank0
  7116  063B  0621               	xorwf	??_LCDSendData+1,w
  7117  063C  39EF               	andlw	-17
  7118  063D  0621               	xorwf	??_LCDSendData+1,w
  7119  063E  0022               	movlb	2	; select bank2
  7120  063F  008E               	movwf	14	;volatile
  7121                           
  7122                           ;main.c: 85: LATCbits.LATC5 = (value & 32) >> 5;
  7123  0640  0875               	movf	LCDSendData@value,w
  7124  0641  0020               	movlb	0	; select bank0
  7125  0642  00A0               	movwf	??_LCDSendData
  7126  0643  3005               	movlw	5
  7127  0644                     u1245:	
  7128  0644  36A0               	lsrf	??_LCDSendData,f
  7129  0645  0B89               	decfsz	9,f
  7130  0646  2E44               	goto	u1245
  7131  0647  0820               	movf	??_LCDSendData,w
  7132  0648  3901               	andlw	1
  7133  0649  00A1               	movwf	??_LCDSendData+1
  7134  064A  0EA1               	swapf	??_LCDSendData+1,f
  7135  064B  0DA1               	rlf	??_LCDSendData+1,f
  7136  064C  0022               	movlb	2	; select bank2
  7137  064D  080E               	movf	14,w	;volatile
  7138  064E  0020               	movlb	0	; select bank0
  7139  064F  0621               	xorwf	??_LCDSendData+1,w
  7140  0650  39DF               	andlw	-33
  7141  0651  0621               	xorwf	??_LCDSendData+1,w
  7142  0652  0022               	movlb	2	; select bank2
  7143  0653  008E               	movwf	14	;volatile
  7144                           
  7145                           ;main.c: 86: LATCbits.LATC6 = (value & 64) >> 6;
  7146  0654  0875               	movf	LCDSendData@value,w
  7147  0655  0020               	movlb	0	; select bank0
  7148  0656  00A0               	movwf	??_LCDSendData
  7149  0657  3006               	movlw	6
  7150  0658                     u1255:	
  7151  0658  36A0               	lsrf	??_LCDSendData,f
  7152  0659  0B89               	decfsz	9,f
  7153  065A  2E58               	goto	u1255
  7154  065B  0820               	movf	??_LCDSendData,w
  7155  065C  3901               	andlw	1
  7156  065D  00A1               	movwf	??_LCDSendData+1
  7157  065E  0EA1               	swapf	??_LCDSendData+1,f
  7158  065F  0DA1               	rlf	??_LCDSendData+1,f
  7159  0660  0DA1               	rlf	??_LCDSendData+1,f
  7160  0661  0022               	movlb	2	; select bank2
  7161  0662  080E               	movf	14,w	;volatile
  7162  0663  0020               	movlb	0	; select bank0
  7163  0664  0621               	xorwf	??_LCDSendData+1,w
  7164  0665  39BF               	andlw	-65
  7165  0666  0621               	xorwf	??_LCDSendData+1,w
  7166  0667  0022               	movlb	2	; select bank2
  7167  0668  008E               	movwf	14	;volatile
  7168                           
  7169                           ;main.c: 87: LATCbits.LATC7 = (value & 128) >> 7;
  7170  0669  0875               	movf	LCDSendData@value,w
  7171  066A  0020               	movlb	0	; select bank0
  7172  066B  00A0               	movwf	??_LCDSendData
  7173  066C  3007               	movlw	7
  7174  066D                     u1265:	
  7175  066D  36A0               	lsrf	??_LCDSendData,f
  7176  066E  0B89               	decfsz	9,f
  7177  066F  2E6D               	goto	u1265
  7178  0670  0820               	movf	??_LCDSendData,w
  7179  0671  3901               	andlw	1
  7180  0672  00A1               	movwf	??_LCDSendData+1
  7181  0673  0CA1               	rrf	??_LCDSendData+1,f
  7182  0674  0CA1               	rrf	??_LCDSendData+1,f
  7183  0675  0022               	movlb	2	; select bank2
  7184  0676  080E               	movf	14,w	;volatile
  7185  0677  0020               	movlb	0	; select bank0
  7186  0678  0621               	xorwf	??_LCDSendData+1,w
  7187  0679  397F               	andlw	-129
  7188  067A  0621               	xorwf	??_LCDSendData+1,w
  7189  067B  0022               	movlb	2	; select bank2
  7190  067C  008E               	movwf	14	;volatile
  7191                           
  7192                           ;main.c: 88: if(RS > 0)
  7193  067D  0874               	movf	LCDSendData@RS+1,w
  7194  067E  3A80               	xorlw	128
  7195  067F  0020               	movlb	0	; select bank0
  7196  0680  00A0               	movwf	??_LCDSendData
  7197  0681  3080               	movlw	128
  7198  0682  0220               	subwf	??_LCDSendData,w
  7199  0683  1D03               	skipz
  7200  0684  2E87               	goto	u1275
  7201  0685  3001               	movlw	1
  7202  0686  0273               	subwf	LCDSendData@RS,w
  7203  0687                     u1275:	
  7204  0687  1C03               	skipc
  7205  0688  2E8C               	goto	l366
  7206                           
  7207                           ;main.c: 89: {
  7208                           ;main.c: 90: LATBbits.LATB7 = 1;
  7209  0689  0022               	movlb	2	; select bank2
  7210  068A  178D               	bsf	13,7	;volatile
  7211                           
  7212                           ;main.c: 91: }
  7213  068B  2E8E               	goto	l368
  7214  068C                     l366:	
  7215                           
  7216                           ;main.c: 92: else
  7217                           ;main.c: 93: {
  7218                           ;main.c: 94: LATBbits.LATB7 = 0;
  7219  068C  0022               	movlb	2	; select bank2
  7220  068D  138D               	bcf	13,7	;volatile
  7221  068E                     l368:	
  7222                           ;main.c: 95: }
  7223                           ;main.c: 96: do { LATBbits.LATB6 = 1; } while(0);
  7224                           
  7225  068E  170D               	bsf	13,6	;volatile
  7226                           
  7227                           ;main.c: 97: _delay((unsigned long)((1)*(2000000/4000.0)));
  7228  068F  30A6               	movlw	166
  7229  0690                     u2437:	
  7230  0690  0B89               	decfsz	9,f
  7231  0691  2E90               	goto	u2437
  7232  0692  3200               	nop2
  7233                           
  7234                           ;main.c: 98: do { LATBbits.LATB6 = 0; } while(0);
  7235  0693  0022               	movlb	2	; select bank2
  7236  0694  130D               	bcf	13,6	;volatile
  7237                           
  7238                           ;main.c: 99: _delay((unsigned long)((10)*(2000000/4000.0)));
  7239  0695  3007               	movlw	7
  7240  0696  0020               	movlb	0	; select bank0
  7241  0697  00A0               	movwf	??_LCDSendData
  7242  0698  307D               	movlw	125
  7243  0699                     u2447:	
  7244  0699  0B89               	decfsz	9,f
  7245  069A  2E99               	goto	u2447
  7246  069B  0BA0               	decfsz	??_LCDSendData,f
  7247  069C  2E99               	goto	u2447
  7248  069D  0008               	return
  7249  069E                     __end_of_LCDSendData:	
  7250                           
  7251                           	psect	text16
  7252  005D                     __ptext16:	
  7253 ;; *************** function _HEFLASH_checkData *****************
  7254 ;; Defined at:
  7255 ;;		line 196 in file "main.c"
  7256 ;; Parameters:    Size  Location     Type
  7257 ;;		None
  7258 ;; Auto vars:     Size  Location     Type
  7259 ;;  r               2   30[BANK0 ] unsigned int 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      void 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7272 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;Total ram usage:       11 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    7
  7276 ;; This function calls:
  7277 ;;		_HEFLASH_readBlock
  7278 ;;		_HEFLASH_writeBlock
  7279 ;;		___lldiv
  7280 ;;		___llmod
  7281 ;;		___lwdiv
  7282 ;;		___lwmod
  7283 ;;		__fassert
  7284 ;;		_memset
  7285 ;; This function is called by:
  7286 ;;		_main
  7287 ;; This function uses a non-reentrant model
  7288 ;;
  7289                           
  7290                           
  7291                           ;psect for function _HEFLASH_checkData
  7292  005D                     _HEFLASH_checkData:	
  7293                           
  7294                           ;main.c: 198: unsigned r;
  7295                           ;main.c: 199: _delay((unsigned long)((200)*(2000000/4000.0)));
  7296                           
  7297                           ;incstack = 0
  7298                           ; Regs used in _HEFLASH_checkData: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7299  005D  3082               	movlw	130
  7300  005E  0020               	movlb	0	; select bank0
  7301  005F  00B5               	movwf	??_HEFLASH_checkData
  7302  0060  30DD               	movlw	221
  7303  0061                     u2457:	
  7304  0061  0B89               	decfsz	9,f
  7305  0062  2861               	goto	u2457
  7306  0063  0BB5               	decfsz	??_HEFLASH_checkData,f
  7307  0064  2861               	goto	u2457
  7308  0065  3200               	nop2
  7309                           
  7310                           ;main.c: 200: r = HEFLASH_readBlock(HEFBufferData, 0, 32);
  7311  0066  0020               	movlb	0	; select bank0
  7312  0067  01A0               	clrf	HEFLASH_readBlock@radd
  7313  0068  3020               	movlw	32
  7314  0069  00B5               	movwf	??_HEFLASH_checkData
  7315  006A  0835               	movf	??_HEFLASH_checkData,w
  7316  006B  00A1               	movwf	HEFLASH_readBlock@count
  7317  006C  30A0               	movlw	(low (_HEFBufferData| 0))& (0+255)
  7318  006D  318F  271D  3180   	fcall	_HEFLASH_readBlock
  7319  0070  0020               	movlb	0	; select bank0
  7320  0071  00B6               	movwf	??_HEFLASH_checkData+1
  7321  0072  01B7               	clrf	??_HEFLASH_checkData+2
  7322  0073  0836               	movf	??_HEFLASH_checkData+1,w
  7323  0074  00BE               	movwf	HEFLASH_checkData@r
  7324  0075  0837               	movf	??_HEFLASH_checkData+2,w
  7325  0076  00BF               	movwf	HEFLASH_checkData@r+1
  7326                           
  7327                           ;main.c: 201: if(!(0 == r)) {_fassert(201, "main.c", "0 == r");};
  7328  0077  083E               	movf	HEFLASH_checkData@r,w
  7329  0078  043F               	iorwf	HEFLASH_checkData@r+1,w
  7330  0079  1903               	btfsc	3,2
  7331  007A  288A               	goto	l2522
  7332  007B  30C9               	movlw	201
  7333  007C  00A0               	movwf	__fassert@line
  7334  007D  3000               	movlw	0
  7335  007E  00A1               	movwf	__fassert@line+1
  7336  007F  3000               	movlw	low (STR_1| (0+32768))
  7337  0080  00A2               	movwf	__fassert@file
  7338  0081  3090               	movlw	high (STR_1| (0+32768))
  7339  0082  00A3               	movwf	__fassert@file+1
  7340  0083  3007               	movlw	low (STR_2| (0+32768))
  7341  0084  00A4               	movwf	__fassert@expr
  7342  0085  3090               	movlw	high (STR_2| (0+32768))
  7343  0086  00A5               	movwf	__fassert@expr+1
  7344  0087  318C  24C9  3180   	fcall	__fassert
  7345  008A                     l2522:	
  7346                           
  7347                           ;main.c: 202: if(0xAA == HEFBufferData[0])
  7348  008A  30AA               	movlw	170
  7349  008B  0021               	movlb	1	; select bank1
  7350  008C  0620               	xorwf	_HEFBufferData^(0+128),w
  7351  008D  1D03               	btfss	3,2
  7352  008E  2AC7               	goto	l2556
  7353                           
  7354                           ;main.c: 203: {
  7355                           ;main.c: 204: gBoxCntStruct.SmallBoxCnt = (unsigned int)((HEFBufferData[3] << 8) + (HEFB
      +                          ufferData[4]));
  7356  008F  0824               	movf	(_HEFBufferData^(0+128)+4),w
  7357  0090  0020               	movlb	0	; select bank0
  7358  0091  00B5               	movwf	??_HEFLASH_checkData
  7359  0092  01B6               	clrf	??_HEFLASH_checkData+1
  7360  0093  0021               	movlb	1	; select bank1
  7361  0094  0823               	movf	(_HEFBufferData^(0+128)+3),w
  7362  0095  0020               	movlb	0	; select bank0
  7363  0096  00B7               	movwf	??_HEFLASH_checkData+2
  7364  0097  01B8               	clrf	??_HEFLASH_checkData+3
  7365  0098  0837               	movf	??_HEFLASH_checkData+2,w
  7366  0099  00B8               	movwf	??_HEFLASH_checkData+3
  7367  009A  01B7               	clrf	??_HEFLASH_checkData+2
  7368  009B  0835               	movf	??_HEFLASH_checkData,w
  7369  009C  0737               	addwf	??_HEFLASH_checkData+2,w
  7370  009D  00CA               	movwf	_gBoxCntStruct+9
  7371  009E  0836               	movf	??_HEFLASH_checkData+1,w
  7372  009F  3D38               	addwfc	??_HEFLASH_checkData+3,w
  7373  00A0  00CB               	movwf	_gBoxCntStruct+10
  7374                           
  7375                           ;main.c: 206: gBoxCntStruct.MiddleBoxCnt = (unsigned int)((HEFBufferData[7] << 8) + (HEF
      +                          BufferData[8]));
  7376  00A1  0021               	movlb	1	; select bank1
  7377  00A2  0828               	movf	(_HEFBufferData^(0+128)+8),w
  7378  00A3  0020               	movlb	0	; select bank0
  7379  00A4  00B5               	movwf	??_HEFLASH_checkData
  7380  00A5  01B6               	clrf	??_HEFLASH_checkData+1
  7381  00A6  0021               	movlb	1	; select bank1
  7382  00A7  0827               	movf	(_HEFBufferData^(0+128)+7),w
  7383  00A8  0020               	movlb	0	; select bank0
  7384  00A9  00B7               	movwf	??_HEFLASH_checkData+2
  7385  00AA  01B8               	clrf	??_HEFLASH_checkData+3
  7386  00AB  0837               	movf	??_HEFLASH_checkData+2,w
  7387  00AC  00B8               	movwf	??_HEFLASH_checkData+3
  7388  00AD  01B7               	clrf	??_HEFLASH_checkData+2
  7389  00AE  0835               	movf	??_HEFLASH_checkData,w
  7390  00AF  0737               	addwf	??_HEFLASH_checkData+2,w
  7391  00B0  00CC               	movwf	_gBoxCntStruct+11
  7392  00B1  0836               	movf	??_HEFLASH_checkData+1,w
  7393  00B2  3D38               	addwfc	??_HEFLASH_checkData+3,w
  7394  00B3  00CD               	movwf	_gBoxCntStruct+12
  7395                           
  7396                           ;main.c: 208: gBoxCntStruct.LargeBoxCnt = (unsigned int)((HEFBufferData[11] << 8) + (HEF
      +                          BufferData[12]));
  7397  00B4  0021               	movlb	1	; select bank1
  7398  00B5  082C               	movf	(_HEFBufferData^(0+128)+12),w
  7399  00B6  0020               	movlb	0	; select bank0
  7400  00B7  00B5               	movwf	??_HEFLASH_checkData
  7401  00B8  01B6               	clrf	??_HEFLASH_checkData+1
  7402  00B9  0021               	movlb	1	; select bank1
  7403  00BA  082B               	movf	(_HEFBufferData^(0+128)+11),w
  7404  00BB  0020               	movlb	0	; select bank0
  7405  00BC  00B7               	movwf	??_HEFLASH_checkData+2
  7406  00BD  01B8               	clrf	??_HEFLASH_checkData+3
  7407  00BE  0837               	movf	??_HEFLASH_checkData+2,w
  7408  00BF  00B8               	movwf	??_HEFLASH_checkData+3
  7409  00C0  01B7               	clrf	??_HEFLASH_checkData+2
  7410  00C1  0835               	movf	??_HEFLASH_checkData,w
  7411  00C2  0737               	addwf	??_HEFLASH_checkData+2,w
  7412  00C3  00CE               	movwf	_gBoxCntStruct+13
  7413  00C4  0836               	movf	??_HEFLASH_checkData+1,w
  7414  00C5  3D38               	addwfc	??_HEFLASH_checkData+3,w
  7415  00C6  00CF               	movwf	_gBoxCntStruct+14
  7416                           
  7417                           ;main.c: 210: gBoxCntStruct.BoxSum = (HEFBufferData[13] << 24) + (HEFBufferData[14] << 1
      +                          6) + (HEFBufferData[15] << 8) + (HEFBufferData[16]);
  7418  00C7  0021               	movlb	1	; select bank1
  7419  00C8  0830               	movf	(_HEFBufferData^(0+128)+16),w
  7420  00C9  0020               	movlb	0	; select bank0
  7421  00CA  00B5               	movwf	??_HEFLASH_checkData
  7422  00CB  01B6               	clrf	??_HEFLASH_checkData+1
  7423  00CC  0021               	movlb	1	; select bank1
  7424  00CD  082F               	movf	(_HEFBufferData^(0+128)+15),w
  7425  00CE  0020               	movlb	0	; select bank0
  7426  00CF  00B7               	movwf	??_HEFLASH_checkData+2
  7427  00D0  01B8               	clrf	??_HEFLASH_checkData+3
  7428  00D1  0837               	movf	??_HEFLASH_checkData+2,w
  7429  00D2  00B8               	movwf	??_HEFLASH_checkData+3
  7430  00D3  01B7               	clrf	??_HEFLASH_checkData+2
  7431  00D4  0021               	movlb	1	; select bank1
  7432  00D5  082D               	movf	(_HEFBufferData^(0+128)+13),w
  7433  00D6  072E               	addwf	(_HEFBufferData^(0+128)+14),w
  7434  00D7  0020               	movlb	0	; select bank0
  7435  00D8  00BA               	movwf	??_HEFLASH_checkData+5
  7436  00D9  01BB               	clrf	??_HEFLASH_checkData+6
  7437  00DA  0DBB               	rlf	??_HEFLASH_checkData+6,f
  7438  00DB  0837               	movf	??_HEFLASH_checkData+2,w
  7439  00DC  073A               	addwf	??_HEFLASH_checkData+5,w
  7440  00DD  00BC               	movwf	??_HEFLASH_checkData+7
  7441  00DE  0838               	movf	??_HEFLASH_checkData+3,w
  7442  00DF  3D3B               	addwfc	??_HEFLASH_checkData+6,w
  7443  00E0  00BD               	movwf	??_HEFLASH_checkData+8
  7444  00E1  0835               	movf	??_HEFLASH_checkData,w
  7445  00E2  073C               	addwf	??_HEFLASH_checkData+7,w
  7446  00E3  00D2               	movwf	_gBoxCntStruct+17
  7447  00E4  0836               	movf	??_HEFLASH_checkData+1,w
  7448  00E5  3D3D               	addwfc	??_HEFLASH_checkData+8,w
  7449  00E6  00D3               	movwf	_gBoxCntStruct+18
  7450  00E7  01D4               	clrf	_gBoxCntStruct+19
  7451  00E8  1BD3               	btfsc	_gBoxCntStruct+18,7
  7452  00E9  03D4               	decf	_gBoxCntStruct+19,f
  7453  00EA  0854               	movf	_gBoxCntStruct+19,w
  7454  00EB  00D5               	movwf	_gBoxCntStruct+20
  7455                           
  7456                           ;main.c: 213: gBoxCntStruct.JamCnt = (unsigned int)((HEFBufferData[19] << 8) + (HEFBuffe
      +                          rData[20]));
  7457  00EC  0021               	movlb	1	; select bank1
  7458  00ED  0834               	movf	(_HEFBufferData^(0+128)+20),w
  7459  00EE  0020               	movlb	0	; select bank0
  7460  00EF  00B5               	movwf	??_HEFLASH_checkData
  7461  00F0  01B6               	clrf	??_HEFLASH_checkData+1
  7462  00F1  0021               	movlb	1	; select bank1
  7463  00F2  0833               	movf	(_HEFBufferData^(0+128)+19),w
  7464  00F3  0020               	movlb	0	; select bank0
  7465  00F4  00B7               	movwf	??_HEFLASH_checkData+2
  7466  00F5  01B8               	clrf	??_HEFLASH_checkData+3
  7467  00F6  0837               	movf	??_HEFLASH_checkData+2,w
  7468  00F7  00B8               	movwf	??_HEFLASH_checkData+3
  7469  00F8  01B7               	clrf	??_HEFLASH_checkData+2
  7470  00F9  0835               	movf	??_HEFLASH_checkData,w
  7471  00FA  0737               	addwf	??_HEFLASH_checkData+2,w
  7472  00FB  00D0               	movwf	_gBoxCntStruct+15
  7473  00FC  0836               	movf	??_HEFLASH_checkData+1,w
  7474  00FD  3D38               	addwfc	??_HEFLASH_checkData+3,w
  7475  00FE  00D1               	movwf	_gBoxCntStruct+16
  7476                           
  7477                           ;main.c: 215: display_data_1[2] = (gBoxCntStruct.SmallBoxCnt%1000/100)+0x30;
  7478  00FF  3064               	movlw	100
  7479  0100  00A4               	movwf	___lwdiv@divisor
  7480  0101  3000               	movlw	0
  7481  0102  00A5               	movwf	___lwdiv@divisor+1
  7482  0103  084B               	movf	_gBoxCntStruct+10,w
  7483  0104  00A3               	movwf	___lwmod@dividend+1
  7484  0105  084A               	movf	_gBoxCntStruct+9,w
  7485  0106  00A2               	movwf	___lwmod@dividend
  7486  0107  30E8               	movlw	232
  7487  0108  00A0               	movwf	___lwmod@divisor
  7488  0109  3003               	movlw	3
  7489  010A  00A1               	movwf	___lwmod@divisor+1
  7490  010B  318E  26BB  3180   	fcall	___lwmod
  7491  010E  0020               	movlb	0	; select bank0
  7492  010F  0821               	movf	?___lwmod+1,w
  7493  0110  00A7               	movwf	___lwdiv@dividend+1
  7494  0111  0820               	movf	?___lwmod,w
  7495  0112  00A6               	movwf	___lwdiv@dividend
  7496  0113  318E  26E8  3180   	fcall	___lwdiv
  7497  0116  0020               	movlb	0	; select bank0
  7498  0117  0824               	movf	?___lwdiv,w
  7499  0118  3E30               	addlw	48
  7500  0119  00B5               	movwf	??_HEFLASH_checkData
  7501  011A  0835               	movf	??_HEFLASH_checkData,w
  7502  011B  0021               	movlb	1	; select bank1
  7503  011C  00C2               	movwf	(_display_data_1^(0+128)+2)
  7504                           
  7505                           ;main.c: 216: display_data_1[3] = (gBoxCntStruct.SmallBoxCnt%100/10)+0x30;
  7506  011D  300A               	movlw	10
  7507  011E  0020               	movlb	0	; select bank0
  7508  011F  00A4               	movwf	___lwdiv@divisor
  7509  0120  3000               	movlw	0
  7510  0121  00A5               	movwf	___lwdiv@divisor+1
  7511  0122  084B               	movf	_gBoxCntStruct+10,w
  7512  0123  00A3               	movwf	___lwmod@dividend+1
  7513  0124  084A               	movf	_gBoxCntStruct+9,w
  7514  0125  00A2               	movwf	___lwmod@dividend
  7515  0126  3064               	movlw	100
  7516  0127  00A0               	movwf	___lwmod@divisor
  7517  0128  3000               	movlw	0
  7518  0129  00A1               	movwf	___lwmod@divisor+1
  7519  012A  318E  26BB  3180   	fcall	___lwmod
  7520  012D  0020               	movlb	0	; select bank0
  7521  012E  0821               	movf	?___lwmod+1,w
  7522  012F  00A7               	movwf	___lwdiv@dividend+1
  7523  0130  0820               	movf	?___lwmod,w
  7524  0131  00A6               	movwf	___lwdiv@dividend
  7525  0132  318E  26E8  3180   	fcall	___lwdiv
  7526  0135  0020               	movlb	0	; select bank0
  7527  0136  0824               	movf	?___lwdiv,w
  7528  0137  3E30               	addlw	48
  7529  0138  00B5               	movwf	??_HEFLASH_checkData
  7530  0139  0835               	movf	??_HEFLASH_checkData,w
  7531  013A  0021               	movlb	1	; select bank1
  7532  013B  00C3               	movwf	(_display_data_1^(0+128)+3)
  7533                           
  7534                           ;main.c: 217: display_data_1[4] = (gBoxCntStruct.SmallBoxCnt%10)+0x30;
  7535  013C  300A               	movlw	10
  7536  013D  0020               	movlb	0	; select bank0
  7537  013E  00A0               	movwf	___lwmod@divisor
  7538  013F  3000               	movlw	0
  7539  0140  00A1               	movwf	___lwmod@divisor+1
  7540  0141  084B               	movf	_gBoxCntStruct+10,w
  7541  0142  00A3               	movwf	___lwmod@dividend+1
  7542  0143  084A               	movf	_gBoxCntStruct+9,w
  7543  0144  00A2               	movwf	___lwmod@dividend
  7544  0145  318E  26BB  3180   	fcall	___lwmod
  7545  0148  0020               	movlb	0	; select bank0
  7546  0149  0820               	movf	?___lwmod,w
  7547  014A  3E30               	addlw	48
  7548  014B  00B5               	movwf	??_HEFLASH_checkData
  7549  014C  0835               	movf	??_HEFLASH_checkData,w
  7550  014D  0021               	movlb	1	; select bank1
  7551  014E  00C4               	movwf	(_display_data_1^(0+128)+4)
  7552                           
  7553                           ;main.c: 220: display_data_1[7] = (gBoxCntStruct.MiddleBoxCnt%1000/100)+0x30;
  7554  014F  3064               	movlw	100
  7555  0150  0020               	movlb	0	; select bank0
  7556  0151  00A4               	movwf	___lwdiv@divisor
  7557  0152  3000               	movlw	0
  7558  0153  00A5               	movwf	___lwdiv@divisor+1
  7559  0154  084D               	movf	_gBoxCntStruct+12,w
  7560  0155  00A3               	movwf	___lwmod@dividend+1
  7561  0156  084C               	movf	_gBoxCntStruct+11,w
  7562  0157  00A2               	movwf	___lwmod@dividend
  7563  0158  30E8               	movlw	232
  7564  0159  00A0               	movwf	___lwmod@divisor
  7565  015A  3003               	movlw	3
  7566  015B  00A1               	movwf	___lwmod@divisor+1
  7567  015C  318E  26BB  3180   	fcall	___lwmod
  7568  015F  0020               	movlb	0	; select bank0
  7569  0160  0821               	movf	?___lwmod+1,w
  7570  0161  00A7               	movwf	___lwdiv@dividend+1
  7571  0162  0820               	movf	?___lwmod,w
  7572  0163  00A6               	movwf	___lwdiv@dividend
  7573  0164  318E  26E8  3180   	fcall	___lwdiv
  7574  0167  0020               	movlb	0	; select bank0
  7575  0168  0824               	movf	?___lwdiv,w
  7576  0169  3E30               	addlw	48
  7577  016A  00B5               	movwf	??_HEFLASH_checkData
  7578  016B  0835               	movf	??_HEFLASH_checkData,w
  7579  016C  0021               	movlb	1	; select bank1
  7580  016D  00C7               	movwf	(_display_data_1^(0+128)+7)
  7581                           
  7582                           ;main.c: 221: display_data_1[8] = (gBoxCntStruct.MiddleBoxCnt%100/10)+0x30;
  7583  016E  300A               	movlw	10
  7584  016F  0020               	movlb	0	; select bank0
  7585  0170  00A4               	movwf	___lwdiv@divisor
  7586  0171  3000               	movlw	0
  7587  0172  00A5               	movwf	___lwdiv@divisor+1
  7588  0173  084D               	movf	_gBoxCntStruct+12,w
  7589  0174  00A3               	movwf	___lwmod@dividend+1
  7590  0175  084C               	movf	_gBoxCntStruct+11,w
  7591  0176  00A2               	movwf	___lwmod@dividend
  7592  0177  3064               	movlw	100
  7593  0178  00A0               	movwf	___lwmod@divisor
  7594  0179  3000               	movlw	0
  7595  017A  00A1               	movwf	___lwmod@divisor+1
  7596  017B  318E  26BB  3180   	fcall	___lwmod
  7597  017E  0020               	movlb	0	; select bank0
  7598  017F  0821               	movf	?___lwmod+1,w
  7599  0180  00A7               	movwf	___lwdiv@dividend+1
  7600  0181  0820               	movf	?___lwmod,w
  7601  0182  00A6               	movwf	___lwdiv@dividend
  7602  0183  318E  26E8  3180   	fcall	___lwdiv
  7603  0186  0020               	movlb	0	; select bank0
  7604  0187  0824               	movf	?___lwdiv,w
  7605  0188  3E30               	addlw	48
  7606  0189  00B5               	movwf	??_HEFLASH_checkData
  7607  018A  0835               	movf	??_HEFLASH_checkData,w
  7608  018B  0021               	movlb	1	; select bank1
  7609  018C  00C8               	movwf	(_display_data_1^(0+128)+8)
  7610                           
  7611                           ;main.c: 222: display_data_1[9] = (gBoxCntStruct.MiddleBoxCnt%10)+0x30;
  7612  018D  300A               	movlw	10
  7613  018E  0020               	movlb	0	; select bank0
  7614  018F  00A0               	movwf	___lwmod@divisor
  7615  0190  3000               	movlw	0
  7616  0191  00A1               	movwf	___lwmod@divisor+1
  7617  0192  084D               	movf	_gBoxCntStruct+12,w
  7618  0193  00A3               	movwf	___lwmod@dividend+1
  7619  0194  084C               	movf	_gBoxCntStruct+11,w
  7620  0195  00A2               	movwf	___lwmod@dividend
  7621  0196  318E  26BB  3180   	fcall	___lwmod
  7622  0199  0020               	movlb	0	; select bank0
  7623  019A  0820               	movf	?___lwmod,w
  7624  019B  3E30               	addlw	48
  7625  019C  00B5               	movwf	??_HEFLASH_checkData
  7626  019D  0835               	movf	??_HEFLASH_checkData,w
  7627  019E  0021               	movlb	1	; select bank1
  7628  019F  00C9               	movwf	(_display_data_1^(0+128)+9)
  7629                           
  7630                           ;main.c: 224: display_data_1[12] = (gBoxCntStruct.LargeBoxCnt%1000/100)+0x30;
  7631  01A0  3064               	movlw	100
  7632  01A1  0020               	movlb	0	; select bank0
  7633  01A2  00A4               	movwf	___lwdiv@divisor
  7634  01A3  3000               	movlw	0
  7635  01A4  00A5               	movwf	___lwdiv@divisor+1
  7636  01A5  084F               	movf	_gBoxCntStruct+14,w
  7637  01A6  00A3               	movwf	___lwmod@dividend+1
  7638  01A7  084E               	movf	_gBoxCntStruct+13,w
  7639  01A8  00A2               	movwf	___lwmod@dividend
  7640  01A9  30E8               	movlw	232
  7641  01AA  00A0               	movwf	___lwmod@divisor
  7642  01AB  3003               	movlw	3
  7643  01AC  00A1               	movwf	___lwmod@divisor+1
  7644  01AD  318E  26BB  3180   	fcall	___lwmod
  7645  01B0  0020               	movlb	0	; select bank0
  7646  01B1  0821               	movf	?___lwmod+1,w
  7647  01B2  00A7               	movwf	___lwdiv@dividend+1
  7648  01B3  0820               	movf	?___lwmod,w
  7649  01B4  00A6               	movwf	___lwdiv@dividend
  7650  01B5  318E  26E8  3180   	fcall	___lwdiv
  7651  01B8  0020               	movlb	0	; select bank0
  7652  01B9  0824               	movf	?___lwdiv,w
  7653  01BA  3E30               	addlw	48
  7654  01BB  00B5               	movwf	??_HEFLASH_checkData
  7655  01BC  0835               	movf	??_HEFLASH_checkData,w
  7656  01BD  0021               	movlb	1	; select bank1
  7657  01BE  00CC               	movwf	(_display_data_1^(0+128)+12)
  7658                           
  7659                           ;main.c: 225: display_data_1[13] = (gBoxCntStruct.LargeBoxCnt%100/10)+0x30;
  7660  01BF  300A               	movlw	10
  7661  01C0  0020               	movlb	0	; select bank0
  7662  01C1  00A4               	movwf	___lwdiv@divisor
  7663  01C2  3000               	movlw	0
  7664  01C3  00A5               	movwf	___lwdiv@divisor+1
  7665  01C4  084F               	movf	_gBoxCntStruct+14,w
  7666  01C5  00A3               	movwf	___lwmod@dividend+1
  7667  01C6  084E               	movf	_gBoxCntStruct+13,w
  7668  01C7  00A2               	movwf	___lwmod@dividend
  7669  01C8  3064               	movlw	100
  7670  01C9  00A0               	movwf	___lwmod@divisor
  7671  01CA  3000               	movlw	0
  7672  01CB  00A1               	movwf	___lwmod@divisor+1
  7673  01CC  318E  26BB  3180   	fcall	___lwmod
  7674  01CF  0020               	movlb	0	; select bank0
  7675  01D0  0821               	movf	?___lwmod+1,w
  7676  01D1  00A7               	movwf	___lwdiv@dividend+1
  7677  01D2  0820               	movf	?___lwmod,w
  7678  01D3  00A6               	movwf	___lwdiv@dividend
  7679  01D4  318E  26E8  3180   	fcall	___lwdiv
  7680  01D7  0020               	movlb	0	; select bank0
  7681  01D8  0824               	movf	?___lwdiv,w
  7682  01D9  3E30               	addlw	48
  7683  01DA  00B5               	movwf	??_HEFLASH_checkData
  7684  01DB  0835               	movf	??_HEFLASH_checkData,w
  7685  01DC  0021               	movlb	1	; select bank1
  7686  01DD  00CD               	movwf	(_display_data_1^(0+128)+13)
  7687                           
  7688                           ;main.c: 226: display_data_1[14] = (gBoxCntStruct.LargeBoxCnt%10)+0x30;
  7689  01DE  300A               	movlw	10
  7690  01DF  0020               	movlb	0	; select bank0
  7691  01E0  00A0               	movwf	___lwmod@divisor
  7692  01E1  3000               	movlw	0
  7693  01E2  00A1               	movwf	___lwmod@divisor+1
  7694  01E3  084F               	movf	_gBoxCntStruct+14,w
  7695  01E4  00A3               	movwf	___lwmod@dividend+1
  7696  01E5  084E               	movf	_gBoxCntStruct+13,w
  7697  01E6  00A2               	movwf	___lwmod@dividend
  7698  01E7  318E  26BB  3180   	fcall	___lwmod
  7699  01EA  0020               	movlb	0	; select bank0
  7700  01EB  0820               	movf	?___lwmod,w
  7701  01EC  3E30               	addlw	48
  7702  01ED  00B5               	movwf	??_HEFLASH_checkData
  7703  01EE  0835               	movf	??_HEFLASH_checkData,w
  7704  01EF  0021               	movlb	1	; select bank1
  7705  01F0  00CE               	movwf	(_display_data_1^(0+128)+14)
  7706                           
  7707                           ;main.c: 228: display_data_2[2] = (gBoxCntStruct.BoxSum%1000/100)+0x30;
  7708  01F1  3000               	movlw	0
  7709  01F2  0020               	movlb	0	; select bank0
  7710  01F3  00AB               	movwf	___lldiv@divisor+3
  7711  01F4  3000               	movlw	0
  7712  01F5  00AA               	movwf	___lldiv@divisor+2
  7713  01F6  3000               	movlw	0
  7714  01F7  00A9               	movwf	___lldiv@divisor+1
  7715  01F8  3064               	movlw	100
  7716  01F9  00A8               	movwf	___lldiv@divisor
  7717  01FA  3011               	movlw	17
  7718  01FB  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  7719  01FC  0086               	movwf	6
  7720  01FD  0187               	clrf	7
  7721  01FE  3F40               	moviw [0]fsr1
  7722  01FF  00A4               	movwf	___llmod@dividend
  7723  0200  3F41               	moviw [1]fsr1
  7724  0201  00A5               	movwf	___llmod@dividend+1
  7725  0202  3F42               	moviw [2]fsr1
  7726  0203  00A6               	movwf	___llmod@dividend+2
  7727  0204  3F43               	moviw [3]fsr1
  7728  0205  00A7               	movwf	___llmod@dividend+3
  7729  0206  3000               	movlw	0
  7730  0207  00A3               	movwf	___llmod@divisor+3
  7731  0208  3000               	movlw	0
  7732  0209  00A2               	movwf	___llmod@divisor+2
  7733  020A  3003               	movlw	3
  7734  020B  00A1               	movwf	___llmod@divisor+1
  7735  020C  30E8               	movlw	232
  7736  020D  00A0               	movwf	___llmod@divisor
  7737  020E  3187  27B8  3180   	fcall	___llmod
  7738  0211  0020               	movlb	0	; select bank0
  7739  0212  0823               	movf	?___llmod+3,w
  7740  0213  00AF               	movwf	___lldiv@dividend+3
  7741  0214  0822               	movf	?___llmod+2,w
  7742  0215  00AE               	movwf	___lldiv@dividend+2
  7743  0216  0821               	movf	?___llmod+1,w
  7744  0217  00AD               	movwf	___lldiv@dividend+1
  7745  0218  0820               	movf	?___llmod,w
  7746  0219  00AC               	movwf	___lldiv@dividend
  7747  021A  318F  2755  3180   	fcall	___lldiv
  7748  021D  0020               	movlb	0	; select bank0
  7749  021E  0828               	movf	?___lldiv,w
  7750  021F  3E30               	addlw	48
  7751  0220  00B5               	movwf	??_HEFLASH_checkData
  7752  0221  0835               	movf	??_HEFLASH_checkData,w
  7753  0222  0021               	movlb	1	; select bank1
  7754  0223  00D2               	movwf	(_display_data_2^(0+128)+2)
  7755                           
  7756                           ;main.c: 229: display_data_2[3] = (gBoxCntStruct.BoxSum%100/10)+0x30;
  7757  0224  3000               	movlw	0
  7758  0225  0020               	movlb	0	; select bank0
  7759  0226  00AB               	movwf	___lldiv@divisor+3
  7760  0227  3000               	movlw	0
  7761  0228  00AA               	movwf	___lldiv@divisor+2
  7762  0229  3000               	movlw	0
  7763  022A  00A9               	movwf	___lldiv@divisor+1
  7764  022B  300A               	movlw	10
  7765  022C  00A8               	movwf	___lldiv@divisor
  7766  022D  3011               	movlw	17
  7767  022E  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  7768  022F  0086               	movwf	6
  7769  0230  0187               	clrf	7
  7770  0231  3F40               	moviw [0]fsr1
  7771  0232  00A4               	movwf	___llmod@dividend
  7772  0233  3F41               	moviw [1]fsr1
  7773  0234  00A5               	movwf	___llmod@dividend+1
  7774  0235  3F42               	moviw [2]fsr1
  7775  0236  00A6               	movwf	___llmod@dividend+2
  7776  0237  3F43               	moviw [3]fsr1
  7777  0238  00A7               	movwf	___llmod@dividend+3
  7778  0239  3000               	movlw	0
  7779  023A  00A3               	movwf	___llmod@divisor+3
  7780  023B  3000               	movlw	0
  7781  023C  00A2               	movwf	___llmod@divisor+2
  7782  023D  3000               	movlw	0
  7783  023E  00A1               	movwf	___llmod@divisor+1
  7784  023F  3064               	movlw	100
  7785  0240  00A0               	movwf	___llmod@divisor
  7786  0241  3187  27B8  3180   	fcall	___llmod
  7787  0244  0020               	movlb	0	; select bank0
  7788  0245  0823               	movf	?___llmod+3,w
  7789  0246  00AF               	movwf	___lldiv@dividend+3
  7790  0247  0822               	movf	?___llmod+2,w
  7791  0248  00AE               	movwf	___lldiv@dividend+2
  7792  0249  0821               	movf	?___llmod+1,w
  7793  024A  00AD               	movwf	___lldiv@dividend+1
  7794  024B  0820               	movf	?___llmod,w
  7795  024C  00AC               	movwf	___lldiv@dividend
  7796  024D  318F  2755  3180   	fcall	___lldiv
  7797  0250  0020               	movlb	0	; select bank0
  7798  0251  0828               	movf	?___lldiv,w
  7799  0252  3E30               	addlw	48
  7800  0253  00B5               	movwf	??_HEFLASH_checkData
  7801  0254  0835               	movf	??_HEFLASH_checkData,w
  7802  0255  0021               	movlb	1	; select bank1
  7803  0256  00D3               	movwf	(_display_data_2^(0+128)+3)
  7804                           
  7805                           ;main.c: 230: display_data_2[4] = (gBoxCntStruct.BoxSum%10)+0x30;
  7806  0257  3000               	movlw	0
  7807  0258  0020               	movlb	0	; select bank0
  7808  0259  00A3               	movwf	___llmod@divisor+3
  7809  025A  3000               	movlw	0
  7810  025B  00A2               	movwf	___llmod@divisor+2
  7811  025C  3000               	movlw	0
  7812  025D  00A1               	movwf	___llmod@divisor+1
  7813  025E  300A               	movlw	10
  7814  025F  00A0               	movwf	___llmod@divisor
  7815  0260  3011               	movlw	17
  7816  0261  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  7817  0262  0086               	movwf	6
  7818  0263  0187               	clrf	7
  7819  0264  3F40               	moviw [0]fsr1
  7820  0265  00A4               	movwf	___llmod@dividend
  7821  0266  3F41               	moviw [1]fsr1
  7822  0267  00A5               	movwf	___llmod@dividend+1
  7823  0268  3F42               	moviw [2]fsr1
  7824  0269  00A6               	movwf	___llmod@dividend+2
  7825  026A  3F43               	moviw [3]fsr1
  7826  026B  00A7               	movwf	___llmod@dividend+3
  7827  026C  3187  27B8  3180   	fcall	___llmod
  7828  026F  0020               	movlb	0	; select bank0
  7829  0270  0820               	movf	?___llmod,w
  7830  0271  3E30               	addlw	48
  7831  0272  00B5               	movwf	??_HEFLASH_checkData
  7832  0273  0835               	movf	??_HEFLASH_checkData,w
  7833  0274  0021               	movlb	1	; select bank1
  7834  0275  00D4               	movwf	(_display_data_2^(0+128)+4)
  7835                           
  7836                           ;main.c: 232: display_data_2[7] = (gBoxCntStruct.JamCnt%1000/100)+0x30;
  7837  0276  3064               	movlw	100
  7838  0277  0020               	movlb	0	; select bank0
  7839  0278  00A4               	movwf	___lwdiv@divisor
  7840  0279  3000               	movlw	0
  7841  027A  00A5               	movwf	___lwdiv@divisor+1
  7842  027B  0851               	movf	_gBoxCntStruct+16,w
  7843  027C  00A3               	movwf	___lwmod@dividend+1
  7844  027D  0850               	movf	_gBoxCntStruct+15,w
  7845  027E  00A2               	movwf	___lwmod@dividend
  7846  027F  30E8               	movlw	232
  7847  0280  00A0               	movwf	___lwmod@divisor
  7848  0281  3003               	movlw	3
  7849  0282  00A1               	movwf	___lwmod@divisor+1
  7850  0283  318E  26BB  3180   	fcall	___lwmod
  7851  0286  0020               	movlb	0	; select bank0
  7852  0287  0821               	movf	?___lwmod+1,w
  7853  0288  00A7               	movwf	___lwdiv@dividend+1
  7854  0289  0820               	movf	?___lwmod,w
  7855  028A  00A6               	movwf	___lwdiv@dividend
  7856  028B  318E  26E8  3180   	fcall	___lwdiv
  7857  028E  0020               	movlb	0	; select bank0
  7858  028F  0824               	movf	?___lwdiv,w
  7859  0290  3E30               	addlw	48
  7860  0291  00B5               	movwf	??_HEFLASH_checkData
  7861  0292  0835               	movf	??_HEFLASH_checkData,w
  7862  0293  0021               	movlb	1	; select bank1
  7863  0294  00D7               	movwf	(_display_data_2^(0+128)+7)
  7864                           
  7865                           ;main.c: 233: display_data_2[8] = (gBoxCntStruct.JamCnt%100/10)+0x30;
  7866  0295  300A               	movlw	10
  7867  0296  0020               	movlb	0	; select bank0
  7868  0297  00A4               	movwf	___lwdiv@divisor
  7869  0298  3000               	movlw	0
  7870  0299  00A5               	movwf	___lwdiv@divisor+1
  7871  029A  0851               	movf	_gBoxCntStruct+16,w
  7872  029B  00A3               	movwf	___lwmod@dividend+1
  7873  029C  0850               	movf	_gBoxCntStruct+15,w
  7874  029D  00A2               	movwf	___lwmod@dividend
  7875  029E  3064               	movlw	100
  7876  029F  00A0               	movwf	___lwmod@divisor
  7877  02A0  3000               	movlw	0
  7878  02A1  00A1               	movwf	___lwmod@divisor+1
  7879  02A2  318E  26BB  3180   	fcall	___lwmod
  7880  02A5  0020               	movlb	0	; select bank0
  7881  02A6  0821               	movf	?___lwmod+1,w
  7882  02A7  00A7               	movwf	___lwdiv@dividend+1
  7883  02A8  0820               	movf	?___lwmod,w
  7884  02A9  00A6               	movwf	___lwdiv@dividend
  7885  02AA  318E  26E8  3180   	fcall	___lwdiv
  7886  02AD  0020               	movlb	0	; select bank0
  7887  02AE  0824               	movf	?___lwdiv,w
  7888  02AF  3E30               	addlw	48
  7889  02B0  00B5               	movwf	??_HEFLASH_checkData
  7890  02B1  0835               	movf	??_HEFLASH_checkData,w
  7891  02B2  0021               	movlb	1	; select bank1
  7892  02B3  00D8               	movwf	(_display_data_2^(0+128)+8)
  7893                           
  7894                           ;main.c: 234: display_data_2[9] = (gBoxCntStruct.JamCnt%10)+0x30;
  7895  02B4  300A               	movlw	10
  7896  02B5  0020               	movlb	0	; select bank0
  7897  02B6  00A0               	movwf	___lwmod@divisor
  7898  02B7  3000               	movlw	0
  7899  02B8  00A1               	movwf	___lwmod@divisor+1
  7900  02B9  0851               	movf	_gBoxCntStruct+16,w
  7901  02BA  00A3               	movwf	___lwmod@dividend+1
  7902  02BB  0850               	movf	_gBoxCntStruct+15,w
  7903  02BC  00A2               	movwf	___lwmod@dividend
  7904  02BD  318E  26BB         	fcall	___lwmod
  7905  02BF  0020               	movlb	0	; select bank0
  7906  02C0  0820               	movf	?___lwmod,w
  7907  02C1  3E30               	addlw	48
  7908  02C2  00B5               	movwf	??_HEFLASH_checkData
  7909  02C3  0835               	movf	??_HEFLASH_checkData,w
  7910  02C4  0021               	movlb	1	; select bank1
  7911  02C5  00D9               	movwf	(_display_data_2^(0+128)+9)
  7912                           
  7913                           ;main.c: 235: }
  7914  02C6  0008               	return
  7915  02C7                     l2556:	
  7916                           
  7917                           ;main.c: 236: else
  7918                           ;main.c: 237: {
  7919                           ;main.c: 238: memset(&HEFBufferData, 0, sizeof(HEFBufferData));
  7920  02C7  3000               	movlw	0
  7921  02C8  0020               	movlb	0	; select bank0
  7922  02C9  00A0               	movwf	memset@c
  7923  02CA  00A1               	movwf	memset@c+1
  7924  02CB  3020               	movlw	32
  7925  02CC  00A2               	movwf	memset@n
  7926  02CD  3000               	movlw	0
  7927  02CE  00A3               	movwf	memset@n+1
  7928  02CF  30A0               	movlw	(low (_HEFBufferData| 0))& (0+255)
  7929  02D0  318D  25EF  3180   	fcall	_memset
  7930                           
  7931                           ;main.c: 239: HEFBufferData[0] = 0xAA;
  7932  02D3  30AA               	movlw	170
  7933  02D4  0020               	movlb	0	; select bank0
  7934  02D5  00B5               	movwf	??_HEFLASH_checkData
  7935  02D6  0835               	movf	??_HEFLASH_checkData,w
  7936  02D7  0021               	movlb	1	; select bank1
  7937  02D8  00A0               	movwf	_HEFBufferData^(0+128)
  7938                           
  7939                           ;main.c: 240: r == HEFLASH_writeBlock(0, (void*)&HEFBufferData,sizeof(HEFBufferData));
  7940  02D9  30A0               	movlw	(low (_HEFBufferData| 0))& (0+255)
  7941  02DA  0020               	movlb	0	; select bank0
  7942  02DB  00B5               	movwf	??_HEFLASH_checkData
  7943  02DC  0835               	movf	??_HEFLASH_checkData,w
  7944  02DD  00A5               	movwf	HEFLASH_writeBlock@data
  7945  02DE  3020               	movlw	32
  7946  02DF  00B6               	movwf	??_HEFLASH_checkData+1
  7947  02E0  0836               	movf	??_HEFLASH_checkData+1,w
  7948  02E1  00A6               	movwf	HEFLASH_writeBlock@count
  7949  02E2  3000               	movlw	0
  7950  02E3  318F  27A8  3180   	fcall	_HEFLASH_writeBlock
  7951                           
  7952                           ;main.c: 241: if(!(0 == r)) {_fassert(241, "main.c", "0 == r");};
  7953  02E6  0020               	movlb	0	; select bank0
  7954  02E7  083E               	movf	HEFLASH_checkData@r,w
  7955  02E8  043F               	iorwf	HEFLASH_checkData@r+1,w
  7956  02E9  1903               	btfsc	3,2
  7957  02EA  0008               	return
  7958  02EB  30F1               	movlw	241
  7959  02EC  00A0               	movwf	__fassert@line
  7960  02ED  3000               	movlw	0
  7961  02EE  00A1               	movwf	__fassert@line+1
  7962  02EF  3000               	movlw	low (STR_1| (0+32768))
  7963  02F0  00A2               	movwf	__fassert@file
  7964  02F1  3090               	movlw	high (STR_1| (0+32768))
  7965  02F2  00A3               	movwf	__fassert@file+1
  7966  02F3  3007               	movlw	low (STR_2| (0+32768))
  7967  02F4  00A4               	movwf	__fassert@expr
  7968  02F5  3090               	movlw	high (STR_2| (0+32768))
  7969  02F6  00A5               	movwf	__fassert@expr+1
  7970  02F7  318C  24C9         	fcall	__fassert
  7971  02F9  0008               	return
  7972  02FA                     __end_of_HEFLASH_checkData:	
  7973                           
  7974                           	psect	text17
  7975  0DEF                     __ptext17:	
  7976 ;; *************** function _memset *****************
  7977 ;; Defined at:
  7978 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  p1              1    wreg     PTR void 
  7981 ;;		 -> HEFBufferData(32), 
  7982 ;;  c               2    0[BANK0 ] int 
  7983 ;;  n               2    2[BANK0 ] unsigned int 
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  p1              1    4[COMMON] PTR void 
  7986 ;;		 -> HEFBufferData(32), 
  7987 ;;  p               1    5[COMMON] PTR unsigned char 
  7988 ;;		 -> HEFBufferData(32), 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      PTR void 
  7991 ;; Registers used:
  7992 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7998 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;Total ram usage:        7 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    4
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_HEFLASH_checkData
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           
  8013                           ;psect for function _memset
  8014  0DEF                     _memset:	
  8015                           
  8016                           ;incstack = 0
  8017                           ; Regs used in _memset: [wreg+fsr1l+fsr1h+status,2+status,0]
  8018                           ;memset@p1 stored from wreg
  8019  0DEF  00F4               	movwf	memset@p1
  8020  0DF0  0874               	movf	memset@p1,w
  8021  0DF1  00F3               	movwf	??_memset
  8022  0DF2  0873               	movf	??_memset,w
  8023  0DF3  00F5               	movwf	memset@p
  8024  0DF4                     l2394:	
  8025  0DF4  3001               	movlw	1
  8026  0DF5  0020               	movlb	0	; select bank0
  8027  0DF6  02A2               	subwf	memset@n,f
  8028  0DF7  3000               	movlw	0
  8029  0DF8  3BA3               	subwfb	memset@n+1,f
  8030  0DF9  0A22               	incf	memset@n,w
  8031  0DFA  1903               	btfsc	3,2
  8032  0DFB  0A23               	incf	memset@n+1,w
  8033  0DFC  1903               	btfsc	3,2
  8034  0DFD  0008               	return
  8035  0DFE  0020               	movlb	0	; select bank0
  8036  0DFF  0820               	movf	memset@c,w
  8037  0E00  00F3               	movwf	??_memset
  8038  0E01  0875               	movf	memset@p,w
  8039  0E02  0086               	movwf	6
  8040  0E03  0187               	clrf	7
  8041  0E04  0873               	movf	??_memset,w
  8042  0E05  0081               	movwf	1
  8043  0E06  3001               	movlw	1
  8044  0E07  00F3               	movwf	??_memset
  8045  0E08  0873               	movf	??_memset,w
  8046  0E09  07F5               	addwf	memset@p,f
  8047  0E0A  2DF4               	goto	l2394
  8048  0E0B                     __end_of_memset:	
  8049                           ;	Return value of _memset is never used
  8050                           
  8051                           
  8052                           	psect	text18
  8053  0CC9                     __ptext18:	
  8054 ;; *************** function __fassert *****************
  8055 ;; Defined at:
  8056 ;;		line 71 in file "main.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  line            2    0[BANK0 ] int 
  8059 ;;  file            2    2[BANK0 ] PTR const unsigned char 
  8060 ;;		 -> STR_3(7), STR_1(7), 
  8061 ;;  expr            2    4[BANK0 ] PTR const unsigned char 
  8062 ;;		 -> STR_4(7), STR_2(7), 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8074 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8077 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8078 ;;Total ram usage:        6 bytes
  8079 ;; Hardware stack levels used:    1
  8080 ;; Hardware stack levels required when called:    4
  8081 ;; This function calls:
  8082 ;;		Nothing
  8083 ;; This function is called by:
  8084 ;;		_HEFLASH_checkData
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           
  8089                           ;psect for function __fassert
  8090  0CC9                     __fassert:	
  8091                           
  8092                           ;main.c: 73: TRISC = 0xf0;
  8093                           
  8094                           ;incstack = 0
  8095                           ; Regs used in __fassert: [wreg]
  8096  0CC9  30F0               	movlw	240
  8097  0CCA  0021               	movlb	1	; select bank1
  8098  0CCB  008E               	movwf	14	;volatile
  8099                           
  8100                           ;main.c: 74: PORTC = PORTC;
  8101  0CCC  0020               	movlb	0	; select bank0
  8102  0CCD  080E               	movf	14,w	;volatile
  8103  0CCE  008E               	movwf	14	;volatile
  8104  0CCF  0008               	return
  8105  0CD0                     __end_of__fassert:	
  8106                           
  8107                           	psect	text19
  8108  0F1D                     __ptext19:	
  8109 ;; *************** function _HEFLASH_readBlock *****************
  8110 ;; Defined at:
  8111 ;;		line 49 in file "HEFlash.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  buffer          1    wreg     PTR unsigned char 
  8114 ;;		 -> HEFBufferData(32), 
  8115 ;;  radd            1    0[BANK0 ] unsigned char 
  8116 ;;  count           1    1[BANK0 ] unsigned char 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;  buffer          1    6[BANK0 ] PTR unsigned char 
  8119 ;;		 -> HEFBufferData(32), 
  8120 ;;  add             2    4[BANK0 ] unsigned int 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      unsigned char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:        7 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    5
  8137 ;; This function calls:
  8138 ;;		_FLASH_read
  8139 ;; This function is called by:
  8140 ;;		_HEFLASH_checkData
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function _HEFLASH_readBlock
  8146  0F1D                     _HEFLASH_readBlock:	
  8147                           
  8148                           ;incstack = 0
  8149                           ; Regs used in _HEFLASH_readBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8150                           ;HEFLASH_readBlock@buffer stored from wreg
  8151  0F1D  0020               	movlb	0	; select bank0
  8152  0F1E  00A6               	movwf	HEFLASH_readBlock@buffer
  8153                           
  8154                           ;HEFlash.c: 52: unsigned add = radd * 32 + 0x1F80;
  8155  0F1F  0820               	movf	HEFLASH_readBlock@radd,w
  8156  0F20  00A2               	movwf	??_HEFLASH_readBlock
  8157  0F21  01A3               	clrf	??_HEFLASH_readBlock+1
  8158  0F22  3005               	movlw	5
  8159  0F23                     u1995:	
  8160  0F23  35A2               	lslf	??_HEFLASH_readBlock,f
  8161  0F24  0DA3               	rlf	??_HEFLASH_readBlock+1,f
  8162  0F25  0B89               	decfsz	9,f
  8163  0F26  2F23               	goto	u1995
  8164  0F27  0822               	movf	??_HEFLASH_readBlock,w
  8165  0F28  3E80               	addlw	128
  8166  0F29  00A4               	movwf	HEFLASH_readBlock@add
  8167  0F2A  301F               	movlw	31
  8168  0F2B  3D23               	addwfc	??_HEFLASH_readBlock+1,w
  8169  0F2C  00A5               	movwf	HEFLASH_readBlock@add+1
  8170                           
  8171                           ;HEFlash.c: 55: if ( ( count > 32) || (radd >= (0x1FFF-0x1F80+1)/32))
  8172  0F2D  3021               	movlw	33
  8173  0F2E  0221               	subwf	HEFLASH_readBlock@count,w
  8174  0F2F  1803               	skipnc
  8175  0F30  2F35               	goto	l2370
  8176  0F31  3004               	movlw	4
  8177  0F32  0220               	subwf	HEFLASH_readBlock@radd,w
  8178  0F33  1C03               	skipc
  8179  0F34  2F50               	goto	l2382
  8180  0F35                     l2370:	
  8181                           
  8182                           ;HEFlash.c: 56: return -1;
  8183  0F35  30FF               	movlw	255
  8184  0F36  0008               	return
  8185  0F37                     l2374:	
  8186                           ;HEFlash.c: 59: while ( count > 0)
  8187                           
  8188                           
  8189                           ;HEFlash.c: 60: {
  8190                           ;HEFlash.c: 61: *buffer++ = (char) FLASH_read( add++);
  8191  0F37  0825               	movf	HEFLASH_readBlock@add+1,w
  8192  0F38  00F4               	movwf	FLASH_read@address+1
  8193  0F39  0824               	movf	HEFLASH_readBlock@add,w
  8194  0F3A  00F3               	movwf	FLASH_read@address
  8195  0F3B  318D  253A  318F   	fcall	_FLASH_read
  8196  0F3E  0873               	movf	?_FLASH_read,w
  8197  0F3F  0020               	movlb	0	; select bank0
  8198  0F40  00A2               	movwf	??_HEFLASH_readBlock
  8199  0F41  0826               	movf	HEFLASH_readBlock@buffer,w
  8200  0F42  0086               	movwf	6
  8201  0F43  0187               	clrf	7
  8202  0F44  0822               	movf	??_HEFLASH_readBlock,w
  8203  0F45  0081               	movwf	1
  8204  0F46  3001               	movlw	1
  8205  0F47  07A4               	addwf	HEFLASH_readBlock@add,f
  8206  0F48  3000               	movlw	0
  8207  0F49  3DA5               	addwfc	HEFLASH_readBlock@add+1,f
  8208  0F4A  3001               	movlw	1
  8209  0F4B  00A2               	movwf	??_HEFLASH_readBlock
  8210  0F4C  0822               	movf	??_HEFLASH_readBlock,w
  8211  0F4D  07A6               	addwf	HEFLASH_readBlock@buffer,f
  8212                           
  8213                           ;HEFlash.c: 62: count--;
  8214  0F4E  3001               	movlw	1
  8215  0F4F  02A1               	subwf	HEFLASH_readBlock@count,f
  8216  0F50                     l2382:	
  8217  0F50  0821               	movf	HEFLASH_readBlock@count,w
  8218  0F51  1D03               	btfss	3,2
  8219  0F52  2F37               	goto	l2374
  8220                           
  8221                           ;HEFlash.c: 63: }
  8222                           ;HEFlash.c: 66: return 0;
  8223  0F53  3000               	movlw	0
  8224  0F54  0008               	return
  8225  0F55                     __end_of_HEFLASH_readBlock:	
  8226                           
  8227                           	psect	text20
  8228  0D3A                     __ptext20:	
  8229 ;; *************** function _FLASH_read *****************
  8230 ;; Defined at:
  8231 ;;		line 31 in file "Flash.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  address         2    3[COMMON] unsigned int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  2    3[COMMON] unsigned int 
  8238 ;; Registers used:
  8239 ;;		wreg
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;Total ram usage:        2 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    4
  8252 ;; This function calls:
  8253 ;;		Nothing
  8254 ;; This function is called by:
  8255 ;;		_HEFLASH_readBlock
  8256 ;;		_FLASH_readBlock
  8257 ;;		_HEFLASH_readByte
  8258 ;; This function uses a non-reentrant model
  8259 ;;
  8260                           
  8261                           
  8262                           ;psect for function _FLASH_read
  8263  0D3A                     _FLASH_read:	
  8264                           
  8265                           ;Flash.c: 34: PMADR = address;
  8266                           
  8267                           ;incstack = 0
  8268                           ; Regs used in _FLASH_read: [wreg]
  8269  0D3A  0874               	movf	FLASH_read@address+1,w
  8270  0D3B  0023               	movlb	3	; select bank3
  8271  0D3C  0092               	movwf	18	;volatile
  8272  0D3D  0873               	movf	FLASH_read@address,w
  8273  0D3E  0091               	movwf	17	;volatile
  8274                           
  8275                           ;Flash.c: 35: PMCON1bits.CFGS = 0;
  8276  0D3F  1315               	bcf	21,6	;volatile
  8277                           
  8278                           ;Flash.c: 36: PMCON1bits.RD = 1;
  8279  0D40  1415               	bsf	21,0	;volatile
  8280                           
  8281                           ;Flash.c: 37: __nop();
  8282  0D41  0000               	nop
  8283                           
  8284                           ;Flash.c: 38: __nop();
  8285  0D42  0000               	nop
  8286                           
  8287                           ;Flash.c: 41: return PMDAT;
  8288  0D43  0023               	movlb	3	; select bank3
  8289  0D44  0814               	movf	20,w	;volatile
  8290  0D45  00F4               	movwf	?_FLASH_read+1
  8291  0D46  0813               	movf	19,w	;volatile
  8292  0D47  00F3               	movwf	?_FLASH_read
  8293  0D48  0008               	return
  8294  0D49                     __end_of_FLASH_read:	
  8295                           
  8296                           	psect	text21
  8297  02FA                     __ptext21:	
  8298 ;; *************** function _Data_Toseg *****************
  8299 ;; Defined at:
  8300 ;;		line 148 in file "main.c"
  8301 ;; Parameters:    Size  Location     Type
  8302 ;;		None
  8303 ;; Auto vars:     Size  Location     Type
  8304 ;;		None
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  1    wreg      void 
  8307 ;; Registers used:
  8308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;Total ram usage:        5 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    7
  8321 ;; This function calls:
  8322 ;;		_HEFLASH_writeBlock
  8323 ;;		___lldiv
  8324 ;;		___llmod
  8325 ;;		___lwdiv
  8326 ;;		___lwmod
  8327 ;; This function is called by:
  8328 ;;		_main
  8329 ;; This function uses a non-reentrant model
  8330 ;;
  8331                           
  8332                           
  8333                           ;psect for function _Data_Toseg
  8334  02FA                     _Data_Toseg:	
  8335                           
  8336                           ;main.c: 150: display_data_1[2] = (gBoxCntStruct.SmallBoxCnt%1000/100)+0x30;
  8337                           
  8338                           ;incstack = 0
  8339                           ; Regs used in _Data_Toseg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8340  02FA  3064               	movlw	100
  8341  02FB  0020               	movlb	0	; select bank0
  8342  02FC  00A4               	movwf	___lwdiv@divisor
  8343  02FD  3000               	movlw	0
  8344  02FE  00A5               	movwf	___lwdiv@divisor+1
  8345  02FF  084B               	movf	_gBoxCntStruct+10,w
  8346  0300  00A3               	movwf	___lwmod@dividend+1
  8347  0301  084A               	movf	_gBoxCntStruct+9,w
  8348  0302  00A2               	movwf	___lwmod@dividend
  8349  0303  30E8               	movlw	232
  8350  0304  00A0               	movwf	___lwmod@divisor
  8351  0305  3003               	movlw	3
  8352  0306  00A1               	movwf	___lwmod@divisor+1
  8353  0307  318E  26BB  3182   	fcall	___lwmod
  8354  030A  0020               	movlb	0	; select bank0
  8355  030B  0821               	movf	?___lwmod+1,w
  8356  030C  00A7               	movwf	___lwdiv@dividend+1
  8357  030D  0820               	movf	?___lwmod,w
  8358  030E  00A6               	movwf	___lwdiv@dividend
  8359  030F  318E  26E8  3182   	fcall	___lwdiv
  8360  0312  0020               	movlb	0	; select bank0
  8361  0313  0824               	movf	?___lwdiv,w
  8362  0314  3E30               	addlw	48
  8363  0315  00B5               	movwf	??_Data_Toseg
  8364  0316  0835               	movf	??_Data_Toseg,w
  8365  0317  0021               	movlb	1	; select bank1
  8366  0318  00C2               	movwf	(_display_data_1^(0+128)+2)
  8367                           
  8368                           ;main.c: 151: display_data_1[3] = (gBoxCntStruct.SmallBoxCnt%100/10)+0x30;
  8369  0319  300A               	movlw	10
  8370  031A  0020               	movlb	0	; select bank0
  8371  031B  00A4               	movwf	___lwdiv@divisor
  8372  031C  3000               	movlw	0
  8373  031D  00A5               	movwf	___lwdiv@divisor+1
  8374  031E  084B               	movf	_gBoxCntStruct+10,w
  8375  031F  00A3               	movwf	___lwmod@dividend+1
  8376  0320  084A               	movf	_gBoxCntStruct+9,w
  8377  0321  00A2               	movwf	___lwmod@dividend
  8378  0322  3064               	movlw	100
  8379  0323  00A0               	movwf	___lwmod@divisor
  8380  0324  3000               	movlw	0
  8381  0325  00A1               	movwf	___lwmod@divisor+1
  8382  0326  318E  26BB  3182   	fcall	___lwmod
  8383  0329  0020               	movlb	0	; select bank0
  8384  032A  0821               	movf	?___lwmod+1,w
  8385  032B  00A7               	movwf	___lwdiv@dividend+1
  8386  032C  0820               	movf	?___lwmod,w
  8387  032D  00A6               	movwf	___lwdiv@dividend
  8388  032E  318E  26E8  3182   	fcall	___lwdiv
  8389  0331  0020               	movlb	0	; select bank0
  8390  0332  0824               	movf	?___lwdiv,w
  8391  0333  3E30               	addlw	48
  8392  0334  00B5               	movwf	??_Data_Toseg
  8393  0335  0835               	movf	??_Data_Toseg,w
  8394  0336  0021               	movlb	1	; select bank1
  8395  0337  00C3               	movwf	(_display_data_1^(0+128)+3)
  8396                           
  8397                           ;main.c: 152: display_data_1[4] = (gBoxCntStruct.SmallBoxCnt%10)+0x30;
  8398  0338  300A               	movlw	10
  8399  0339  0020               	movlb	0	; select bank0
  8400  033A  00A0               	movwf	___lwmod@divisor
  8401  033B  3000               	movlw	0
  8402  033C  00A1               	movwf	___lwmod@divisor+1
  8403  033D  084B               	movf	_gBoxCntStruct+10,w
  8404  033E  00A3               	movwf	___lwmod@dividend+1
  8405  033F  084A               	movf	_gBoxCntStruct+9,w
  8406  0340  00A2               	movwf	___lwmod@dividend
  8407  0341  318E  26BB  3182   	fcall	___lwmod
  8408  0344  0020               	movlb	0	; select bank0
  8409  0345  0820               	movf	?___lwmod,w
  8410  0346  3E30               	addlw	48
  8411  0347  00B5               	movwf	??_Data_Toseg
  8412  0348  0835               	movf	??_Data_Toseg,w
  8413  0349  0021               	movlb	1	; select bank1
  8414  034A  00C4               	movwf	(_display_data_1^(0+128)+4)
  8415                           
  8416                           ;main.c: 155: display_data_1[7] = (gBoxCntStruct.MiddleBoxCnt%1000/100)+0x30;
  8417  034B  3064               	movlw	100
  8418  034C  0020               	movlb	0	; select bank0
  8419  034D  00A4               	movwf	___lwdiv@divisor
  8420  034E  3000               	movlw	0
  8421  034F  00A5               	movwf	___lwdiv@divisor+1
  8422  0350  084D               	movf	_gBoxCntStruct+12,w
  8423  0351  00A3               	movwf	___lwmod@dividend+1
  8424  0352  084C               	movf	_gBoxCntStruct+11,w
  8425  0353  00A2               	movwf	___lwmod@dividend
  8426  0354  30E8               	movlw	232
  8427  0355  00A0               	movwf	___lwmod@divisor
  8428  0356  3003               	movlw	3
  8429  0357  00A1               	movwf	___lwmod@divisor+1
  8430  0358  318E  26BB  3182   	fcall	___lwmod
  8431  035B  0020               	movlb	0	; select bank0
  8432  035C  0821               	movf	?___lwmod+1,w
  8433  035D  00A7               	movwf	___lwdiv@dividend+1
  8434  035E  0820               	movf	?___lwmod,w
  8435  035F  00A6               	movwf	___lwdiv@dividend
  8436  0360  318E  26E8  3182   	fcall	___lwdiv
  8437  0363  0020               	movlb	0	; select bank0
  8438  0364  0824               	movf	?___lwdiv,w
  8439  0365  3E30               	addlw	48
  8440  0366  00B5               	movwf	??_Data_Toseg
  8441  0367  0835               	movf	??_Data_Toseg,w
  8442  0368  0021               	movlb	1	; select bank1
  8443  0369  00C7               	movwf	(_display_data_1^(0+128)+7)
  8444                           
  8445                           ;main.c: 156: display_data_1[8] = (gBoxCntStruct.MiddleBoxCnt%100/10)+0x30;
  8446  036A  300A               	movlw	10
  8447  036B  0020               	movlb	0	; select bank0
  8448  036C  00A4               	movwf	___lwdiv@divisor
  8449  036D  3000               	movlw	0
  8450  036E  00A5               	movwf	___lwdiv@divisor+1
  8451  036F  084D               	movf	_gBoxCntStruct+12,w
  8452  0370  00A3               	movwf	___lwmod@dividend+1
  8453  0371  084C               	movf	_gBoxCntStruct+11,w
  8454  0372  00A2               	movwf	___lwmod@dividend
  8455  0373  3064               	movlw	100
  8456  0374  00A0               	movwf	___lwmod@divisor
  8457  0375  3000               	movlw	0
  8458  0376  00A1               	movwf	___lwmod@divisor+1
  8459  0377  318E  26BB  3182   	fcall	___lwmod
  8460  037A  0020               	movlb	0	; select bank0
  8461  037B  0821               	movf	?___lwmod+1,w
  8462  037C  00A7               	movwf	___lwdiv@dividend+1
  8463  037D  0820               	movf	?___lwmod,w
  8464  037E  00A6               	movwf	___lwdiv@dividend
  8465  037F  318E  26E8  3182   	fcall	___lwdiv
  8466  0382  0020               	movlb	0	; select bank0
  8467  0383  0824               	movf	?___lwdiv,w
  8468  0384  3E30               	addlw	48
  8469  0385  00B5               	movwf	??_Data_Toseg
  8470  0386  0835               	movf	??_Data_Toseg,w
  8471  0387  0021               	movlb	1	; select bank1
  8472  0388  00C8               	movwf	(_display_data_1^(0+128)+8)
  8473                           
  8474                           ;main.c: 157: display_data_1[9] = (gBoxCntStruct.MiddleBoxCnt%10)+0x30;
  8475  0389  300A               	movlw	10
  8476  038A  0020               	movlb	0	; select bank0
  8477  038B  00A0               	movwf	___lwmod@divisor
  8478  038C  3000               	movlw	0
  8479  038D  00A1               	movwf	___lwmod@divisor+1
  8480  038E  084D               	movf	_gBoxCntStruct+12,w
  8481  038F  00A3               	movwf	___lwmod@dividend+1
  8482  0390  084C               	movf	_gBoxCntStruct+11,w
  8483  0391  00A2               	movwf	___lwmod@dividend
  8484  0392  318E  26BB  3182   	fcall	___lwmod
  8485  0395  0020               	movlb	0	; select bank0
  8486  0396  0820               	movf	?___lwmod,w
  8487  0397  3E30               	addlw	48
  8488  0398  00B5               	movwf	??_Data_Toseg
  8489  0399  0835               	movf	??_Data_Toseg,w
  8490  039A  0021               	movlb	1	; select bank1
  8491  039B  00C9               	movwf	(_display_data_1^(0+128)+9)
  8492                           
  8493                           ;main.c: 159: display_data_1[12] = (gBoxCntStruct.LargeBoxCnt%1000/100)+0x30;
  8494  039C  3064               	movlw	100
  8495  039D  0020               	movlb	0	; select bank0
  8496  039E  00A4               	movwf	___lwdiv@divisor
  8497  039F  3000               	movlw	0
  8498  03A0  00A5               	movwf	___lwdiv@divisor+1
  8499  03A1  084F               	movf	_gBoxCntStruct+14,w
  8500  03A2  00A3               	movwf	___lwmod@dividend+1
  8501  03A3  084E               	movf	_gBoxCntStruct+13,w
  8502  03A4  00A2               	movwf	___lwmod@dividend
  8503  03A5  30E8               	movlw	232
  8504  03A6  00A0               	movwf	___lwmod@divisor
  8505  03A7  3003               	movlw	3
  8506  03A8  00A1               	movwf	___lwmod@divisor+1
  8507  03A9  318E  26BB  3182   	fcall	___lwmod
  8508  03AC  0020               	movlb	0	; select bank0
  8509  03AD  0821               	movf	?___lwmod+1,w
  8510  03AE  00A7               	movwf	___lwdiv@dividend+1
  8511  03AF  0820               	movf	?___lwmod,w
  8512  03B0  00A6               	movwf	___lwdiv@dividend
  8513  03B1  318E  26E8  3182   	fcall	___lwdiv
  8514  03B4  0020               	movlb	0	; select bank0
  8515  03B5  0824               	movf	?___lwdiv,w
  8516  03B6  3E30               	addlw	48
  8517  03B7  00B5               	movwf	??_Data_Toseg
  8518  03B8  0835               	movf	??_Data_Toseg,w
  8519  03B9  0021               	movlb	1	; select bank1
  8520  03BA  00CC               	movwf	(_display_data_1^(0+128)+12)
  8521                           
  8522                           ;main.c: 160: display_data_1[13] = (gBoxCntStruct.LargeBoxCnt%100/10)+0x30;
  8523  03BB  300A               	movlw	10
  8524  03BC  0020               	movlb	0	; select bank0
  8525  03BD  00A4               	movwf	___lwdiv@divisor
  8526  03BE  3000               	movlw	0
  8527  03BF  00A5               	movwf	___lwdiv@divisor+1
  8528  03C0  084F               	movf	_gBoxCntStruct+14,w
  8529  03C1  00A3               	movwf	___lwmod@dividend+1
  8530  03C2  084E               	movf	_gBoxCntStruct+13,w
  8531  03C3  00A2               	movwf	___lwmod@dividend
  8532  03C4  3064               	movlw	100
  8533  03C5  00A0               	movwf	___lwmod@divisor
  8534  03C6  3000               	movlw	0
  8535  03C7  00A1               	movwf	___lwmod@divisor+1
  8536  03C8  318E  26BB  3182   	fcall	___lwmod
  8537  03CB  0020               	movlb	0	; select bank0
  8538  03CC  0821               	movf	?___lwmod+1,w
  8539  03CD  00A7               	movwf	___lwdiv@dividend+1
  8540  03CE  0820               	movf	?___lwmod,w
  8541  03CF  00A6               	movwf	___lwdiv@dividend
  8542  03D0  318E  26E8  3182   	fcall	___lwdiv
  8543  03D3  0020               	movlb	0	; select bank0
  8544  03D4  0824               	movf	?___lwdiv,w
  8545  03D5  3E30               	addlw	48
  8546  03D6  00B5               	movwf	??_Data_Toseg
  8547  03D7  0835               	movf	??_Data_Toseg,w
  8548  03D8  0021               	movlb	1	; select bank1
  8549  03D9  00CD               	movwf	(_display_data_1^(0+128)+13)
  8550                           
  8551                           ;main.c: 161: display_data_1[14] = (gBoxCntStruct.LargeBoxCnt%10)+0x30;
  8552  03DA  300A               	movlw	10
  8553  03DB  0020               	movlb	0	; select bank0
  8554  03DC  00A0               	movwf	___lwmod@divisor
  8555  03DD  3000               	movlw	0
  8556  03DE  00A1               	movwf	___lwmod@divisor+1
  8557  03DF  084F               	movf	_gBoxCntStruct+14,w
  8558  03E0  00A3               	movwf	___lwmod@dividend+1
  8559  03E1  084E               	movf	_gBoxCntStruct+13,w
  8560  03E2  00A2               	movwf	___lwmod@dividend
  8561  03E3  318E  26BB  3182   	fcall	___lwmod
  8562  03E6  0020               	movlb	0	; select bank0
  8563  03E7  0820               	movf	?___lwmod,w
  8564  03E8  3E30               	addlw	48
  8565  03E9  00B5               	movwf	??_Data_Toseg
  8566  03EA  0835               	movf	??_Data_Toseg,w
  8567  03EB  0021               	movlb	1	; select bank1
  8568  03EC  00CE               	movwf	(_display_data_1^(0+128)+14)
  8569                           
  8570                           ;main.c: 163: display_data_2[2] = (gBoxCntStruct.BoxSum%1000/100)+0x30;
  8571  03ED  3000               	movlw	0
  8572  03EE  0020               	movlb	0	; select bank0
  8573  03EF  00AB               	movwf	___lldiv@divisor+3
  8574  03F0  3000               	movlw	0
  8575  03F1  00AA               	movwf	___lldiv@divisor+2
  8576  03F2  3000               	movlw	0
  8577  03F3  00A9               	movwf	___lldiv@divisor+1
  8578  03F4  3064               	movlw	100
  8579  03F5  00A8               	movwf	___lldiv@divisor
  8580  03F6  3011               	movlw	17
  8581  03F7  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  8582  03F8  0086               	movwf	6
  8583  03F9  0187               	clrf	7
  8584  03FA  3F40               	moviw [0]fsr1
  8585  03FB  00A4               	movwf	___llmod@dividend
  8586  03FC  3F41               	moviw [1]fsr1
  8587  03FD  00A5               	movwf	___llmod@dividend+1
  8588  03FE  3F42               	moviw [2]fsr1
  8589  03FF  00A6               	movwf	___llmod@dividend+2
  8590  0400  3F43               	moviw [3]fsr1
  8591  0401  00A7               	movwf	___llmod@dividend+3
  8592  0402  3000               	movlw	0
  8593  0403  00A3               	movwf	___llmod@divisor+3
  8594  0404  3000               	movlw	0
  8595  0405  00A2               	movwf	___llmod@divisor+2
  8596  0406  3003               	movlw	3
  8597  0407  00A1               	movwf	___llmod@divisor+1
  8598  0408  30E8               	movlw	232
  8599  0409  00A0               	movwf	___llmod@divisor
  8600  040A  3187  27B8  3182   	fcall	___llmod
  8601  040D  0020               	movlb	0	; select bank0
  8602  040E  0823               	movf	?___llmod+3,w
  8603  040F  00AF               	movwf	___lldiv@dividend+3
  8604  0410  0822               	movf	?___llmod+2,w
  8605  0411  00AE               	movwf	___lldiv@dividend+2
  8606  0412  0821               	movf	?___llmod+1,w
  8607  0413  00AD               	movwf	___lldiv@dividend+1
  8608  0414  0820               	movf	?___llmod,w
  8609  0415  00AC               	movwf	___lldiv@dividend
  8610  0416  318F  2755  3182   	fcall	___lldiv
  8611  0419  0020               	movlb	0	; select bank0
  8612  041A  0828               	movf	?___lldiv,w
  8613  041B  3E30               	addlw	48
  8614  041C  00B5               	movwf	??_Data_Toseg
  8615  041D  0835               	movf	??_Data_Toseg,w
  8616  041E  0021               	movlb	1	; select bank1
  8617  041F  00D2               	movwf	(_display_data_2^(0+128)+2)
  8618                           
  8619                           ;main.c: 164: display_data_2[3] = (gBoxCntStruct.BoxSum%100/10)+0x30;
  8620  0420  3000               	movlw	0
  8621  0421  0020               	movlb	0	; select bank0
  8622  0422  00AB               	movwf	___lldiv@divisor+3
  8623  0423  3000               	movlw	0
  8624  0424  00AA               	movwf	___lldiv@divisor+2
  8625  0425  3000               	movlw	0
  8626  0426  00A9               	movwf	___lldiv@divisor+1
  8627  0427  300A               	movlw	10
  8628  0428  00A8               	movwf	___lldiv@divisor
  8629  0429  3011               	movlw	17
  8630  042A  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  8631  042B  0086               	movwf	6
  8632  042C  0187               	clrf	7
  8633  042D  3F40               	moviw [0]fsr1
  8634  042E  00A4               	movwf	___llmod@dividend
  8635  042F  3F41               	moviw [1]fsr1
  8636  0430  00A5               	movwf	___llmod@dividend+1
  8637  0431  3F42               	moviw [2]fsr1
  8638  0432  00A6               	movwf	___llmod@dividend+2
  8639  0433  3F43               	moviw [3]fsr1
  8640  0434  00A7               	movwf	___llmod@dividend+3
  8641  0435  3000               	movlw	0
  8642  0436  00A3               	movwf	___llmod@divisor+3
  8643  0437  3000               	movlw	0
  8644  0438  00A2               	movwf	___llmod@divisor+2
  8645  0439  3000               	movlw	0
  8646  043A  00A1               	movwf	___llmod@divisor+1
  8647  043B  3064               	movlw	100
  8648  043C  00A0               	movwf	___llmod@divisor
  8649  043D  3187  27B8  3182   	fcall	___llmod
  8650  0440  0020               	movlb	0	; select bank0
  8651  0441  0823               	movf	?___llmod+3,w
  8652  0442  00AF               	movwf	___lldiv@dividend+3
  8653  0443  0822               	movf	?___llmod+2,w
  8654  0444  00AE               	movwf	___lldiv@dividend+2
  8655  0445  0821               	movf	?___llmod+1,w
  8656  0446  00AD               	movwf	___lldiv@dividend+1
  8657  0447  0820               	movf	?___llmod,w
  8658  0448  00AC               	movwf	___lldiv@dividend
  8659  0449  318F  2755  3182   	fcall	___lldiv
  8660  044C  0020               	movlb	0	; select bank0
  8661  044D  0828               	movf	?___lldiv,w
  8662  044E  3E30               	addlw	48
  8663  044F  00B5               	movwf	??_Data_Toseg
  8664  0450  0835               	movf	??_Data_Toseg,w
  8665  0451  0021               	movlb	1	; select bank1
  8666  0452  00D3               	movwf	(_display_data_2^(0+128)+3)
  8667                           
  8668                           ;main.c: 165: display_data_2[4] = (gBoxCntStruct.BoxSum%10)+0x30;
  8669  0453  3000               	movlw	0
  8670  0454  0020               	movlb	0	; select bank0
  8671  0455  00A3               	movwf	___llmod@divisor+3
  8672  0456  3000               	movlw	0
  8673  0457  00A2               	movwf	___llmod@divisor+2
  8674  0458  3000               	movlw	0
  8675  0459  00A1               	movwf	___llmod@divisor+1
  8676  045A  300A               	movlw	10
  8677  045B  00A0               	movwf	___llmod@divisor
  8678  045C  3011               	movlw	17
  8679  045D  3E41               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  8680  045E  0086               	movwf	6
  8681  045F  0187               	clrf	7
  8682  0460  3F40               	moviw [0]fsr1
  8683  0461  00A4               	movwf	___llmod@dividend
  8684  0462  3F41               	moviw [1]fsr1
  8685  0463  00A5               	movwf	___llmod@dividend+1
  8686  0464  3F42               	moviw [2]fsr1
  8687  0465  00A6               	movwf	___llmod@dividend+2
  8688  0466  3F43               	moviw [3]fsr1
  8689  0467  00A7               	movwf	___llmod@dividend+3
  8690  0468  3187  27B8  3182   	fcall	___llmod
  8691  046B  0020               	movlb	0	; select bank0
  8692  046C  0820               	movf	?___llmod,w
  8693  046D  3E30               	addlw	48
  8694  046E  00B5               	movwf	??_Data_Toseg
  8695  046F  0835               	movf	??_Data_Toseg,w
  8696  0470  0021               	movlb	1	; select bank1
  8697  0471  00D4               	movwf	(_display_data_2^(0+128)+4)
  8698                           
  8699                           ;main.c: 167: display_data_2[7] = (gBoxCntStruct.JamCnt%1000/100)+0x30;
  8700  0472  3064               	movlw	100
  8701  0473  0020               	movlb	0	; select bank0
  8702  0474  00A4               	movwf	___lwdiv@divisor
  8703  0475  3000               	movlw	0
  8704  0476  00A5               	movwf	___lwdiv@divisor+1
  8705  0477  0851               	movf	_gBoxCntStruct+16,w
  8706  0478  00A3               	movwf	___lwmod@dividend+1
  8707  0479  0850               	movf	_gBoxCntStruct+15,w
  8708  047A  00A2               	movwf	___lwmod@dividend
  8709  047B  30E8               	movlw	232
  8710  047C  00A0               	movwf	___lwmod@divisor
  8711  047D  3003               	movlw	3
  8712  047E  00A1               	movwf	___lwmod@divisor+1
  8713  047F  318E  26BB  3182   	fcall	___lwmod
  8714  0482  0020               	movlb	0	; select bank0
  8715  0483  0821               	movf	?___lwmod+1,w
  8716  0484  00A7               	movwf	___lwdiv@dividend+1
  8717  0485  0820               	movf	?___lwmod,w
  8718  0486  00A6               	movwf	___lwdiv@dividend
  8719  0487  318E  26E8  3182   	fcall	___lwdiv
  8720  048A  0020               	movlb	0	; select bank0
  8721  048B  0824               	movf	?___lwdiv,w
  8722  048C  3E30               	addlw	48
  8723  048D  00B5               	movwf	??_Data_Toseg
  8724  048E  0835               	movf	??_Data_Toseg,w
  8725  048F  0021               	movlb	1	; select bank1
  8726  0490  00D7               	movwf	(_display_data_2^(0+128)+7)
  8727                           
  8728                           ;main.c: 168: display_data_2[8] = (gBoxCntStruct.JamCnt%100/10)+0x30;
  8729  0491  300A               	movlw	10
  8730  0492  0020               	movlb	0	; select bank0
  8731  0493  00A4               	movwf	___lwdiv@divisor
  8732  0494  3000               	movlw	0
  8733  0495  00A5               	movwf	___lwdiv@divisor+1
  8734  0496  0851               	movf	_gBoxCntStruct+16,w
  8735  0497  00A3               	movwf	___lwmod@dividend+1
  8736  0498  0850               	movf	_gBoxCntStruct+15,w
  8737  0499  00A2               	movwf	___lwmod@dividend
  8738  049A  3064               	movlw	100
  8739  049B  00A0               	movwf	___lwmod@divisor
  8740  049C  3000               	movlw	0
  8741  049D  00A1               	movwf	___lwmod@divisor+1
  8742  049E  318E  26BB  3182   	fcall	___lwmod
  8743  04A1  0020               	movlb	0	; select bank0
  8744  04A2  0821               	movf	?___lwmod+1,w
  8745  04A3  00A7               	movwf	___lwdiv@dividend+1
  8746  04A4  0820               	movf	?___lwmod,w
  8747  04A5  00A6               	movwf	___lwdiv@dividend
  8748  04A6  318E  26E8  3182   	fcall	___lwdiv
  8749  04A9  0020               	movlb	0	; select bank0
  8750  04AA  0824               	movf	?___lwdiv,w
  8751  04AB  3E30               	addlw	48
  8752  04AC  00B5               	movwf	??_Data_Toseg
  8753  04AD  0835               	movf	??_Data_Toseg,w
  8754  04AE  0021               	movlb	1	; select bank1
  8755  04AF  00D8               	movwf	(_display_data_2^(0+128)+8)
  8756                           
  8757                           ;main.c: 169: display_data_2[9] = (gBoxCntStruct.JamCnt%10)+0x30;
  8758  04B0  300A               	movlw	10
  8759  04B1  0020               	movlb	0	; select bank0
  8760  04B2  00A0               	movwf	___lwmod@divisor
  8761  04B3  3000               	movlw	0
  8762  04B4  00A1               	movwf	___lwmod@divisor+1
  8763  04B5  0851               	movf	_gBoxCntStruct+16,w
  8764  04B6  00A3               	movwf	___lwmod@dividend+1
  8765  04B7  0850               	movf	_gBoxCntStruct+15,w
  8766  04B8  00A2               	movwf	___lwmod@dividend
  8767  04B9  318E  26BB  3182   	fcall	___lwmod
  8768  04BC  0020               	movlb	0	; select bank0
  8769  04BD  0820               	movf	?___lwmod,w
  8770  04BE  3E30               	addlw	48
  8771  04BF  00B5               	movwf	??_Data_Toseg
  8772  04C0  0835               	movf	??_Data_Toseg,w
  8773  04C1  0021               	movlb	1	; select bank1
  8774  04C2  00D9               	movwf	(_display_data_2^(0+128)+9)
  8775                           
  8776                           ;main.c: 172: HEFBufferData[3] = (unsigned char)(gBoxCntStruct.SmallBoxCnt >> 8);
  8777  04C3  0020               	movlb	0	; select bank0
  8778  04C4  084B               	movf	_gBoxCntStruct+10,w
  8779  04C5  00B5               	movwf	??_Data_Toseg
  8780  04C6  0835               	movf	??_Data_Toseg,w
  8781  04C7  0021               	movlb	1	; select bank1
  8782  04C8  00A3               	movwf	(_HEFBufferData^(0+128)+3)
  8783                           
  8784                           ;main.c: 173: HEFBufferData[4] = (unsigned char)(gBoxCntStruct.SmallBoxCnt);
  8785  04C9  0020               	movlb	0	; select bank0
  8786  04CA  084A               	movf	_gBoxCntStruct+9,w
  8787  04CB  00B5               	movwf	??_Data_Toseg
  8788  04CC  0835               	movf	??_Data_Toseg,w
  8789  04CD  0021               	movlb	1	; select bank1
  8790  04CE  00A4               	movwf	(_HEFBufferData^(0+128)+4)
  8791                           
  8792                           ;main.c: 176: HEFBufferData[7] = (unsigned char)(gBoxCntStruct.MiddleBoxCnt >> 8);
  8793  04CF  0020               	movlb	0	; select bank0
  8794  04D0  084D               	movf	_gBoxCntStruct+12,w
  8795  04D1  00B5               	movwf	??_Data_Toseg
  8796  04D2  0835               	movf	??_Data_Toseg,w
  8797  04D3  0021               	movlb	1	; select bank1
  8798  04D4  00A7               	movwf	(_HEFBufferData^(0+128)+7)
  8799                           
  8800                           ;main.c: 177: HEFBufferData[8] = (unsigned char)(gBoxCntStruct.MiddleBoxCnt);
  8801  04D5  0020               	movlb	0	; select bank0
  8802  04D6  084C               	movf	_gBoxCntStruct+11,w
  8803  04D7  00B5               	movwf	??_Data_Toseg
  8804  04D8  0835               	movf	??_Data_Toseg,w
  8805  04D9  0021               	movlb	1	; select bank1
  8806  04DA  00A8               	movwf	(_HEFBufferData^(0+128)+8)
  8807                           
  8808                           ;main.c: 180: HEFBufferData[11] = (unsigned char)(gBoxCntStruct.LargeBoxCnt >> 8);
  8809  04DB  0020               	movlb	0	; select bank0
  8810  04DC  084F               	movf	_gBoxCntStruct+14,w
  8811  04DD  00B5               	movwf	??_Data_Toseg
  8812  04DE  0835               	movf	??_Data_Toseg,w
  8813  04DF  0021               	movlb	1	; select bank1
  8814  04E0  00AB               	movwf	(_HEFBufferData^(0+128)+11)
  8815                           
  8816                           ;main.c: 181: HEFBufferData[12] = (unsigned char)(gBoxCntStruct.LargeBoxCnt );
  8817  04E1  0020               	movlb	0	; select bank0
  8818  04E2  084E               	movf	_gBoxCntStruct+13,w
  8819  04E3  00B5               	movwf	??_Data_Toseg
  8820  04E4  0835               	movf	??_Data_Toseg,w
  8821  04E5  0021               	movlb	1	; select bank1
  8822  04E6  00AC               	movwf	(_HEFBufferData^(0+128)+12)
  8823                           
  8824                           ;main.c: 184: HEFBufferData[15] = (unsigned char)(gBoxCntStruct.BoxSum >> 8);
  8825  04E7  0020               	movlb	0	; select bank0
  8826  04E8  0852               	movf	_gBoxCntStruct+17,w
  8827  04E9  00B5               	movwf	??_Data_Toseg
  8828  04EA  0853               	movf	_gBoxCntStruct+18,w
  8829  04EB  00B6               	movwf	??_Data_Toseg+1
  8830  04EC  0854               	movf	_gBoxCntStruct+19,w
  8831  04ED  00B7               	movwf	??_Data_Toseg+2
  8832  04EE  0855               	movf	_gBoxCntStruct+20,w
  8833  04EF  00B8               	movwf	??_Data_Toseg+3
  8834  04F0  3008               	movlw	8
  8835  04F1                     u2185:	
  8836  04F1  36B8               	lsrf	??_Data_Toseg+3,f
  8837  04F2  0CB7               	rrf	??_Data_Toseg+2,f
  8838  04F3  0CB6               	rrf	??_Data_Toseg+1,f
  8839  04F4  0CB5               	rrf	??_Data_Toseg,f
  8840  04F5  0B89               	decfsz	9,f
  8841  04F6  2CF1               	goto	u2185
  8842  04F7  0835               	movf	??_Data_Toseg,w
  8843  04F8  00B9               	movwf	??_Data_Toseg+4
  8844  04F9  0839               	movf	??_Data_Toseg+4,w
  8845  04FA  0021               	movlb	1	; select bank1
  8846  04FB  00AF               	movwf	(_HEFBufferData^(0+128)+15)
  8847                           
  8848                           ;main.c: 185: HEFBufferData[16] = (unsigned char)(gBoxCntStruct.BoxSum );
  8849  04FC  0020               	movlb	0	; select bank0
  8850  04FD  0852               	movf	_gBoxCntStruct+17,w
  8851  04FE  00B5               	movwf	??_Data_Toseg
  8852  04FF  0835               	movf	??_Data_Toseg,w
  8853  0500  0021               	movlb	1	; select bank1
  8854  0501  00B0               	movwf	(_HEFBufferData^(0+128)+16)
  8855                           
  8856                           ;main.c: 188: HEFBufferData[19] = (unsigned char)(gBoxCntStruct.JamCnt >> 8);
  8857  0502  0020               	movlb	0	; select bank0
  8858  0503  0851               	movf	_gBoxCntStruct+16,w
  8859  0504  00B5               	movwf	??_Data_Toseg
  8860  0505  0835               	movf	??_Data_Toseg,w
  8861  0506  0021               	movlb	1	; select bank1
  8862  0507  00B3               	movwf	(_HEFBufferData^(0+128)+19)
  8863                           
  8864                           ;main.c: 189: HEFBufferData[20] = (unsigned char)(gBoxCntStruct.JamCnt );
  8865  0508  0020               	movlb	0	; select bank0
  8866  0509  0850               	movf	_gBoxCntStruct+15,w
  8867  050A  00B5               	movwf	??_Data_Toseg
  8868  050B  0835               	movf	??_Data_Toseg,w
  8869  050C  0021               	movlb	1	; select bank1
  8870  050D  00B4               	movwf	(_HEFBufferData^(0+128)+20)
  8871                           
  8872                           ;main.c: 191: (INTCONbits.GIE = 0);
  8873  050E  138B               	bcf	11,7	;volatile
  8874                           
  8875                           ;main.c: 192: HEFLASH_writeBlock(0, (void*)&HEFBufferData,sizeof(HEFBufferData));
  8876  050F  30A0               	movlw	(low (_HEFBufferData| 0))& (0+255)
  8877  0510  0020               	movlb	0	; select bank0
  8878  0511  00B5               	movwf	??_Data_Toseg
  8879  0512  0835               	movf	??_Data_Toseg,w
  8880  0513  00A5               	movwf	HEFLASH_writeBlock@data
  8881  0514  3020               	movlw	32
  8882  0515  00B6               	movwf	??_Data_Toseg+1
  8883  0516  0836               	movf	??_Data_Toseg+1,w
  8884  0517  00A6               	movwf	HEFLASH_writeBlock@count
  8885  0518  3000               	movlw	0
  8886  0519  318F  27A8         	fcall	_HEFLASH_writeBlock
  8887                           
  8888                           ;main.c: 193: (INTCONbits.GIE = 1);
  8889  051B  178B               	bsf	11,7	;volatile
  8890  051C  0008               	return
  8891  051D                     __end_of_Data_Toseg:	
  8892                           
  8893                           	psect	text22
  8894  0EBB                     __ptext22:	
  8895 ;; *************** function ___lwmod *****************
  8896 ;; Defined at:
  8897 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  divisor         2    0[BANK0 ] unsigned int 
  8900 ;;  dividend        2    2[BANK0 ] unsigned int 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  counter         1    4[COMMON] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  2    0[BANK0 ] unsigned int 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8912 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;Total ram usage:        6 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:    4
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_Data_Toseg
  8923 ;;		_HEFLASH_checkData
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function ___lwmod
  8929  0EBB                     ___lwmod:	
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8933  0EBB  0020               	movlb	0	; select bank0
  8934  0EBC  0820               	movf	___lwmod@divisor,w
  8935  0EBD  0421               	iorwf	___lwmod@divisor+1,w
  8936  0EBE  1903               	btfsc	3,2
  8937  0EBF  2EE3               	goto	l2440
  8938  0EC0  01F4               	clrf	___lwmod@counter
  8939  0EC1  0AF4               	incf	___lwmod@counter,f
  8940  0EC2                     l2430:	
  8941  0EC2  1BA1               	btfsc	___lwmod@divisor+1,7
  8942  0EC3  2ECE               	goto	l2432
  8943  0EC4  3001               	movlw	1
  8944  0EC5                     u2125:	
  8945  0EC5  35A0               	lslf	___lwmod@divisor,f
  8946  0EC6  0DA1               	rlf	___lwmod@divisor+1,f
  8947  0EC7  0B89               	decfsz	9,f
  8948  0EC8  2EC5               	goto	u2125
  8949  0EC9  3001               	movlw	1
  8950  0ECA  00F3               	movwf	??___lwmod
  8951  0ECB  0873               	movf	??___lwmod,w
  8952  0ECC  07F4               	addwf	___lwmod@counter,f
  8953  0ECD  2EC2               	goto	l2430
  8954  0ECE                     l2432:	
  8955  0ECE  0821               	movf	___lwmod@divisor+1,w
  8956  0ECF  0223               	subwf	___lwmod@dividend+1,w
  8957  0ED0  1D03               	skipz
  8958  0ED1  2ED4               	goto	u2145
  8959  0ED2  0820               	movf	___lwmod@divisor,w
  8960  0ED3  0222               	subwf	___lwmod@dividend,w
  8961  0ED4                     u2145:	
  8962  0ED4  1C03               	skipc
  8963  0ED5  2EDA               	goto	l2436
  8964  0ED6  0820               	movf	___lwmod@divisor,w
  8965  0ED7  02A2               	subwf	___lwmod@dividend,f
  8966  0ED8  0821               	movf	___lwmod@divisor+1,w
  8967  0ED9  3BA3               	subwfb	___lwmod@dividend+1,f
  8968  0EDA                     l2436:	
  8969  0EDA  3001               	movlw	1
  8970  0EDB                     u2155:	
  8971  0EDB  36A1               	lsrf	___lwmod@divisor+1,f
  8972  0EDC  0CA0               	rrf	___lwmod@divisor,f
  8973  0EDD  0B89               	decfsz	9,f
  8974  0EDE  2EDB               	goto	u2155
  8975  0EDF  3001               	movlw	1
  8976  0EE0  02F4               	subwf	___lwmod@counter,f
  8977  0EE1  1D03               	btfss	3,2
  8978  0EE2  2ECE               	goto	l2432
  8979  0EE3                     l2440:	
  8980  0EE3  0823               	movf	___lwmod@dividend+1,w
  8981  0EE4  00A1               	movwf	?___lwmod+1
  8982  0EE5  0822               	movf	___lwmod@dividend,w
  8983  0EE6  00A0               	movwf	?___lwmod
  8984  0EE7  0008               	return
  8985  0EE8                     __end_of___lwmod:	
  8986                           
  8987                           	psect	text23
  8988  0EE8                     __ptext23:	
  8989 ;; *************** function ___lwdiv *****************
  8990 ;; Defined at:
  8991 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  divisor         2    4[BANK0 ] unsigned int 
  8994 ;;  dividend        2    6[BANK0 ] unsigned int 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  quotient        2    9[BANK0 ] unsigned int 
  8997 ;;  counter         1    8[BANK0 ] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  2    4[BANK0 ] unsigned int 
  9000 ;; Registers used:
  9001 ;;		wreg, status,2, status,0
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9010 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9011 ;;Total ram usage:        8 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    4
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_Data_Toseg
  9018 ;;		_HEFLASH_checkData
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           
  9023                           ;psect for function ___lwdiv
  9024  0EE8                     ___lwdiv:	
  9025                           
  9026                           ;incstack = 0
  9027                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9028  0EE8  0020               	movlb	0	; select bank0
  9029  0EE9  01A9               	clrf	___lwdiv@quotient
  9030  0EEA  01AA               	clrf	___lwdiv@quotient+1
  9031  0EEB  0824               	movf	___lwdiv@divisor,w
  9032  0EEC  0425               	iorwf	___lwdiv@divisor+1,w
  9033  0EED  1903               	btfsc	3,2
  9034  0EEE  2F18               	goto	l2418
  9035  0EEF  01A8               	clrf	___lwdiv@counter
  9036  0EF0  0AA8               	incf	___lwdiv@counter,f
  9037  0EF1                     l2406:	
  9038  0EF1  1BA5               	btfsc	___lwdiv@divisor+1,7
  9039  0EF2  2EFD               	goto	l2408
  9040  0EF3  3001               	movlw	1
  9041  0EF4                     u2055:	
  9042  0EF4  35A4               	lslf	___lwdiv@divisor,f
  9043  0EF5  0DA5               	rlf	___lwdiv@divisor+1,f
  9044  0EF6  0B89               	decfsz	9,f
  9045  0EF7  2EF4               	goto	u2055
  9046  0EF8  3001               	movlw	1
  9047  0EF9  00F5               	movwf	??___lwdiv
  9048  0EFA  0875               	movf	??___lwdiv,w
  9049  0EFB  07A8               	addwf	___lwdiv@counter,f
  9050  0EFC  2EF1               	goto	l2406
  9051  0EFD                     l2408:	
  9052  0EFD  3001               	movlw	1
  9053  0EFE                     u2075:	
  9054  0EFE  35A9               	lslf	___lwdiv@quotient,f
  9055  0EFF  0DAA               	rlf	___lwdiv@quotient+1,f
  9056  0F00  0B89               	decfsz	9,f
  9057  0F01  2EFE               	goto	u2075
  9058  0F02  0825               	movf	___lwdiv@divisor+1,w
  9059  0F03  0227               	subwf	___lwdiv@dividend+1,w
  9060  0F04  1D03               	skipz
  9061  0F05  2F08               	goto	u2085
  9062  0F06  0824               	movf	___lwdiv@divisor,w
  9063  0F07  0226               	subwf	___lwdiv@dividend,w
  9064  0F08                     u2085:	
  9065  0F08  1C03               	skipc
  9066  0F09  2F0F               	goto	l2414
  9067  0F0A  0824               	movf	___lwdiv@divisor,w
  9068  0F0B  02A6               	subwf	___lwdiv@dividend,f
  9069  0F0C  0825               	movf	___lwdiv@divisor+1,w
  9070  0F0D  3BA7               	subwfb	___lwdiv@dividend+1,f
  9071  0F0E  1429               	bsf	___lwdiv@quotient,0
  9072  0F0F                     l2414:	
  9073  0F0F  3001               	movlw	1
  9074  0F10                     u2095:	
  9075  0F10  36A5               	lsrf	___lwdiv@divisor+1,f
  9076  0F11  0CA4               	rrf	___lwdiv@divisor,f
  9077  0F12  0B89               	decfsz	9,f
  9078  0F13  2F10               	goto	u2095
  9079  0F14  3001               	movlw	1
  9080  0F15  02A8               	subwf	___lwdiv@counter,f
  9081  0F16  1D03               	btfss	3,2
  9082  0F17  2EFD               	goto	l2408
  9083  0F18                     l2418:	
  9084  0F18  082A               	movf	___lwdiv@quotient+1,w
  9085  0F19  00A5               	movwf	?___lwdiv+1
  9086  0F1A  0829               	movf	___lwdiv@quotient,w
  9087  0F1B  00A4               	movwf	?___lwdiv
  9088  0F1C  0008               	return
  9089  0F1D                     __end_of___lwdiv:	
  9090                           
  9091                           	psect	text24
  9092  07B8                     __ptext24:	
  9093 ;; *************** function ___llmod *****************
  9094 ;; Defined at:
  9095 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  divisor         4    0[BANK0 ] unsigned long 
  9098 ;;  dividend        4    4[BANK0 ] unsigned long 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  counter         1    4[COMMON] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  4    0[BANK0 ] unsigned long 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9110 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9113 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9114 ;;Total ram usage:       10 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    4
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_Data_Toseg
  9121 ;;		_HEFLASH_checkData
  9122 ;; This function uses a non-reentrant model
  9123 ;;
  9124                           
  9125                           
  9126                           ;psect for function ___llmod
  9127  07B8                     ___llmod:	
  9128                           
  9129                           ;incstack = 0
  9130                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  9131  07B8  0020               	movlb	0	; select bank0
  9132  07B9  0823               	movf	___llmod@divisor+3,w
  9133  07BA  0422               	iorwf	___llmod@divisor+2,w
  9134  07BB  0421               	iorwf	___llmod@divisor+1,w
  9135  07BC  0420               	iorwf	___llmod@divisor,w
  9136  07BD  1903               	skipnz
  9137  07BE  2FF2               	goto	l2040
  9138  07BF  01F4               	clrf	___llmod@counter
  9139  07C0  0AF4               	incf	___llmod@counter,f
  9140  07C1                     l2030:	
  9141  07C1  1BA3               	btfsc	___llmod@divisor+3,7
  9142  07C2  2FCF               	goto	l2032
  9143  07C3  3001               	movlw	1
  9144  07C4                     u1455:	
  9145  07C4  35A0               	lslf	___llmod@divisor,f
  9146  07C5  0DA1               	rlf	___llmod@divisor+1,f
  9147  07C6  0DA2               	rlf	___llmod@divisor+2,f
  9148  07C7  0DA3               	rlf	___llmod@divisor+3,f
  9149  07C8  0B89               	decfsz	9,f
  9150  07C9  2FC4               	goto	u1455
  9151  07CA  3001               	movlw	1
  9152  07CB  00F3               	movwf	??___llmod
  9153  07CC  0873               	movf	??___llmod,w
  9154  07CD  07F4               	addwf	___llmod@counter,f
  9155  07CE  2FC1               	goto	l2030
  9156  07CF                     l2032:	
  9157  07CF  0823               	movf	___llmod@divisor+3,w
  9158  07D0  0227               	subwf	___llmod@dividend+3,w
  9159  07D1  1D03               	skipz
  9160  07D2  2FDD               	goto	u1475
  9161  07D3  0822               	movf	___llmod@divisor+2,w
  9162  07D4  0226               	subwf	___llmod@dividend+2,w
  9163  07D5  1D03               	skipz
  9164  07D6  2FDD               	goto	u1475
  9165  07D7  0821               	movf	___llmod@divisor+1,w
  9166  07D8  0225               	subwf	___llmod@dividend+1,w
  9167  07D9  1D03               	skipz
  9168  07DA  2FDD               	goto	u1475
  9169  07DB  0820               	movf	___llmod@divisor,w
  9170  07DC  0224               	subwf	___llmod@dividend,w
  9171  07DD                     u1475:	
  9172  07DD  1C03               	skipc
  9173  07DE  2FE7               	goto	l2036
  9174  07DF  0820               	movf	___llmod@divisor,w
  9175  07E0  02A4               	subwf	___llmod@dividend,f
  9176  07E1  0821               	movf	___llmod@divisor+1,w
  9177  07E2  3BA5               	subwfb	___llmod@dividend+1,f
  9178  07E3  0822               	movf	___llmod@divisor+2,w
  9179  07E4  3BA6               	subwfb	___llmod@dividend+2,f
  9180  07E5  0823               	movf	___llmod@divisor+3,w
  9181  07E6  3BA7               	subwfb	___llmod@dividend+3,f
  9182  07E7                     l2036:	
  9183  07E7  3001               	movlw	1
  9184  07E8                     u1485:	
  9185  07E8  36A3               	lsrf	___llmod@divisor+3,f
  9186  07E9  0CA2               	rrf	___llmod@divisor+2,f
  9187  07EA  0CA1               	rrf	___llmod@divisor+1,f
  9188  07EB  0CA0               	rrf	___llmod@divisor,f
  9189  07EC  0B89               	decfsz	9,f
  9190  07ED  2FE8               	goto	u1485
  9191  07EE  3001               	movlw	1
  9192  07EF  02F4               	subwf	___llmod@counter,f
  9193  07F0  1D03               	btfss	3,2
  9194  07F1  2FCF               	goto	l2032
  9195  07F2                     l2040:	
  9196  07F2  0827               	movf	___llmod@dividend+3,w
  9197  07F3  00A3               	movwf	?___llmod+3
  9198  07F4  0826               	movf	___llmod@dividend+2,w
  9199  07F5  00A2               	movwf	?___llmod+2
  9200  07F6  0825               	movf	___llmod@dividend+1,w
  9201  07F7  00A1               	movwf	?___llmod+1
  9202  07F8  0824               	movf	___llmod@dividend,w
  9203  07F9  00A0               	movwf	?___llmod
  9204  07FA  0008               	return
  9205  07FB                     __end_of___llmod:	
  9206                           
  9207                           	psect	text25
  9208  0F55                     __ptext25:	
  9209 ;; *************** function ___lldiv *****************
  9210 ;; Defined at:
  9211 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  9212 ;; Parameters:    Size  Location     Type
  9213 ;;  divisor         4    8[BANK0 ] unsigned long 
  9214 ;;  dividend        4   12[BANK0 ] unsigned long 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  quotient        4   16[BANK0 ] unsigned long 
  9217 ;;  counter         1   20[BANK0 ] unsigned char 
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  4    8[BANK0 ] unsigned long 
  9220 ;; Registers used:
  9221 ;;		wreg, status,2, status,0
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9228 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9230 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9231 ;;Total ram usage:       14 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:    4
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_Data_Toseg
  9238 ;;		_HEFLASH_checkData
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function ___lldiv
  9244  0F55                     ___lldiv:	
  9245                           
  9246                           ;incstack = 0
  9247                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9248  0F55  3000               	movlw	0
  9249  0F56  0020               	movlb	0	; select bank0
  9250  0F57  00B3               	movwf	___lldiv@quotient+3
  9251  0F58  3000               	movlw	0
  9252  0F59  00B2               	movwf	___lldiv@quotient+2
  9253  0F5A  3000               	movlw	0
  9254  0F5B  00B1               	movwf	___lldiv@quotient+1
  9255  0F5C  3000               	movlw	0
  9256  0F5D  00B0               	movwf	___lldiv@quotient
  9257  0F5E  082B               	movf	___lldiv@divisor+3,w
  9258  0F5F  042A               	iorwf	___lldiv@divisor+2,w
  9259  0F60  0429               	iorwf	___lldiv@divisor+1,w
  9260  0F61  0428               	iorwf	___lldiv@divisor,w
  9261  0F62  1903               	skipnz
  9262  0F63  2F9F               	goto	l2020
  9263  0F64  01B4               	clrf	___lldiv@counter
  9264  0F65  0AB4               	incf	___lldiv@counter,f
  9265  0F66                     l2006:	
  9266  0F66  1BAB               	btfsc	___lldiv@divisor+3,7
  9267  0F67  2F74               	goto	l2008
  9268  0F68  3001               	movlw	1
  9269  0F69                     u1385:	
  9270  0F69  35A8               	lslf	___lldiv@divisor,f
  9271  0F6A  0DA9               	rlf	___lldiv@divisor+1,f
  9272  0F6B  0DAA               	rlf	___lldiv@divisor+2,f
  9273  0F6C  0DAB               	rlf	___lldiv@divisor+3,f
  9274  0F6D  0B89               	decfsz	9,f
  9275  0F6E  2F69               	goto	u1385
  9276  0F6F  3001               	movlw	1
  9277  0F70  00F5               	movwf	??___lldiv
  9278  0F71  0875               	movf	??___lldiv,w
  9279  0F72  07B4               	addwf	___lldiv@counter,f
  9280  0F73  2F66               	goto	l2006
  9281  0F74                     l2008:	
  9282  0F74  3001               	movlw	1
  9283  0F75                     u1405:	
  9284  0F75  35B0               	lslf	___lldiv@quotient,f
  9285  0F76  0DB1               	rlf	___lldiv@quotient+1,f
  9286  0F77  0DB2               	rlf	___lldiv@quotient+2,f
  9287  0F78  0DB3               	rlf	___lldiv@quotient+3,f
  9288  0F79  0B89               	decfsz	9,f
  9289  0F7A  2F75               	goto	u1405
  9290  0F7B  082B               	movf	___lldiv@divisor+3,w
  9291  0F7C  022F               	subwf	___lldiv@dividend+3,w
  9292  0F7D  1D03               	skipz
  9293  0F7E  2F89               	goto	u1415
  9294  0F7F  082A               	movf	___lldiv@divisor+2,w
  9295  0F80  022E               	subwf	___lldiv@dividend+2,w
  9296  0F81  1D03               	skipz
  9297  0F82  2F89               	goto	u1415
  9298  0F83  0829               	movf	___lldiv@divisor+1,w
  9299  0F84  022D               	subwf	___lldiv@dividend+1,w
  9300  0F85  1D03               	skipz
  9301  0F86  2F89               	goto	u1415
  9302  0F87  0828               	movf	___lldiv@divisor,w
  9303  0F88  022C               	subwf	___lldiv@dividend,w
  9304  0F89                     u1415:	
  9305  0F89  1C03               	skipc
  9306  0F8A  2F94               	goto	l2016
  9307  0F8B  0828               	movf	___lldiv@divisor,w
  9308  0F8C  02AC               	subwf	___lldiv@dividend,f
  9309  0F8D  0829               	movf	___lldiv@divisor+1,w
  9310  0F8E  3BAD               	subwfb	___lldiv@dividend+1,f
  9311  0F8F  082A               	movf	___lldiv@divisor+2,w
  9312  0F90  3BAE               	subwfb	___lldiv@dividend+2,f
  9313  0F91  082B               	movf	___lldiv@divisor+3,w
  9314  0F92  3BAF               	subwfb	___lldiv@dividend+3,f
  9315  0F93  1430               	bsf	___lldiv@quotient,0
  9316  0F94                     l2016:	
  9317  0F94  3001               	movlw	1
  9318  0F95                     u1425:	
  9319  0F95  36AB               	lsrf	___lldiv@divisor+3,f
  9320  0F96  0CAA               	rrf	___lldiv@divisor+2,f
  9321  0F97  0CA9               	rrf	___lldiv@divisor+1,f
  9322  0F98  0CA8               	rrf	___lldiv@divisor,f
  9323  0F99  0B89               	decfsz	9,f
  9324  0F9A  2F95               	goto	u1425
  9325  0F9B  3001               	movlw	1
  9326  0F9C  02B4               	subwf	___lldiv@counter,f
  9327  0F9D  1D03               	btfss	3,2
  9328  0F9E  2F74               	goto	l2008
  9329  0F9F                     l2020:	
  9330  0F9F  0833               	movf	___lldiv@quotient+3,w
  9331  0FA0  00AB               	movwf	?___lldiv+3
  9332  0FA1  0832               	movf	___lldiv@quotient+2,w
  9333  0FA2  00AA               	movwf	?___lldiv+2
  9334  0FA3  0831               	movf	___lldiv@quotient+1,w
  9335  0FA4  00A9               	movwf	?___lldiv+1
  9336  0FA5  0830               	movf	___lldiv@quotient,w
  9337  0FA6  00A8               	movwf	?___lldiv
  9338  0FA7  0008               	return
  9339  0FA8                     __end_of___lldiv:	
  9340                           
  9341                           	psect	text26
  9342  0FA8                     __ptext26:	
  9343 ;; *************** function _HEFLASH_writeBlock *****************
  9344 ;; Defined at:
  9345 ;;		line 17 in file "HEFlash.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  radd            1    wreg     unsigned char 
  9348 ;;  data            1    5[BANK0 ] PTR unsigned char 
  9349 ;;		 -> HEFBufferData(32), 
  9350 ;;  count           1    6[BANK0 ] unsigned char 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  radd            1    9[BANK0 ] unsigned char 
  9353 ;;  add             2   10[BANK0 ] unsigned int 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      unsigned char 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;Total ram usage:        7 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    6
  9370 ;; This function calls:
  9371 ;;		_FLASH_erase
  9372 ;;		_FLASH_write
  9373 ;; This function is called by:
  9374 ;;		_Data_Toseg
  9375 ;;		_HEFLASH_checkData
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           
  9380                           ;psect for function _HEFLASH_writeBlock
  9381  0FA8                     _HEFLASH_writeBlock:	
  9382                           
  9383                           ;incstack = 0
  9384                           ; Regs used in _HEFLASH_writeBlock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9385                           ;HEFLASH_writeBlock@radd stored from wreg
  9386  0FA8  0020               	movlb	0	; select bank0
  9387  0FA9  00A9               	movwf	HEFLASH_writeBlock@radd
  9388                           
  9389                           ;HEFlash.c: 20: unsigned add = radd * 32 + 0x1F80;
  9390  0FAA  0829               	movf	HEFLASH_writeBlock@radd,w
  9391  0FAB  00A7               	movwf	??_HEFLASH_writeBlock
  9392  0FAC  01A8               	clrf	??_HEFLASH_writeBlock+1
  9393  0FAD  3005               	movlw	5
  9394  0FAE                     u1285:	
  9395  0FAE  35A7               	lslf	??_HEFLASH_writeBlock,f
  9396  0FAF  0DA8               	rlf	??_HEFLASH_writeBlock+1,f
  9397  0FB0  0B89               	decfsz	9,f
  9398  0FB1  2FAE               	goto	u1285
  9399  0FB2  0827               	movf	??_HEFLASH_writeBlock,w
  9400  0FB3  3E80               	addlw	128
  9401  0FB4  00AA               	movwf	HEFLASH_writeBlock@add
  9402  0FB5  301F               	movlw	31
  9403  0FB6  3D28               	addwfc	??_HEFLASH_writeBlock+1,w
  9404  0FB7  00AB               	movwf	HEFLASH_writeBlock@add+1
  9405                           
  9406                           ;HEFlash.c: 23: if ( ( count > 32) || (radd >= (0x1FFF-0x1F80+1)/32))
  9407  0FB8  3021               	movlw	33
  9408  0FB9  0226               	subwf	HEFLASH_writeBlock@count,w
  9409  0FBA  1803               	skipnc
  9410  0FBB  0008               	return
  9411  0FBC  3004               	movlw	4
  9412  0FBD  0229               	subwf	HEFLASH_writeBlock@radd,w
  9413  0FBE  1803               	btfsc	3,0
  9414  0FBF  0008               	return
  9415                           
  9416                           ;HEFlash.c: 27: FLASH_erase( add);
  9417                           
  9418                           ;HEFlash.c: 24: return -1;
  9419                           ;	Return value of _HEFLASH_writeBlock is never used
  9420  0FC0  082B               	movf	HEFLASH_writeBlock@add+1,w
  9421  0FC1  00F4               	movwf	FLASH_erase@address+1
  9422  0FC2  082A               	movf	HEFLASH_writeBlock@add,w
  9423  0FC3  00F3               	movwf	FLASH_erase@address
  9424  0FC4  318D  2570  318F   	fcall	_FLASH_erase
  9425  0FC7                     l1960:	
  9426                           ;HEFlash.c: 30: while( count > 1)
  9427                           
  9428  0FC7  3002               	movlw	2
  9429  0FC8  0020               	movlb	0	; select bank0
  9430  0FC9  0226               	subwf	HEFLASH_writeBlock@count,w
  9431  0FCA  1C03               	btfss	3,0
  9432  0FCB  2FEC               	goto	l1962
  9433                           
  9434                           ;HEFlash.c: 31: {
  9435                           ;HEFlash.c: 33: FLASH_write( add++, (unsigned) *data++, 1);
  9436  0FCC  0020               	movlb	0	; select bank0
  9437  0FCD  082B               	movf	HEFLASH_writeBlock@add+1,w
  9438  0FCE  00A1               	movwf	FLASH_write@address+1
  9439  0FCF  082A               	movf	HEFLASH_writeBlock@add,w
  9440  0FD0  00A0               	movwf	FLASH_write@address
  9441  0FD1  0825               	movf	HEFLASH_writeBlock@data,w
  9442  0FD2  0086               	movwf	6
  9443  0FD3  0187               	clrf	7
  9444  0FD4  0801               	movf	1,w
  9445  0FD5  00A7               	movwf	??_HEFLASH_writeBlock
  9446  0FD6  01A8               	clrf	??_HEFLASH_writeBlock+1
  9447  0FD7  0827               	movf	??_HEFLASH_writeBlock,w
  9448  0FD8  00A2               	movwf	FLASH_write@data
  9449  0FD9  0828               	movf	??_HEFLASH_writeBlock+1,w
  9450  0FDA  00A3               	movwf	FLASH_write@data+1
  9451  0FDB  01A4               	clrf	FLASH_write@latch
  9452  0FDC  0AA4               	incf	FLASH_write@latch,f
  9453  0FDD  318E  2694  318F   	fcall	_FLASH_write
  9454  0FE0  3001               	movlw	1
  9455  0FE1  0020               	movlb	0	; select bank0
  9456  0FE2  00A7               	movwf	??_HEFLASH_writeBlock
  9457  0FE3  0827               	movf	??_HEFLASH_writeBlock,w
  9458  0FE4  07A5               	addwf	HEFLASH_writeBlock@data,f
  9459  0FE5  3001               	movlw	1
  9460  0FE6  07AA               	addwf	HEFLASH_writeBlock@add,f
  9461  0FE7  3000               	movlw	0
  9462  0FE8  3DAB               	addwfc	HEFLASH_writeBlock@add+1,f
  9463                           
  9464                           ;HEFlash.c: 34: count--;
  9465  0FE9  3001               	movlw	1
  9466  0FEA  02A6               	subwf	HEFLASH_writeBlock@count,f
  9467  0FEB  2FC7               	goto	l1960
  9468  0FEC                     l1962:	
  9469                           
  9470                           ;HEFlash.c: 35: }
  9471                           ;HEFlash.c: 39: FLASH_write( add, (unsigned) *data, 0);
  9472  0FEC  082B               	movf	HEFLASH_writeBlock@add+1,w
  9473  0FED  00A1               	movwf	FLASH_write@address+1
  9474  0FEE  082A               	movf	HEFLASH_writeBlock@add,w
  9475  0FEF  00A0               	movwf	FLASH_write@address
  9476  0FF0  0825               	movf	HEFLASH_writeBlock@data,w
  9477  0FF1  0086               	movwf	6
  9478  0FF2  0187               	clrf	7
  9479  0FF3  0801               	movf	1,w
  9480  0FF4  00A7               	movwf	??_HEFLASH_writeBlock
  9481  0FF5  01A8               	clrf	??_HEFLASH_writeBlock+1
  9482  0FF6  0827               	movf	??_HEFLASH_writeBlock,w
  9483  0FF7  00A2               	movwf	FLASH_write@data
  9484  0FF8  0828               	movf	??_HEFLASH_writeBlock+1,w
  9485  0FF9  00A3               	movwf	FLASH_write@data+1
  9486  0FFA  01A4               	clrf	FLASH_write@latch
  9487  0FFB  318E  2694         	fcall	_FLASH_write
  9488                           
  9489                           ;HEFlash.c: 44: return PMCON1bits.WRERR;
  9490                           ;	Return value of _HEFLASH_writeBlock is never used
  9491  0FFD  0023               	movlb	3	; select bank3
  9492  0FFE  0815               	movf	21,w	;volatile
  9493  0FFF  0008               	return
  9494  1000                     __end_of_HEFLASH_writeBlock:	
  9495                           
  9496                           	psect	text27
  9497  0E94                     __ptext27:	
  9498 ;; *************** function _FLASH_write *****************
  9499 ;; Defined at:
  9500 ;;		line 73 in file "Flash.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  address         2    0[BANK0 ] unsigned int 
  9503 ;;  data            2    2[BANK0 ] unsigned int 
  9504 ;;  latch           1    4[BANK0 ] unsigned char 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  temp            1    3[COMMON] unsigned char 
  9507 ;; Return value:  Size  Location     Type
  9508 ;;                  1    wreg      void 
  9509 ;; Registers used:
  9510 ;;		wreg, status,2, status,0, pclath, cstack
  9511 ;; Tracked objects:
  9512 ;;		On entry : 0/0
  9513 ;;		On exit  : 0/0
  9514 ;;		Unchanged: 0/0
  9515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9516 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9519 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9520 ;;Total ram usage:        6 bytes
  9521 ;; Hardware stack levels used:    1
  9522 ;; Hardware stack levels required when called:    5
  9523 ;; This function calls:
  9524 ;;		__unlock
  9525 ;; This function is called by:
  9526 ;;		_HEFLASH_writeBlock
  9527 ;; This function uses a non-reentrant model
  9528 ;;
  9529                           
  9530                           
  9531                           ;psect for function _FLASH_write
  9532  0E94                     _FLASH_write:	
  9533                           
  9534                           ;Flash.c: 76: char temp = INTCONbits.GIE;
  9535                           
  9536                           ;incstack = 0
  9537                           ; Regs used in _FLASH_write: [wreg+status,2+status,0+pclath+cstack]
  9538  0E94  3000               	movlw	0
  9539  0E95  1B8B               	btfsc	11,7	;volatile
  9540  0E96  3001               	movlw	1
  9541  0E97  00F3               	movwf	FLASH_write@temp
  9542                           
  9543                           ;Flash.c: 77: INTCONbits.GIE = 0;
  9544  0E98  138B               	bcf	11,7	;volatile
  9545                           
  9546                           ;Flash.c: 80: PMADR = address;
  9547  0E99  0020               	movlb	0	; select bank0
  9548  0E9A  0821               	movf	FLASH_write@address+1,w
  9549  0E9B  0023               	movlb	3	; select bank3
  9550  0E9C  0092               	movwf	18	;volatile
  9551  0E9D  0020               	movlb	0	; select bank0
  9552  0E9E  0820               	movf	FLASH_write@address,w
  9553  0E9F  0023               	movlb	3	; select bank3
  9554  0EA0  0091               	movwf	17	;volatile
  9555                           
  9556                           ;Flash.c: 81: PMDAT = data;
  9557  0EA1  0020               	movlb	0	; select bank0
  9558  0EA2  0823               	movf	FLASH_write@data+1,w
  9559  0EA3  0023               	movlb	3	; select bank3
  9560  0EA4  0094               	movwf	20	;volatile
  9561  0EA5  0020               	movlb	0	; select bank0
  9562  0EA6  0822               	movf	FLASH_write@data,w
  9563  0EA7  0023               	movlb	3	; select bank3
  9564  0EA8  0093               	movwf	19	;volatile
  9565                           
  9566                           ;Flash.c: 82: PMCON1bits.LWLO = latch;
  9567  0EA9  0020               	movlb	0	; select bank0
  9568  0EAA  0C24               	rrf	FLASH_write@latch,w
  9569  0EAB  0023               	movlb	3	; select bank3
  9570  0EAC  1C03               	skipc
  9571  0EAD  1295               	bcf	21,5	;volatile
  9572  0EAE  1803               	skipnc
  9573  0EAF  1695               	bsf	21,5	;volatile
  9574                           
  9575                           ;Flash.c: 83: PMCON1bits.CFGS = 0;
  9576  0EB0  1315               	bcf	21,6	;volatile
  9577                           
  9578                           ;Flash.c: 84: PMCON1bits.FREE = 0;
  9579  0EB1  1215               	bcf	21,4	;volatile
  9580                           
  9581                           ;Flash.c: 85: PMCON1bits.WREN = 1;
  9582  0EB2  1515               	bsf	21,2	;volatile
  9583                           
  9584                           ;Flash.c: 88: _unlock();
  9585  0EB3  318C  24D7  318E   	fcall	__unlock
  9586                           
  9587                           ;Flash.c: 91: if ( temp)
  9588  0EB6  0873               	movf	FLASH_write@temp,w
  9589  0EB7  1903               	btfsc	3,2
  9590  0EB8  0008               	return
  9591                           
  9592                           ;Flash.c: 92: INTCONbits.GIE = 1;
  9593  0EB9  178B               	bsf	11,7	;volatile
  9594  0EBA  0008               	return
  9595  0EBB                     __end_of_FLASH_write:	
  9596                           
  9597                           	psect	text28
  9598  0D70                     __ptext28:	
  9599 ;; *************** function _FLASH_erase *****************
  9600 ;; Defined at:
  9601 ;;		line 97 in file "Flash.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  address         2    3[COMMON] unsigned int 
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;  temp            1    5[COMMON] unsigned char 
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1    wreg      void 
  9608 ;; Registers used:
  9609 ;;		wreg, status,2, status,0, pclath, cstack
  9610 ;; Tracked objects:
  9611 ;;		On entry : 0/0
  9612 ;;		On exit  : 0/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;Total ram usage:        3 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    5
  9622 ;; This function calls:
  9623 ;;		__unlock
  9624 ;; This function is called by:
  9625 ;;		_HEFLASH_writeBlock
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           
  9630                           ;psect for function _FLASH_erase
  9631  0D70                     _FLASH_erase:	
  9632                           
  9633                           ;Flash.c: 100: char temp = INTCONbits.GIE;
  9634                           
  9635                           ;incstack = 0
  9636                           ; Regs used in _FLASH_erase: [wreg+status,2+status,0+pclath+cstack]
  9637  0D70  3000               	movlw	0
  9638  0D71  1B8B               	btfsc	11,7	;volatile
  9639  0D72  3001               	movlw	1
  9640  0D73  00F5               	movwf	FLASH_erase@temp
  9641                           
  9642                           ;Flash.c: 101: INTCONbits.GIE = 0;
  9643  0D74  138B               	bcf	11,7	;volatile
  9644                           
  9645                           ;Flash.c: 105: PMADR = address;
  9646  0D75  0874               	movf	FLASH_erase@address+1,w
  9647  0D76  0023               	movlb	3	; select bank3
  9648  0D77  0092               	movwf	18	;volatile
  9649  0D78  0873               	movf	FLASH_erase@address,w
  9650  0D79  0091               	movwf	17	;volatile
  9651                           
  9652                           ;Flash.c: 106: PMCON1bits.CFGS = 0;
  9653  0D7A  1315               	bcf	21,6	;volatile
  9654                           
  9655                           ;Flash.c: 107: PMCON1bits.FREE = 1;
  9656  0D7B  1615               	bsf	21,4	;volatile
  9657                           
  9658                           ;Flash.c: 108: PMCON1bits.WREN = 1;
  9659  0D7C  1515               	bsf	21,2	;volatile
  9660                           
  9661                           ;Flash.c: 111: _unlock();
  9662  0D7D  318C  24D7  318D   	fcall	__unlock
  9663                           
  9664                           ;Flash.c: 114: PMCON1bits.WREN = 0;
  9665  0D80  0023               	movlb	3	; select bank3
  9666  0D81  1115               	bcf	21,2	;volatile
  9667                           
  9668                           ;Flash.c: 115: if ( temp)
  9669  0D82  0875               	movf	FLASH_erase@temp,w
  9670  0D83  1903               	btfsc	3,2
  9671  0D84  0008               	return
  9672                           
  9673                           ;Flash.c: 116: INTCONbits.GIE = 1;
  9674  0D85  178B               	bsf	11,7	;volatile
  9675  0D86  0008               	return
  9676  0D87                     __end_of_FLASH_erase:	
  9677                           
  9678                           	psect	text29
  9679  0CD7                     __ptext29:	
  9680 ;; *************** function __unlock *****************
  9681 ;; Defined at:
  9682 ;;		line 58 in file "Flash.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		None
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    4
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_FLASH_write
  9707 ;;		_FLASH_erase
  9708 ;; This function uses a non-reentrant model
  9709 ;;
  9710                           
  9711                           
  9712                           ;psect for function __unlock
  9713  0CD7                     __unlock:	
  9714                           
  9715                           ;incstack = 0
  9716                           ; Regs used in __unlock: []
  9717  0CD7  0023               	banksel	406	;# 
  9718  0CD8  3055               	movlw	85	;# 
  9719  0CD9  0096               	movwf	22	;# 
  9720  0CDA  30AA               	movlw	170	;# 
  9721  0CDB  0096               	movwf	22	;# 
  9722  0CDC  1495               	bsf	21,1	; set WR bit ;# 
  9723  0CDD  0000               	nop	;# 
  9724  0CDE  0000               	nop	;# 
  9725  0CDF  0008               	return
  9726  0CE0                     __end_of__unlock:	
  9727                           
  9728                           	psect	intentry
  9729  0004                     __pintentry:	
  9730 ;; *************** function _INTERRUPT_InterruptManager *****************
  9731 ;; Defined at:
  9732 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, pclath, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/0
  9743 ;;		On exit  : 0/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:    3
  9753 ;; This function calls:
  9754 ;;		_INT_ISR
  9755 ;;		_PIN_MANAGER_IOC
  9756 ;;		_TMR0_ISR
  9757 ;;		_TMR1_ISR
  9758 ;;		_TMR3_ISR
  9759 ;; This function is called by:
  9760 ;;		Interrupt level 1
  9761 ;; This function uses a non-reentrant model
  9762 ;;
  9763                           
  9764  0004                     _INTERRUPT_InterruptManager:	
  9765                           
  9766                           ;incstack = 0
  9767  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9768                           
  9769                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9770  0005  3180               	pagesel	$
  9771  0006  0020               	movlb	0	; select bank0
  9772  0007  087F               	movf	127,w
  9773  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  9774                           
  9775                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9776  0009  1A8B               	btfsc	11,5	;volatile
  9777  000A  1D0B               	btfss	11,2	;volatile
  9778  000B  2810               	goto	i1l162
  9779                           
  9780                           ;interrupt_manager.c: 56: {
  9781                           ;interrupt_manager.c: 57: TMR0_ISR();
  9782  000C  318C  24C2  3180   	fcall	_TMR0_ISR
  9783                           
  9784                           ;interrupt_manager.c: 58: }
  9785  000F  2832               	goto	i1l174
  9786  0010                     i1l162:	
  9787                           
  9788                           ;interrupt_manager.c: 59: else if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  9789  0010  1A0B               	btfsc	11,4	;volatile
  9790  0011  1C8B               	btfss	11,1	;volatile
  9791  0012  2817               	goto	i1l164
  9792                           
  9793                           ;interrupt_manager.c: 60: {
  9794                           ;interrupt_manager.c: 61: INT_ISR();
  9795  0013  3187  27FB  3180   	fcall	_INT_ISR
  9796                           
  9797                           ;interrupt_manager.c: 62: }
  9798  0016  2832               	goto	i1l174
  9799  0017                     i1l164:	
  9800                           
  9801                           ;interrupt_manager.c: 63: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  9802  0017  198B               	btfsc	11,3	;volatile
  9803  0018  1C0B               	btfss	11,0	;volatile
  9804  0019  281E               	goto	i1l166
  9805                           
  9806                           ;interrupt_manager.c: 64: {
  9807                           ;interrupt_manager.c: 65: PIN_MANAGER_IOC();
  9808  001A  318C  249C  3180   	fcall	_PIN_MANAGER_IOC
  9809                           
  9810                           ;interrupt_manager.c: 66: }
  9811  001D  2832               	goto	i1l174
  9812  001E                     i1l166:	
  9813                           
  9814                           ;interrupt_manager.c: 67: else if(INTCONbits.PEIE == 1)
  9815  001E  1F0B               	btfss	11,6	;volatile
  9816  001F  2832               	goto	i1l174
  9817                           
  9818                           ;interrupt_manager.c: 68: {
  9819                           ;interrupt_manager.c: 69: if(PIE5bits.TMR3IE == 1 && PIR5bits.TMR3IF == 1)
  9820  0020  0021               	movlb	1	; select bank1
  9821  0021  1F14               	btfss	20,6	;volatile
  9822  0022  282A               	goto	i1l169
  9823  0023  0020               	movlb	0	; select bank0
  9824  0024  1F14               	btfss	20,6	;volatile
  9825  0025  282A               	goto	i1l169
  9826                           
  9827                           ;interrupt_manager.c: 70: {
  9828                           ;interrupt_manager.c: 71: TMR3_ISR();
  9829  0026  318D  2502  3180   	fcall	_TMR3_ISR
  9830                           
  9831                           ;interrupt_manager.c: 72: }
  9832  0029  2832               	goto	i1l174
  9833  002A                     i1l169:	
  9834                           
  9835                           ;interrupt_manager.c: 73: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9836  002A  0021               	movlb	1	; select bank1
  9837  002B  1C10               	btfss	16,0	;volatile
  9838  002C  2832               	goto	i1l174
  9839  002D  0020               	movlb	0	; select bank0
  9840  002E  1C10               	btfss	16,0	;volatile
  9841  002F  2832               	goto	i1l174
  9842                           
  9843                           ;interrupt_manager.c: 74: {
  9844                           ;interrupt_manager.c: 75: TMR1_ISR();
  9845  0030  318C  24F6         	fcall	_TMR1_ISR
  9846  0032                     i1l174:	
  9847                           ;interrupt_manager.c: 82: else
  9848                           ;interrupt_manager.c: 83: {
  9849                           
  9850                           ;interrupt_manager.c: 80: }
  9851                           ;interrupt_manager.c: 81: }
  9852                           
  9853                           ;interrupt_manager.c: 77: else
  9854                           ;interrupt_manager.c: 78: {
  9855                           
  9856                           ;interrupt_manager.c: 76: }
  9857                           
  9858  0032  0872               	movf	??_INTERRUPT_InterruptManager,w
  9859  0033  0020               	movlb	0	; select bank0
  9860  0034  00FF               	movwf	127
  9861  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9862  0036  0009               	retfie
  9863  0037                     __end_of_INTERRUPT_InterruptManager:	
  9864                           
  9865                           	psect	text31
  9866  0D02                     __ptext31:	
  9867 ;; *************** function _TMR3_ISR *****************
  9868 ;; Defined at:
  9869 ;;		line 160 in file "mcc_generated_files/tmr3.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0, pclath, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    2
  9890 ;; This function calls:
  9891 ;;		_TMR3_CallBack
  9892 ;;		_TMR3_WriteTimer
  9893 ;; This function is called by:
  9894 ;;		_INTERRUPT_InterruptManager
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           
  9899                           ;psect for function _TMR3_ISR
  9900  0D02                     _TMR3_ISR:	
  9901                           
  9902                           ;tmr3.c: 164: PIR5bits.TMR3IF = 0;
  9903                           
  9904                           ;incstack = 0
  9905                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
  9906  0D02  0020               	movlb	0	; select bank0
  9907  0D03  1314               	bcf	20,6	;volatile
  9908                           
  9909                           ;tmr3.c: 165: TMR3_WriteTimer(timer3ReloadVal);
  9910  0D04  085D               	movf	_timer3ReloadVal+1,w	;volatile
  9911  0D05  00F1               	movwf	TMR3_WriteTimer@timerVal+1
  9912  0D06  085C               	movf	_timer3ReloadVal,w	;volatile
  9913  0D07  00F0               	movwf	TMR3_WriteTimer@timerVal
  9914  0D08  318D  252B  318D   	fcall	_TMR3_WriteTimer
  9915                           
  9916                           ;tmr3.c: 169: TMR3_CallBack();
  9917  0D0B  318D  250E         	fcall	_TMR3_CallBack
  9918  0D0D  0008               	return
  9919  0D0E                     __end_of_TMR3_ISR:	
  9920                           
  9921                           	psect	text32
  9922  0D2B                     __ptext32:	
  9923 ;; *************** function _TMR3_WriteTimer *****************
  9924 ;; Defined at:
  9925 ;;		line 123 in file "mcc_generated_files/tmr3.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  timerVal        2    0[COMMON] unsigned int 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9943 ;;Total ram usage:        2 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; This function calls:
  9946 ;;		Nothing
  9947 ;; This function is called by:
  9948 ;;		_TMR3_ISR
  9949 ;;		_TMR3_Reload
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           
  9954                           ;psect for function _TMR3_WriteTimer
  9955  0D2B                     _TMR3_WriteTimer:	
  9956                           
  9957                           ;tmr3.c: 125: if (T3CONbits.T3SYNC == 1)
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  9961  0D2B  0029               	movlb	9	; select bank9
  9962  0D2C  1D15               	btfss	21,2	;volatile
  9963  0D2D  2D35               	goto	i1l1898
  9964                           
  9965                           ;tmr3.c: 126: {
  9966                           ;tmr3.c: 128: T3CONbits.TMR3ON = 0;
  9967  0D2E  1015               	bcf	21,0	;volatile
  9968                           
  9969                           ;tmr3.c: 131: TMR3H = (timerVal >> 8);
  9970  0D2F  0871               	movf	TMR3_WriteTimer@timerVal+1,w
  9971  0D30  0094               	movwf	20	;volatile
  9972                           
  9973                           ;tmr3.c: 132: TMR3L = timerVal;
  9974  0D31  0870               	movf	TMR3_WriteTimer@timerVal,w
  9975  0D32  0093               	movwf	19	;volatile
  9976                           
  9977                           ;tmr3.c: 135: T3CONbits.TMR3ON =1;
  9978  0D33  1415               	bsf	21,0	;volatile
  9979                           
  9980                           ;tmr3.c: 136: }
  9981  0D34  0008               	return
  9982  0D35                     i1l1898:	
  9983                           
  9984                           ;tmr3.c: 137: else
  9985                           ;tmr3.c: 138: {
  9986                           ;tmr3.c: 140: TMR3H = (timerVal >> 8);
  9987  0D35  0871               	movf	TMR3_WriteTimer@timerVal+1,w
  9988  0D36  0094               	movwf	20	;volatile
  9989                           
  9990                           ;tmr3.c: 141: TMR3L = timerVal;
  9991  0D37  0870               	movf	TMR3_WriteTimer@timerVal,w
  9992  0D38  0093               	movwf	19	;volatile
  9993  0D39  0008               	return
  9994  0D3A                     __end_of_TMR3_WriteTimer:	
  9995                           
  9996                           	psect	text33
  9997  0D0E                     __ptext33:	
  9998 ;; *************** function _TMR3_CallBack *****************
  9999 ;; Defined at:
 10000 ;;		line 172 in file "mcc_generated_files/tmr3.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;		None
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;		None
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  1    wreg      void 
 10007 ;; Registers used:
 10008 ;;		wreg, status,2, status,0, pclath, cstack
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;Total ram usage:        0 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:    1
 10021 ;; This function calls:
 10022 ;;		Absolute function
 10023 ;;		_TMR3_DefaultInterruptHandler
 10024 ;;		_bsp_TimerInterruptISRCallback
 10025 ;; This function is called by:
 10026 ;;		_TMR3_ISR
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
 10031                           ;psect for function _TMR3_CallBack
 10032  0D0E                     _TMR3_CallBack:	
 10033                           
 10034                           ;tmr3.c: 175: bsp_TimerInterruptISRCallback();
 10035                           
 10036                           ;incstack = 0
 10037                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10038  0D0E  3185  251D  318D   	fcall	_bsp_TimerInterruptISRCallback
 10039                           
 10040                           ;tmr3.c: 176: if(TMR3_InterruptHandler)
 10041  0D11  0020               	movlb	0	; select bank0
 10042  0D12  085A               	movf	_TMR3_InterruptHandler,w
 10043  0D13  045B               	iorwf	_TMR3_InterruptHandler+1,w
 10044  0D14  1903               	btfsc	3,2
 10045  0D15  0008               	return
 10046                           
 10047                           ;tmr3.c: 177: {
 10048                           ;tmr3.c: 178: TMR3_InterruptHandler();
 10049  0D16  085B               	movf	_TMR3_InterruptHandler+1,w
 10050  0D17  008A               	movwf	10
 10051  0D18  085A               	movf	_TMR3_InterruptHandler,w
 10052  0D19  000A               	callw
 10053  0D1A  318D               	pagesel	$
 10054  0D1B  0008               	return
 10055  0D1C                     __end_of_TMR3_CallBack:	
 10056                           
 10057                           	psect	text34
 10058  051D                     __ptext34:	
 10059 ;; *************** function _bsp_TimerInterruptISRCallback *****************
 10060 ;; Defined at:
 10061 ;;		line 37 in file "bsp_counter.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;		None
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1    wreg      void 
 10068 ;; Registers used:
 10069 ;;		wreg, status,2, status,0
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10079 ;;Total ram usage:        0 bytes
 10080 ;; Hardware stack levels used:    1
 10081 ;; This function calls:
 10082 ;;		Nothing
 10083 ;; This function is called by:
 10084 ;;		_TMR3_CallBack
 10085 ;; This function uses a non-reentrant model
 10086 ;;
 10087                           
 10088                           
 10089                           ;psect for function _bsp_TimerInterruptISRCallback
 10090  051D                     _bsp_TimerInterruptISRCallback:	
 10091                           
 10092                           ;bsp_counter.c: 39: if(0 == gBoxCntStruct.TimeCntStartFlag && 0 == gBoxCntStruct.TimeCnt
      +                          EndFlag)
 10093                           
 10094                           ;incstack = 0
 10095                           ; Regs used in _bsp_TimerInterruptISRCallback: [wreg+status,2+status,0]
 10096  051D  0020               	movlb	0	; select bank0
 10097  051E  0841               	movf	_gBoxCntStruct,w
 10098  051F  1903               	btfsc	3,2
 10099  0520  0842               	movf	_gBoxCntStruct+1,w
 10100  0521  1903               	btfsc	3,2
 10101  0522  0008               	return
 10102                           
 10103                           ;bsp_counter.c: 42: }
 10104                           ;bsp_counter.c: 44: if(1 == gBoxCntStruct.TimeCntStartFlag)
 10105                           
 10106                           ;bsp_counter.c: 40: {
 10107                           ;bsp_counter.c: 41: return;
 10108  0523  0341               	decf	_gBoxCntStruct,w
 10109  0524  1D03               	btfss	3,2
 10110  0525  2D4F               	goto	i1l1694
 10111                           
 10112                           ;bsp_counter.c: 45: {
 10113                           ;bsp_counter.c: 46: gBoxCntStruct.SingleTimeCnt++;
 10114  0526  3001               	movlw	1
 10115  0527  07C6               	addwf	_gBoxCntStruct+5,f
 10116  0528  3000               	movlw	0
 10117  0529  3DC7               	addwfc	_gBoxCntStruct+6,f
 10118  052A  3000               	movlw	0
 10119  052B  3DC8               	addwfc	_gBoxCntStruct+7,f
 10120  052C  3000               	movlw	0
 10121  052D  3DC9               	addwfc	_gBoxCntStruct+8,f
 10122                           
 10123                           ;bsp_counter.c: 47: if(500 < gBoxCntStruct.SingleTimeCnt)
 10124  052E  0849               	movf	_gBoxCntStruct+8,w
 10125  052F  1D03               	btfss	3,2
 10126  0530  2D3A               	goto	i1l1682
 10127  0531  0848               	movf	_gBoxCntStruct+7,w
 10128  0532  1D03               	btfss	3,2
 10129  0533  2D3A               	goto	i1l1682
 10130  0534  30F5               	movlw	245
 10131  0535  0246               	subwf	_gBoxCntStruct+5,w
 10132  0536  3001               	movlw	1
 10133  0537  3B47               	subwfb	_gBoxCntStruct+6,w
 10134  0538  1C03               	btfss	3,0
 10135  0539  0008               	return
 10136  053A                     i1l1682:	
 10137                           
 10138                           ;bsp_counter.c: 48: {
 10139                           ;bsp_counter.c: 50: gBoxCntStruct.JamFlag = 1;
 10140  053A  01C4               	clrf	_gBoxCntStruct+3
 10141  053B  0AC4               	incf	_gBoxCntStruct+3,f
 10142                           
 10143                           ;bsp_counter.c: 51: gBoxCntStruct.AlarmFlag = 1;
 10144  053C  01C3               	clrf	_gBoxCntStruct+2
 10145  053D  0AC3               	incf	_gBoxCntStruct+2,f
 10146                           
 10147                           ;bsp_counter.c: 52: gBoxCntStruct.JamCnt ++;
 10148  053E  3001               	movlw	1
 10149  053F  07D0               	addwf	_gBoxCntStruct+15,f
 10150  0540  3000               	movlw	0
 10151  0541  3DD1               	addwfc	_gBoxCntStruct+16,f
 10152                           
 10153                           ;bsp_counter.c: 53: gBoxCntStruct.SingleTimeCnt = 0;
 10154  0542  3000               	movlw	0
 10155  0543  00C9               	movwf	_gBoxCntStruct+8
 10156  0544  3000               	movlw	0
 10157  0545  00C8               	movwf	_gBoxCntStruct+7
 10158  0546  3000               	movlw	0
 10159  0547  00C7               	movwf	_gBoxCntStruct+6
 10160  0548  3000               	movlw	0
 10161  0549  00C6               	movwf	_gBoxCntStruct+5
 10162                           
 10163                           ;bsp_counter.c: 54: gBoxCntStruct.TimeCntEndFlag = 0;
 10164  054A  01C2               	clrf	_gBoxCntStruct+1
 10165                           
 10166                           ;bsp_counter.c: 55: gBoxCntStruct.TimeCntStartFlag = 0;
 10167  054B  01C1               	clrf	_gBoxCntStruct
 10168                           
 10169                           ;bsp_counter.c: 56: gBoxCntStruct.DisplayReflashFlag = 1;
 10170  054C  01C5               	clrf	_gBoxCntStruct+4
 10171  054D  0AC5               	incf	_gBoxCntStruct+4,f
 10172                           
 10173                           ;bsp_counter.c: 57: }
 10174                           ;bsp_counter.c: 58: return;
 10175  054E  0008               	return
 10176  054F                     i1l1694:	
 10177                           
 10178                           ;bsp_counter.c: 59: }
 10179                           ;bsp_counter.c: 63: if(1 == gBoxCntStruct.TimeCntEndFlag)
 10180  054F  0342               	decf	_gBoxCntStruct+1,w
 10181  0550  1D03               	btfss	3,2
 10182  0551  0008               	return
 10183                           
 10184                           ;bsp_counter.c: 64: {
 10185                           ;bsp_counter.c: 65: gBoxCntStruct.TimeCntEndFlag = 0;
 10186  0552  01C2               	clrf	_gBoxCntStruct+1
 10187                           
 10188                           ;bsp_counter.c: 66: gBoxCntStruct.TimeCntStartFlag = 0;
 10189  0553  01C1               	clrf	_gBoxCntStruct
 10190                           
 10191                           ;bsp_counter.c: 68: if(100 > gBoxCntStruct.SingleTimeCnt)
 10192  0554  0849               	movf	_gBoxCntStruct+8,w
 10193  0555  1D03               	btfss	3,2
 10194  0556  2D6A               	goto	i1l435
 10195  0557  0848               	movf	_gBoxCntStruct+7,w
 10196  0558  1D03               	btfss	3,2
 10197  0559  2D6A               	goto	i1l435
 10198  055A  0847               	movf	_gBoxCntStruct+6,w
 10199  055B  1D03               	btfss	3,2
 10200  055C  2D6A               	goto	i1l435
 10201  055D  3064               	movlw	100
 10202  055E  0246               	subwf	_gBoxCntStruct+5,w
 10203  055F  1803               	btfsc	3,0
 10204  0560  2D6A               	goto	i1l435
 10205                           
 10206                           ;bsp_counter.c: 69: {
 10207                           ;bsp_counter.c: 70: gBoxCntStruct.SingleTimeCnt = 0;
 10208  0561  3000               	movlw	0
 10209  0562  00C9               	movwf	_gBoxCntStruct+8
 10210  0563  3000               	movlw	0
 10211  0564  00C8               	movwf	_gBoxCntStruct+7
 10212  0565  3000               	movlw	0
 10213  0566  00C7               	movwf	_gBoxCntStruct+6
 10214  0567  3000               	movlw	0
 10215  0568  00C6               	movwf	_gBoxCntStruct+5
 10216                           
 10217                           ;bsp_counter.c: 71: return;
 10218  0569  0008               	return
 10219  056A                     i1l435:	
 10220                           
 10221                           ;bsp_counter.c: 72: }
 10222                           ;bsp_counter.c: 73: gBoxCntStruct.DisplayReflashFlag = 1;
 10223  056A  01C5               	clrf	_gBoxCntStruct+4
 10224  056B  0AC5               	incf	_gBoxCntStruct+4,f
 10225                           
 10226                           ;bsp_counter.c: 83: if(140 < gBoxCntStruct.SingleTimeCnt && 283 > gBoxCntStruct.SingleTi
      +                          meCnt)
 10227  056C  0849               	movf	_gBoxCntStruct+8,w
 10228  056D  1D03               	btfss	3,2
 10229  056E  2D79               	goto	i1l1706
 10230  056F  0848               	movf	_gBoxCntStruct+7,w
 10231  0570  1D03               	btfss	3,2
 10232  0571  2D79               	goto	i1l1706
 10233  0572  0847               	movf	_gBoxCntStruct+6,w
 10234  0573  1D03               	btfss	3,2
 10235  0574  2D79               	goto	i1l1706
 10236  0575  308D               	movlw	141
 10237  0576  0246               	subwf	_gBoxCntStruct+5,w
 10238  0577  1C03               	btfss	3,0
 10239  0578  2D9A               	goto	i1l1712
 10240  0579                     i1l1706:	
 10241  0579  0849               	movf	_gBoxCntStruct+8,w
 10242  057A  1D03               	btfss	3,2
 10243  057B  2D9A               	goto	i1l1712
 10244  057C  0848               	movf	_gBoxCntStruct+7,w
 10245  057D  1D03               	btfss	3,2
 10246  057E  2D9A               	goto	i1l1712
 10247  057F  301B               	movlw	27
 10248  0580  0246               	subwf	_gBoxCntStruct+5,w
 10249  0581  3001               	movlw	1
 10250  0582  3B47               	subwfb	_gBoxCntStruct+6,w
 10251  0583  1803               	btfsc	3,0
 10252  0584  2D9A               	goto	i1l1712
 10253                           
 10254                           ;bsp_counter.c: 84: {
 10255                           ;bsp_counter.c: 85: gBoxCntStruct.MiddleBoxCnt++;
 10256  0585  3001               	movlw	1
 10257  0586  07CC               	addwf	_gBoxCntStruct+11,f
 10258  0587  3000               	movlw	0
 10259  0588  3DCD               	addwfc	_gBoxCntStruct+12,f
 10260                           
 10261                           ;bsp_counter.c: 86: gBoxCntStruct.BoxSum++;
 10262  0589  3001               	movlw	1
 10263  058A  07D2               	addwf	_gBoxCntStruct+17,f
 10264  058B  3000               	movlw	0
 10265  058C  3DD3               	addwfc	_gBoxCntStruct+18,f
 10266  058D  3000               	movlw	0
 10267  058E  3DD4               	addwfc	_gBoxCntStruct+19,f
 10268  058F  3000               	movlw	0
 10269  0590  3DD5               	addwfc	_gBoxCntStruct+20,f
 10270                           
 10271                           ;bsp_counter.c: 87: gBoxCntStruct.SingleTimeCnt = 0;
 10272  0591  3000               	movlw	0
 10273  0592  00C9               	movwf	_gBoxCntStruct+8
 10274  0593  3000               	movlw	0
 10275  0594  00C8               	movwf	_gBoxCntStruct+7
 10276  0595  3000               	movlw	0
 10277  0596  00C7               	movwf	_gBoxCntStruct+6
 10278  0597  3000               	movlw	0
 10279  0598  00C6               	movwf	_gBoxCntStruct+5
 10280                           
 10281                           ;bsp_counter.c: 88: return;
 10282  0599  0008               	return
 10283  059A                     i1l1712:	
 10284                           
 10285                           ;bsp_counter.c: 89: }
 10286                           ;bsp_counter.c: 91: if(283 < gBoxCntStruct.SingleTimeCnt && 424 > gBoxCntStruct.SingleTi
      +                          meCnt)
 10287  059A  0849               	movf	_gBoxCntStruct+8,w
 10288  059B  1D03               	btfss	3,2
 10289  059C  2DA6               	goto	i1l1714
 10290  059D  0848               	movf	_gBoxCntStruct+7,w
 10291  059E  1D03               	btfss	3,2
 10292  059F  2DA6               	goto	i1l1714
 10293  05A0  301C               	movlw	28
 10294  05A1  0246               	subwf	_gBoxCntStruct+5,w
 10295  05A2  3001               	movlw	1
 10296  05A3  3B47               	subwfb	_gBoxCntStruct+6,w
 10297  05A4  1C03               	btfss	3,0
 10298  05A5  2DC7               	goto	i1l1720
 10299  05A6                     i1l1714:	
 10300  05A6  0849               	movf	_gBoxCntStruct+8,w
 10301  05A7  1D03               	btfss	3,2
 10302  05A8  2DC7               	goto	i1l1720
 10303  05A9  0848               	movf	_gBoxCntStruct+7,w
 10304  05AA  1D03               	btfss	3,2
 10305  05AB  2DC7               	goto	i1l1720
 10306  05AC  30A8               	movlw	168
 10307  05AD  0246               	subwf	_gBoxCntStruct+5,w
 10308  05AE  3001               	movlw	1
 10309  05AF  3B47               	subwfb	_gBoxCntStruct+6,w
 10310  05B0  1803               	btfsc	3,0
 10311  05B1  2DC7               	goto	i1l1720
 10312                           
 10313                           ;bsp_counter.c: 92: {
 10314                           ;bsp_counter.c: 93: gBoxCntStruct.LargeBoxCnt++;
 10315  05B2  3001               	movlw	1
 10316  05B3  07CE               	addwf	_gBoxCntStruct+13,f
 10317  05B4  3000               	movlw	0
 10318  05B5  3DCF               	addwfc	_gBoxCntStruct+14,f
 10319                           
 10320                           ;bsp_counter.c: 94: gBoxCntStruct.BoxSum++;
 10321  05B6  3001               	movlw	1
 10322  05B7  07D2               	addwf	_gBoxCntStruct+17,f
 10323  05B8  3000               	movlw	0
 10324  05B9  3DD3               	addwfc	_gBoxCntStruct+18,f
 10325  05BA  3000               	movlw	0
 10326  05BB  3DD4               	addwfc	_gBoxCntStruct+19,f
 10327  05BC  3000               	movlw	0
 10328  05BD  3DD5               	addwfc	_gBoxCntStruct+20,f
 10329                           
 10330                           ;bsp_counter.c: 95: gBoxCntStruct.SingleTimeCnt = 0;
 10331  05BE  3000               	movlw	0
 10332  05BF  00C9               	movwf	_gBoxCntStruct+8
 10333  05C0  3000               	movlw	0
 10334  05C1  00C8               	movwf	_gBoxCntStruct+7
 10335  05C2  3000               	movlw	0
 10336  05C3  00C7               	movwf	_gBoxCntStruct+6
 10337  05C4  3000               	movlw	0
 10338  05C5  00C6               	movwf	_gBoxCntStruct+5
 10339                           
 10340                           ;bsp_counter.c: 96: return ;
 10341  05C6  0008               	return
 10342  05C7                     i1l1720:	
 10343                           
 10344                           ;bsp_counter.c: 97: }
 10345                           ;bsp_counter.c: 99: if(140 > gBoxCntStruct.SingleTimeCnt)
 10346  05C7  0849               	movf	_gBoxCntStruct+8,w
 10347  05C8  1D03               	btfss	3,2
 10348  05C9  0008               	return
 10349  05CA  0848               	movf	_gBoxCntStruct+7,w
 10350  05CB  1D03               	btfss	3,2
 10351  05CC  0008               	return
 10352  05CD  0847               	movf	_gBoxCntStruct+6,w
 10353  05CE  1D03               	btfss	3,2
 10354  05CF  0008               	return
 10355  05D0  308C               	movlw	140
 10356  05D1  0246               	subwf	_gBoxCntStruct+5,w
 10357  05D2  1803               	btfsc	3,0
 10358  05D3  0008               	return
 10359                           
 10360                           ;bsp_counter.c: 100: {
 10361                           ;bsp_counter.c: 101: gBoxCntStruct.SmallBoxCnt++;
 10362  05D4  3001               	movlw	1
 10363  05D5  07CA               	addwf	_gBoxCntStruct+9,f
 10364  05D6  3000               	movlw	0
 10365  05D7  3DCB               	addwfc	_gBoxCntStruct+10,f
 10366                           
 10367                           ;bsp_counter.c: 102: gBoxCntStruct.BoxSum++;
 10368  05D8  3001               	movlw	1
 10369  05D9  07D2               	addwf	_gBoxCntStruct+17,f
 10370  05DA  3000               	movlw	0
 10371  05DB  3DD3               	addwfc	_gBoxCntStruct+18,f
 10372  05DC  3000               	movlw	0
 10373  05DD  3DD4               	addwfc	_gBoxCntStruct+19,f
 10374  05DE  3000               	movlw	0
 10375  05DF  3DD5               	addwfc	_gBoxCntStruct+20,f
 10376                           
 10377                           ;bsp_counter.c: 103: gBoxCntStruct.SingleTimeCnt = 0;
 10378  05E0  3000               	movlw	0
 10379  05E1  00C9               	movwf	_gBoxCntStruct+8
 10380  05E2  3000               	movlw	0
 10381  05E3  00C8               	movwf	_gBoxCntStruct+7
 10382  05E4  3000               	movlw	0
 10383  05E5  00C7               	movwf	_gBoxCntStruct+6
 10384  05E6  3000               	movlw	0
 10385  05E7  00C6               	movwf	_gBoxCntStruct+5
 10386                           
 10387                           ;bsp_counter.c: 104: return;
 10388  05E8  0008               	return
 10389  05E9                     __end_of_bsp_TimerInterruptISRCallback:	
 10390                           
 10391                           	psect	text35
 10392  07FF                     __ptext35:	
 10393 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 10394 ;; Defined at:
 10395 ;;		line 186 in file "mcc_generated_files/tmr3.c"
 10396 ;; Parameters:    Size  Location     Type
 10397 ;;		None
 10398 ;; Auto vars:     Size  Location     Type
 10399 ;;		None
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		None
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10413 ;;Total ram usage:        0 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; This function calls:
 10416 ;;		Nothing
 10417 ;; This function is called by:
 10418 ;;		_TMR3_Initialize
 10419 ;;		_TMR3_CallBack
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           
 10424                           ;psect for function _TMR3_DefaultInterruptHandler
 10425  07FF                     _TMR3_DefaultInterruptHandler:	
 10426                           
 10427                           ;incstack = 0
 10428                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 10429  07FF  0008               	return
 10430  0800                     __end_of_TMR3_DefaultInterruptHandler:	
 10431                           
 10432                           	psect	text36
 10433  0CF6                     __ptext36:	
 10434 ;; *************** function _TMR1_ISR *****************
 10435 ;; Defined at:
 10436 ;;		line 157 in file "mcc_generated_files/tmr1.c"
 10437 ;; Parameters:    Size  Location     Type
 10438 ;;		None
 10439 ;; Auto vars:     Size  Location     Type
 10440 ;;		None
 10441 ;; Return value:  Size  Location     Type
 10442 ;;                  1    wreg      void 
 10443 ;; Registers used:
 10444 ;;		wreg, status,2, status,0, pclath, cstack
 10445 ;; Tracked objects:
 10446 ;;		On entry : 0/0
 10447 ;;		On exit  : 0/0
 10448 ;;		Unchanged: 0/0
 10449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;Total ram usage:        0 bytes
 10455 ;; Hardware stack levels used:    1
 10456 ;; Hardware stack levels required when called:    2
 10457 ;; This function calls:
 10458 ;;		_TMR1_CallBack
 10459 ;;		_TMR1_WriteTimer
 10460 ;; This function is called by:
 10461 ;;		_INTERRUPT_InterruptManager
 10462 ;; This function uses a non-reentrant model
 10463 ;;
 10464                           
 10465                           
 10466                           ;psect for function _TMR1_ISR
 10467  0CF6                     _TMR1_ISR:	
 10468                           
 10469                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
 10470                           
 10471                           ;incstack = 0
 10472                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 10473  0CF6  0020               	movlb	0	; select bank0
 10474  0CF7  1010               	bcf	16,0	;volatile
 10475                           
 10476                           ;tmr1.c: 162: TMR1_WriteTimer(timer1ReloadVal);
 10477  0CF8  0861               	movf	_timer1ReloadVal+1,w	;volatile
 10478  0CF9  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 10479  0CFA  0860               	movf	_timer1ReloadVal,w	;volatile
 10480  0CFB  00F0               	movwf	TMR1_WriteTimer@timerVal
 10481  0CFC  318D  251C  318C   	fcall	_TMR1_WriteTimer
 10482                           
 10483                           ;tmr1.c: 166: TMR1_CallBack();
 10484  0CFF  318C  24E0         	fcall	_TMR1_CallBack
 10485  0D01  0008               	return
 10486  0D02                     __end_of_TMR1_ISR:	
 10487                           
 10488                           	psect	text37
 10489  0D1C                     __ptext37:	
 10490 ;; *************** function _TMR1_WriteTimer *****************
 10491 ;; Defined at:
 10492 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 10493 ;; Parameters:    Size  Location     Type
 10494 ;;  timerVal        2    0[COMMON] unsigned int 
 10495 ;; Auto vars:     Size  Location     Type
 10496 ;;		None
 10497 ;; Return value:  Size  Location     Type
 10498 ;;                  1    wreg      void 
 10499 ;; Registers used:
 10500 ;;		wreg, status,2
 10501 ;; Tracked objects:
 10502 ;;		On entry : 0/0
 10503 ;;		On exit  : 0/0
 10504 ;;		Unchanged: 0/0
 10505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10510 ;;Total ram usage:        2 bytes
 10511 ;; Hardware stack levels used:    1
 10512 ;; This function calls:
 10513 ;;		Nothing
 10514 ;; This function is called by:
 10515 ;;		_TMR1_ISR
 10516 ;;		_TMR1_Reload
 10517 ;; This function uses a non-reentrant model
 10518 ;;
 10519                           
 10520                           
 10521                           ;psect for function _TMR1_WriteTimer
 10522  0D1C                     _TMR1_WriteTimer:	
 10523                           
 10524                           ;tmr1.c: 122: if (T1CONbits.nT1SYNC == 1)
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 10528  0D1C  0020               	movlb	0	; select bank0
 10529  0D1D  1D18               	btfss	24,2	;volatile
 10530  0D1E  2D26               	goto	i1l1834
 10531                           
 10532                           ;tmr1.c: 123: {
 10533                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 10534  0D1F  1018               	bcf	24,0	;volatile
 10535                           
 10536                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 10537  0D20  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10538  0D21  0097               	movwf	23	;volatile
 10539                           
 10540                           ;tmr1.c: 129: TMR1L = timerVal;
 10541  0D22  0870               	movf	TMR1_WriteTimer@timerVal,w
 10542  0D23  0096               	movwf	22	;volatile
 10543                           
 10544                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 10545  0D24  1418               	bsf	24,0	;volatile
 10546                           
 10547                           ;tmr1.c: 133: }
 10548  0D25  0008               	return
 10549  0D26                     i1l1834:	
 10550                           
 10551                           ;tmr1.c: 134: else
 10552                           ;tmr1.c: 135: {
 10553                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 10554  0D26  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 10555  0D27  0097               	movwf	23	;volatile
 10556                           
 10557                           ;tmr1.c: 138: TMR1L = timerVal;
 10558  0D28  0870               	movf	TMR1_WriteTimer@timerVal,w
 10559  0D29  0096               	movwf	22	;volatile
 10560  0D2A  0008               	return
 10561  0D2B                     __end_of_TMR1_WriteTimer:	
 10562                           
 10563                           	psect	text38
 10564  0CE0                     __ptext38:	
 10565 ;; *************** function _TMR1_CallBack *****************
 10566 ;; Defined at:
 10567 ;;		line 169 in file "mcc_generated_files/tmr1.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;		None
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      void 
 10574 ;; Registers used:
 10575 ;;		wreg, status,2, status,0, pclath, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10585 ;;Total ram usage:        0 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:    1
 10588 ;; This function calls:
 10589 ;;		Absolute function
 10590 ;;		_TMR1_DefaultInterruptHandler
 10591 ;; This function is called by:
 10592 ;;		_TMR1_ISR
 10593 ;; This function uses a non-reentrant model
 10594 ;;
 10595                           
 10596                           
 10597                           ;psect for function _TMR1_CallBack
 10598  0CE0                     _TMR1_CallBack:	
 10599                           
 10600                           ;tmr1.c: 172: if(TMR1_InterruptHandler)
 10601                           
 10602                           ;incstack = 0
 10603                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10604  0CE0  0020               	movlb	0	; select bank0
 10605  0CE1  085E               	movf	_TMR1_InterruptHandler,w
 10606  0CE2  045F               	iorwf	_TMR1_InterruptHandler+1,w
 10607  0CE3  1903               	btfsc	3,2
 10608  0CE4  0008               	return
 10609                           
 10610                           ;tmr1.c: 173: {
 10611                           ;tmr1.c: 174: TMR1_InterruptHandler();
 10612  0CE5  085F               	movf	_TMR1_InterruptHandler+1,w
 10613  0CE6  008A               	movwf	10
 10614  0CE7  085E               	movf	_TMR1_InterruptHandler,w
 10615  0CE8  000A               	callw
 10616  0CE9  318C               	pagesel	$
 10617  0CEA  0008               	return
 10618  0CEB                     __end_of_TMR1_CallBack:	
 10619                           
 10620                           	psect	text39
 10621  0003                     __ptext39:	
 10622 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 10623 ;; Defined at:
 10624 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;		None
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      void 
 10631 ;; Registers used:
 10632 ;;		None
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10642 ;;Total ram usage:        0 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; This function calls:
 10645 ;;		Nothing
 10646 ;; This function is called by:
 10647 ;;		_TMR1_Initialize
 10648 ;;		_TMR1_CallBack
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           
 10653                           ;psect for function _TMR1_DefaultInterruptHandler
 10654  0003                     _TMR1_DefaultInterruptHandler:	
 10655                           
 10656                           ;incstack = 0
 10657                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 10658  0003  0008               	return
 10659  0004                     __end_of_TMR1_DefaultInterruptHandler:	
 10660                           
 10661                           	psect	text40
 10662  0CC2                     __ptext40:	
 10663 ;; *************** function _TMR0_ISR *****************
 10664 ;; Defined at:
 10665 ;;		line 112 in file "mcc_generated_files/tmr0.c"
 10666 ;; Parameters:    Size  Location     Type
 10667 ;;		None
 10668 ;; Auto vars:     Size  Location     Type
 10669 ;;		None
 10670 ;; Return value:  Size  Location     Type
 10671 ;;                  1    wreg      void 
 10672 ;; Registers used:
 10673 ;;		wreg, status,2, status,0, pclath, cstack
 10674 ;; Tracked objects:
 10675 ;;		On entry : 0/0
 10676 ;;		On exit  : 0/0
 10677 ;;		Unchanged: 0/0
 10678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10683 ;;Total ram usage:        0 bytes
 10684 ;; Hardware stack levels used:    1
 10685 ;; Hardware stack levels required when called:    2
 10686 ;; This function calls:
 10687 ;;		_TMR0_CallBack
 10688 ;; This function is called by:
 10689 ;;		_INTERRUPT_InterruptManager
 10690 ;; This function uses a non-reentrant model
 10691 ;;
 10692                           
 10693                           
 10694                           ;psect for function _TMR0_ISR
 10695  0CC2                     _TMR0_ISR:	
 10696                           
 10697                           ;tmr0.c: 116: INTCONbits.TMR0IF = 0;
 10698                           
 10699                           ;incstack = 0
 10700                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10701  0CC2  110B               	bcf	11,2	;volatile
 10702                           
 10703                           ;tmr0.c: 118: TMR0 = timer0ReloadVal;
 10704  0CC3  0020               	movlb	0	; select bank0
 10705  0CC4  0864               	movf	_timer0ReloadVal,w	;volatile
 10706  0CC5  0095               	movwf	21	;volatile
 10707                           
 10708                           ;tmr0.c: 122: TMR0_CallBack();
 10709  0CC6  318D  25D3         	fcall	_TMR0_CallBack
 10710  0CC8  0008               	return
 10711  0CC9                     __end_of_TMR0_ISR:	
 10712                           
 10713                           	psect	text41
 10714  0DD3                     __ptext41:	
 10715 ;; *************** function _TMR0_CallBack *****************
 10716 ;; Defined at:
 10717 ;;		line 127 in file "mcc_generated_files/tmr0.c"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0, pclath, cstack
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10735 ;;Total ram usage:        1 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    1
 10738 ;; This function calls:
 10739 ;;		Absolute function
 10740 ;;		_TMR0_DefaultInterruptHandler
 10741 ;; This function is called by:
 10742 ;;		_TMR0_ISR
 10743 ;; This function uses a non-reentrant model
 10744 ;;
 10745                           
 10746                           
 10747                           ;psect for function _TMR0_CallBack
 10748  0DD3                     _TMR0_CallBack:	
 10749                           
 10750                           ;tmr0.c: 130: gTimer0AlarmFlashFlag = 1;
 10751                           
 10752                           ;incstack = 0
 10753                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10754  0DD3  3001               	movlw	1
 10755  0DD4  00F0               	movwf	??_TMR0_CallBack
 10756  0DD5  0870               	movf	??_TMR0_CallBack,w
 10757  0DD6  00FA               	movwf	_gTimer0AlarmFlashFlag	;volatile
 10758                           
 10759                           ;tmr0.c: 131: gTimer0NormalFalshCnt++;
 10760  0DD7  3001               	movlw	1
 10761  0DD8  00F0               	movwf	??_TMR0_CallBack
 10762  0DD9  0870               	movf	??_TMR0_CallBack,w
 10763  0DDA  07F9               	addwf	_gTimer0NormalFalshCnt,f	;volatile
 10764                           
 10765                           ;tmr0.c: 132: if(gTimer0NormalFalshCnt > 5)
 10766  0DDB  3006               	movlw	6
 10767  0DDC  0279               	subwf	_gTimer0NormalFalshCnt,w	;volatile
 10768  0DDD  1C03               	skipc
 10769  0DDE  2DE4               	goto	i1l1804
 10770                           
 10771                           ;tmr0.c: 133: {
 10772                           ;tmr0.c: 134: gTimer0NormalFalshCnt = 0;
 10773  0DDF  01F9               	clrf	_gTimer0NormalFalshCnt	;volatile
 10774                           
 10775                           ;tmr0.c: 135: gTimer0NormalFlashFlag= 1;
 10776  0DE0  3001               	movlw	1
 10777  0DE1  00F0               	movwf	??_TMR0_CallBack
 10778  0DE2  0870               	movf	??_TMR0_CallBack,w
 10779  0DE3  00F8               	movwf	_gTimer0NormalFlashFlag	;volatile
 10780  0DE4                     i1l1804:	
 10781                           
 10782                           ;tmr0.c: 136: }
 10783                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
 10784  0DE4  0020               	movlb	0	; select bank0
 10785  0DE5  0862               	movf	_TMR0_InterruptHandler,w
 10786  0DE6  0463               	iorwf	_TMR0_InterruptHandler+1,w
 10787  0DE7  1903               	btfsc	3,2
 10788  0DE8  0008               	return
 10789                           
 10790                           ;tmr0.c: 139: {
 10791                           ;tmr0.c: 140: TMR0_InterruptHandler();
 10792  0DE9  0863               	movf	_TMR0_InterruptHandler+1,w
 10793  0DEA  008A               	movwf	10
 10794  0DEB  0862               	movf	_TMR0_InterruptHandler,w
 10795  0DEC  000A               	callw
 10796  0DED  318D               	pagesel	$
 10797  0DEE  0008               	return
 10798  0DEF                     __end_of_TMR0_CallBack:	
 10799                           
 10800                           	psect	text42
 10801  0C9D                     __ptext42:	
 10802 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10803 ;; Defined at:
 10804 ;;		line 148 in file "mcc_generated_files/tmr0.c"
 10805 ;; Parameters:    Size  Location     Type
 10806 ;;		None
 10807 ;; Auto vars:     Size  Location     Type
 10808 ;;		None
 10809 ;; Return value:  Size  Location     Type
 10810 ;;                  1    wreg      void 
 10811 ;; Registers used:
 10812 ;;		None
 10813 ;; Tracked objects:
 10814 ;;		On entry : 0/0
 10815 ;;		On exit  : 0/0
 10816 ;;		Unchanged: 0/0
 10817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10822 ;;Total ram usage:        0 bytes
 10823 ;; Hardware stack levels used:    1
 10824 ;; This function calls:
 10825 ;;		Nothing
 10826 ;; This function is called by:
 10827 ;;		_TMR0_Initialize
 10828 ;;		_TMR0_CallBack
 10829 ;; This function uses a non-reentrant model
 10830 ;;
 10831                           
 10832                           
 10833                           ;psect for function _TMR0_DefaultInterruptHandler
 10834  0C9D                     _TMR0_DefaultInterruptHandler:	
 10835                           
 10836                           ;incstack = 0
 10837                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 10838  0C9D  0008               	return
 10839  0C9E                     __end_of_TMR0_DefaultInterruptHandler:	
 10840                           
 10841                           	psect	text43
 10842  0C9C                     __ptext43:	
 10843 ;; *************** function _PIN_MANAGER_IOC *****************
 10844 ;; Defined at:
 10845 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
 10846 ;; Parameters:    Size  Location     Type
 10847 ;;		None
 10848 ;; Auto vars:     Size  Location     Type
 10849 ;;		None
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      void 
 10852 ;; Registers used:
 10853 ;;		None
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/0
 10856 ;;		On exit  : 0/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;Total ram usage:        0 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_INTERRUPT_InterruptManager
 10869 ;; This function uses a non-reentrant model
 10870 ;;
 10871                           
 10872                           
 10873                           ;psect for function _PIN_MANAGER_IOC
 10874  0C9C                     _PIN_MANAGER_IOC:	
 10875                           
 10876                           ;incstack = 0
 10877                           ; Regs used in _PIN_MANAGER_IOC: []
 10878  0C9C  0008               	return
 10879  0C9D                     __end_of_PIN_MANAGER_IOC:	
 10880                           
 10881                           	psect	text44
 10882  07FB                     __ptext44:	
 10883 ;; *************** function _INT_ISR *****************
 10884 ;; Defined at:
 10885 ;;		line 37 in file "mcc_generated_files/ext_int.c"
 10886 ;; Parameters:    Size  Location     Type
 10887 ;;		None
 10888 ;; Auto vars:     Size  Location     Type
 10889 ;;		None
 10890 ;; Return value:  Size  Location     Type
 10891 ;;                  1    wreg      void 
 10892 ;; Registers used:
 10893 ;;		wreg, status,2, status,0, pclath, cstack
 10894 ;; Tracked objects:
 10895 ;;		On entry : 0/0
 10896 ;;		On exit  : 0/0
 10897 ;;		Unchanged: 0/0
 10898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10903 ;;Total ram usage:        0 bytes
 10904 ;; Hardware stack levels used:    1
 10905 ;; Hardware stack levels required when called:    2
 10906 ;; This function calls:
 10907 ;;		_INT_CallBack
 10908 ;; This function is called by:
 10909 ;;		_INTERRUPT_InterruptManager
 10910 ;; This function uses a non-reentrant model
 10911 ;;
 10912                           
 10913                           
 10914                           ;psect for function _INT_ISR
 10915  07FB                     _INT_ISR:	
 10916                           
 10917                           ;ext_int.c: 39: (INTCONbits.INTF = 0);
 10918                           
 10919                           ;incstack = 0
 10920                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
 10921  07FB  108B               	bcf	11,1	;volatile
 10922                           
 10923                           ;ext_int.c: 42: INT_CallBack();
 10924  07FC  318E  266D         	fcall	_INT_CallBack
 10925  07FE  0008               	return
 10926  07FF                     __end_of_INT_ISR:	
 10927                           
 10928                           	psect	text45
 10929  0E6D                     __ptext45:	
 10930 ;; *************** function _INT_CallBack *****************
 10931 ;; Defined at:
 10932 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;		None
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;		None
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  1    wreg      void 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0, pclath, cstack
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10950 ;;Total ram usage:        1 bytes
 10951 ;; Hardware stack levels used:    1
 10952 ;; Hardware stack levels required when called:    1
 10953 ;; This function calls:
 10954 ;;		Absolute function
 10955 ;;		_INT_DefaultInterruptHandler
 10956 ;; This function is called by:
 10957 ;;		_INT_ISR
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function _INT_CallBack
 10963  0E6D                     _INT_CallBack:	
 10964                           
 10965                           ;ext_int.c: 49: gInterruptFlag = 1;
 10966                           
 10967                           ;incstack = 0
 10968                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
 10969  0E6D  3001               	movlw	1
 10970  0E6E  00F0               	movwf	??_INT_CallBack
 10971  0E6F  0870               	movf	??_INT_CallBack,w
 10972  0E70  0020               	movlb	0	; select bank0
 10973  0E71  00D7               	movwf	_gInterruptFlag	;volatile
 10974                           
 10975                           ;ext_int.c: 50: if(1 == OPTION_REGbits.INTEDG && 1 == PORTAbits.RA2)
 10976  0E72  0021               	movlb	1	; select bank1
 10977  0E73  1F15               	btfss	21,6	;volatile
 10978  0E74  2E7E               	goto	i1l303
 10979  0E75  0020               	movlb	0	; select bank0
 10980  0E76  1D0C               	btfss	12,2	;volatile
 10981  0E77  2E7E               	goto	i1l303
 10982                           
 10983                           ;ext_int.c: 51: {
 10984                           ;ext_int.c: 52: gBoxCntStruct.TimeCntStartFlag = 1;
 10985  0E78  01C1               	clrf	_gBoxCntStruct
 10986  0E79  0AC1               	incf	_gBoxCntStruct,f
 10987                           
 10988                           ;ext_int.c: 53: gBoxCntStruct.TimeCntEndFlag = 0;
 10989  0E7A  01C2               	clrf	_gBoxCntStruct+1
 10990                           
 10991                           ;ext_int.c: 55: (OPTION_REGbits.INTEDG = 0);
 10992  0E7B  0021               	movlb	1	; select bank1
 10993  0E7C  1315               	bcf	21,6	;volatile
 10994                           
 10995                           ;ext_int.c: 56: }
 10996  0E7D  2E89               	goto	i1l1928
 10997  0E7E                     i1l303:	
 10998                           
 10999                           ;ext_int.c: 57: else if(0 == OPTION_REGbits.INTEDG && 0 == PORTAbits.RA2 )
 11000  0E7E  0021               	movlb	1	; select bank1
 11001  0E7F  1B15               	btfsc	21,6	;volatile
 11002  0E80  2E89               	goto	i1l1928
 11003  0E81  0020               	movlb	0	; select bank0
 11004  0E82  190C               	btfsc	12,2	;volatile
 11005  0E83  2E89               	goto	i1l1928
 11006                           
 11007                           ;ext_int.c: 58: {
 11008                           ;ext_int.c: 59: gBoxCntStruct.TimeCntStartFlag = 0;
 11009  0E84  01C1               	clrf	_gBoxCntStruct
 11010                           
 11011                           ;ext_int.c: 60: gBoxCntStruct.TimeCntEndFlag = 1;
 11012  0E85  01C2               	clrf	_gBoxCntStruct+1
 11013  0E86  0AC2               	incf	_gBoxCntStruct+1,f
 11014                           
 11015                           ;ext_int.c: 61: (OPTION_REGbits.INTEDG = 1);
 11016  0E87  0021               	movlb	1	; select bank1
 11017  0E88  1715               	bsf	21,6	;volatile
 11018  0E89                     i1l1928:	
 11019                           
 11020                           ;ext_int.c: 62: }
 11021                           ;ext_int.c: 63: if(INT_InterruptHandler)
 11022  0E89  0020               	movlb	0	; select bank0
 11023  0E8A  0858               	movf	_INT_InterruptHandler,w
 11024  0E8B  0459               	iorwf	_INT_InterruptHandler+1,w
 11025  0E8C  1903               	btfsc	3,2
 11026  0E8D  0008               	return
 11027                           
 11028                           ;ext_int.c: 64: {
 11029                           ;ext_int.c: 65: INT_InterruptHandler();
 11030  0E8E  0859               	movf	_INT_InterruptHandler+1,w
 11031  0E8F  008A               	movwf	10
 11032  0E90  0858               	movf	_INT_InterruptHandler,w
 11033  0E91  000A               	callw
 11034  0E92  318E               	pagesel	$
 11035  0E93  0008               	return
 11036  0E94                     __end_of_INT_CallBack:	
 11037                           
 11038                           	psect	text46
 11039  0C9B                     __ptext46:	
 11040 ;; *************** function _INT_DefaultInterruptHandler *****************
 11041 ;; Defined at:
 11042 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;		None
 11045 ;; Auto vars:     Size  Location     Type
 11046 ;;		None
 11047 ;; Return value:  Size  Location     Type
 11048 ;;                  1    wreg      void 
 11049 ;; Registers used:
 11050 ;;		None
 11051 ;; Tracked objects:
 11052 ;;		On entry : 0/0
 11053 ;;		On exit  : 0/0
 11054 ;;		Unchanged: 0/0
 11055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;Total ram usage:        0 bytes
 11061 ;; Hardware stack levels used:    1
 11062 ;; This function calls:
 11063 ;;		Nothing
 11064 ;; This function is called by:
 11065 ;;		_EXT_INT_Initialize
 11066 ;;		_INT_CallBack
 11067 ;; This function uses a non-reentrant model
 11068 ;;
 11069                           
 11070                           
 11071                           ;psect for function _INT_DefaultInterruptHandler
 11072  0C9B                     _INT_DefaultInterruptHandler:	
 11073                           
 11074                           ;incstack = 0
 11075                           ; Regs used in _INT_DefaultInterruptHandler: []
 11076  0C9B  0008               	return
 11077  0C9C                     __end_of_INT_DefaultInterruptHandler:	
 11078  007E                     btemp	set	126	;btemp
 11079  007E                     int$flags	set	126
 11080  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        27
    BSS         60
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     33      69
    BANK1            80      0      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    _fassert@expr	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[7]), STR_2(CODE[7]), 

    _fassert@file	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), STR_1(CODE[7]), 

    memset@p1	PTR void  size(1) Largest target is 32
		 -> HEFBufferData(BANK1[32]), 

    memset@p	PTR unsigned char  size(1) Largest target is 32
		 -> HEFBufferData(BANK1[32]), 

    HEFLASH_readBlock@buffer	PTR unsigned char  size(1) Largest target is 32
		 -> HEFBufferData(BANK1[32]), 

    HEFLASH_writeBlock@data	PTR unsigned char  size(1) Largest target is 32
		 -> HEFBufferData(BANK1[32]), 

    sp__memset	PTR void  size(1) Largest target is 32
		 -> HEFBufferData(BANK1[32]), 

    Print@str	PTR unsigned char  size(1) Largest target is 16
		 -> display_data_2(BANK1[11]), display_data_1(BANK1[16]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_LCDSendData
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _Print->_LCDSendData
    _LCDInit->_LCDSendData
    _HEFLASH_checkData->___lldiv
    _HEFLASH_checkData->___lwdiv
    _HEFLASH_checkData->_memset
    _HEFLASH_readBlock->_FLASH_read
    _Data_Toseg->___lldiv
    _Data_Toseg->___lwdiv
    ___lwdiv->___lwmod
    ___lldiv->___llmod
    _HEFLASH_writeBlock->_FLASH_erase

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_TMR0_CallBack
    _INT_ISR->_INT_CallBack

Critical Paths under _main in BANK0

    _main->_HEFLASH_checkData
    _Print->_LCDSendData
    _LCDInit->_LCDSendData
    _HEFLASH_checkData->___lldiv
    _Data_Toseg->___lldiv
    ___lwdiv->___lwmod
    ___lldiv->___llmod
    _HEFLASH_writeBlock->_FLASH_write

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   25823
                                             32 BANK0      1     1      0
                         _Data_Toseg
                  _HEFLASH_checkData
                            _LCDInit
                        _LCDSendData
                              _Print
                  _SYSTEM_Initialize
                    _bsp_CounterInit
 ---------------------------------------------------------------------------------
 (1) _bsp_CounterInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      86
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      86
                                              5 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Print                                                2     2      0    2091
                                              2 BANK0      2     2      0
                        _LCDSendData
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1734
                                              2 BANK0      1     1      0
                        _LCDSendData
 ---------------------------------------------------------------------------------
 (2) _LCDSendData                                          5     2      3    1734
                                              3 COMMON     3     0      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _HEFLASH_checkData                                   11    11      0   10646
                                             21 BANK0     11    11      0
                  _HEFLASH_readBlock
                 _HEFLASH_writeBlock
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
                           __fassert
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               7     3      4     324
                                              3 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) __fassert                                             6     0      6     384
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _HEFLASH_readBlock                                    7     5      2     599
                                              0 BANK0      7     5      2
                         _FLASH_read
 ---------------------------------------------------------------------------------
 (3) _FLASH_read                                           2     0      2     214
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Data_Toseg                                           5     5      0    9274
                                             21 BANK0      5     5      0
                 _HEFLASH_writeBlock
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    3928
                                              3 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    2705
                                              5 COMMON     1     1      0
                                              4 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     927
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     674
                                              5 COMMON     1     1      0
                                              8 BANK0     13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _HEFLASH_writeBlock                                   7     5      2    1040
                                              5 BANK0      7     5      2
                        _FLASH_erase
                        _FLASH_write
 ---------------------------------------------------------------------------------
 (3) _FLASH_write                                          6     1      5     473
                                              3 COMMON     1     1      0
                                              0 BANK0      5     0      5
                            __unlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_erase                                          3     1      2     109
                                              3 COMMON     3     1      2
                            __unlock
 ---------------------------------------------------------------------------------
 (4) __unlock                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           1     1      0     432
                                              2 COMMON     1     1      0
                            _INT_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR3_ISR                                             0     0      0     216
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR3_WriteTimer                                      2     0      2     216
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
      _bsp_TimerInterruptISRCallback
 ---------------------------------------------------------------------------------
 (8) _bsp_TimerInterruptISRCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     216
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     216
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (7) _INT_CallBack                                         1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (8) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Data_Toseg
     _HEFLASH_writeBlock
       _FLASH_erase
         __unlock
       _FLASH_write
         __unlock
     ___lldiv
       ___llmod (ARG)
     ___llmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _HEFLASH_checkData
     _HEFLASH_readBlock
       _FLASH_read
     _HEFLASH_writeBlock
       _FLASH_erase
         __unlock
       _FLASH_write
         __unlock
     ___lldiv
       ___llmod (ARG)
     ___llmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     __fassert
     _memset
   _LCDInit
     _LCDSendData
   _LCDSendData
   _Print
     _LCDSendData
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _bsp_CounterInit

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _bsp_TimerInterruptISRCallback *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      8B      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      8B      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 11 15:55:55 2018

                             __CFG_CP$OFF 0000                  __size_of_bsp_CounterInit 001D  
                            ?_LCDSendData 0073                           _timer0ReloadVal 0064  
                             __CFG_LVP$ON 0000                                       l366 068C  
                                     l368 068E                           _timer1ReloadVal 0060  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                         FLASH_read@address 0073  
                         __end_of_LCDInit 07B8                              __CFG_ZCD$OFF 0000  
                                    l2020 0F9F                                      l2006 0F66  
                                    l2030 07C1                                      l2016 0F94  
                                    l2008 0F74                                      l2032 07CF  
                                    l2040 07F2                                      l2036 07E7  
                         _timer3ReloadVal 005C                                      l2414 0F0F  
                                    l2406 0EF1                                      l2430 0EC2  
                                    l2408 0EFD                                      l2432 0ECE  
                                    l2440 0EE3                                      l2600 06F6  
                                    l2418 0F18                                      l2370 0F35  
                                    l2522 008A                                      l2436 0EDA  
                                    l2612 0718                                      l2604 0705  
                                    l2374 0F37                                      l2382 0F50  
                                    l2472 0E2A                                      l2394 0DF4  
                                    l2556 02C7                                      l2582 06D3  
                                    l1960 0FC7                                      l1962 0FEC  
                                    l2594 06E7                                _Data_Toseg 02FA  
                                    STR_1 1000                                      STR_2 1007  
                                    STR_3 1000                                      STR_4 1007  
                                    u1215 0608                                      u1225 061C  
                                    u1235 0631                                      u1405 0F75  
                                    u2125 0EC5                                      u1245 0644  
                                    _LATA 010C                                      _LATB 010D  
                         __end_of_INT_ISR 07FF                                      u1415 0F89  
                                    u2055 0EF4                                      u1255 0658  
                                    _LATC 010E                                      u1425 0F95  
                                    u2145 0ED4                                      u1265 066D  
                                    u2330 0716                                      u2075 0EFE  
                                    u2155 0EDB                                      u1275 0687  
                                    u2260 06F4                                      u1285 0FAE  
                                    u2085 0F08                                      u1455 07C4  
                                    u2095 0F10                                      u2407 0762  
                                    u1385 0F69                                      u2185 04F1  
                                    u2417 0776                                      u2290 0703  
                                    u1475 07DD                                      u2427 078A  
                                    u1485 07E8                                      u2437 0690  
                                    u2447 0699                                      u2367 06BD  
                                    u2457 0061                                      u2377 06DD  
                                    u2387 0E45                                      u2397 074E  
                                    u1995 0F23                __end_of_HEFLASH_writeBlock 1000  
                                    _TMR0 0015                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 069E                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0C9C  
             _INT_DefaultInterruptHandler 0C9B                                      start 0037  
                         _TMR3_Initialize 0D9E           __end_of_INT_SetInterruptHandler 0CA4  
              ??_TMR1_SetInterruptHandler 0075                             __CFG_MCLRE$ON 0000  
                     __size_of_FLASH_read 000F                   __end_of_TMR0_Initialize 0D70  
                           __CFG_PLLEN$ON 0000            ??_TMR0_DefaultInterruptHandler 0070  
          __size_of_OSCILLATOR_Initialize 0007                                     PMCON1 0195  
                                   PMCON2 0196             __end_of_OSCILLATOR_Initialize 0CD7  
                                   ?_main 0070                             __CFG_WDTE$OFF 0000  
                         __end_of___lldiv 0FA8                                     _T1CON 0018  
                         __end_of___llmod 07FB                                     _T3CON 0495  
                         __end_of___lwdiv 0F1D                                     i1l303 0E7E  
                                   i1l162 0010                                     i1l164 0017  
                                   i1l166 001E                                     i1l174 0032  
                                   i1l169 002A                           __end_of___lwmod 0EE8  
                                   i1l435 056A                                     _PMADR 0191  
                                   _PMDAT 0193                                     _TMR1H 0017  
                                   _TMR3H 0494                                     _TMR1L 0016  
                                   _TMR3L 0493                                     _PORTC 000E  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E         __size_of_TMR0_SetInterruptHandler 0006  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0073  
               ?_TMR3_SetInterruptHandler 0073                                     _Print 0E28  
                        __end_of_TMR0_ISR 0CC9                           __end_of__unlock 0CE0  
                        __end_of_TMR1_ISR 0D02                          __end_of_TMR3_ISR 0D0E  
          ??_TMR3_DefaultInterruptHandler 0070                   __end_of_PIN_MANAGER_IOC 0C9D  
                 __end_of_TMR1_Initialize 0D9E                                     pclath 000A  
                  HEFLASH_writeBlock@data 0025                    HEFLASH_writeBlock@radd 0029  
                                   status 0003                                     wtemp0 007E  
                          _gInterruptFlag 0057                           _TMR1_WriteTimer 0D1C  
                         __initialization 0039                              __end_of_main 073F  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                    __size_of_FLASH_erase 0017                                    ??_main 0040  
                   _TMR3_InterruptHandler 005A                      __size_of_FLASH_write 0027  
                               ??_LCDInit 0022                         ??_bsp_CounterInit 0073  
                               ??_INT_ISR 0071                      HEFLASH_readBlock@add 0024  
                                  ?_Print 0022                          ___llmod@dividend 0024  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                               ?_Data_Toseg 0070  
                                  _BORCON 0116                                    _T1GCON 0019  
                                  _T3GCON 0496                   TMR1_WriteTimer@timerVal 0070  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l1720 05C7  
                                  i1l1712 059A                                    i1l1714 05A6  
                                  i1l1706 0579                                    i1l1804 0DE4  
                                  i1l1834 0D26                                    i1l1682 053A  
                 __end_of_TMR3_Initialize 0DB8                                    i1l1694 054F  
                                  i1l1928 0E89                                    i1l1898 0D35  
                                  _INTPPS 0E10                          __end_of__fassert 0CD0  
                                  _OSCCON 0099                     _gTimer0AlarmFlashFlag 007A  
                         _TMR3_WriteTimer 0D2B                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                            __CFG_STVREN$ON 0000  
                      FLASH_write@address 0020                                 ??___lldiv 0075  
                               ??___llmod 0073                                 ??___lwdiv 0075  
                               ??___lwmod 0073                          ?_TMR0_Initialize 0070  
                                  _memset 0DEF                                 ??__unlock 0073  
                           ?_INT_CallBack 0070                      __size_of_LCDSendData 00B5  
                              _gEnterFlag 0077                   HEFLASH_writeBlock@count 0026  
                   __end_of_TMR0_CallBack 0DEF          __size_of_INT_SetInterruptHandler 0006  
                            ??_FLASH_read 0075   INT_SetInterruptHandler@InterruptHandler 0073  
TMR3_SetInterruptHandler@InterruptHandler 0073  TMR1_SetInterruptHandler@InterruptHandler 0073  
TMR0_SetInterruptHandler@InterruptHandler 0073                          ?_PIN_MANAGER_IOC 0070  
                 __end_of_TMR1_WriteTimer 0D2B                             LCDSendData@RS 0073  
                   __end_of_TMR1_CallBack 0CEB                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0D49                   __end_of__initialization 0059  
                  _gTimer0NormalFlashFlag 0078                        ?_SYSTEM_Initialize 0070  
                   __end_of_TMR3_CallBack 0D1C                            __pcstackCOMMON 0070  
                           __end_of_Print 0E49                              __pidataBANK1 0DB8  
                     ??_SYSTEM_Initialize 0076                                 ?_TMR0_ISR 0070  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                               ?_TMR3_ISR 0070                        __end_of_FLASH_read 0D49  
                     __size_of_Data_Toseg 0223                            ??_INT_CallBack 0070  
             __size_of_EXT_INT_Initialize 000B                             __fassert@file 0022  
                           __fassert@line 0020                            _OPTION_REGbits 0095  
                           __fassert@expr 0024                                   ??_Print 0022  
               __end_of_SYSTEM_Initialize 0D5B                   __end_of_TMR3_WriteTimer 0D3A  
                              __pbssBANK0 0041                                __pbssBANK1 00A0  
                        ?_TMR3_Initialize 0070                   HEFLASH_readBlock@buffer 0026  
                   HEFLASH_readBlock@radd 0020                                __pmaintext 069E  
        __end_of_TMR0_SetInterruptHandler 0CAA                        _HEFLASH_writeBlock 0FA8  
        __end_of_TMR3_SetInterruptHandler 0CB6                                ??_TMR0_ISR 0071  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR3_ISR 0072                                __pintentry 0004  
                                 ?_memset 0020                       ?_HEFLASH_writeBlock 0025  
                               ?__fassert 0020                                   _LCDInit 073F  
                         __CFG_WDTCCS$SWC 0000                                   _INT_ISR 07FB  
                                 _OSCTUNE 0098                          ?_TMR1_WriteTimer 0070  
                    ??_HEFLASH_writeBlock 0027                           _bsp_CounterInit 0E0B  
                                 ___lldiv 0F55                                   ___llmod 07B8  
                                 ___lwdiv 0EE8                                   ___lwmod 0EBB  
                         __size_of_memset 001C     __end_of_bsp_TimerInterruptISRCallback 05E9  
  __size_of_bsp_TimerInterruptISRCallback 00CC             _bsp_TimerInterruptISRCallback 051D  
                                 __ptext1 0E0B                                   __ptext2 0D49  
                                 __ptext3 0D9E                                   __ptext4 0CB0  
                                 __ptext5 0D87                                   __ptext6 0CAA  
                                 __ptext7 0D5B                                   __ptext8 0CA4  
                                 __ptext9 0E49                                   __unlock 0CD7  
                              ??__fassert 0073            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0CD0  
                               _T3CONbits 0495         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0073                 ?_TMR1_SetInterruptHandler 0073  
                 _INT_SetInterruptHandler 0C9E                __size_of_SYSTEM_Initialize 0012  
                                 clrloop0 0CB7                              ??_Data_Toseg 0035  
                    end_of_initialization 0059                          ?_TMR3_WriteTimer 0070  
                                 init_ram 0CBC                                   memset@c 0020  
                                 memset@n 0022                                   memset@p 0075  
                                 initloop 0CBD                      __end_of_INT_CallBack 0E94  
                         ___lldiv@divisor 0028                           ___lldiv@counter 0034  
                           ??_FLASH_erase 0075                             ??_FLASH_write 0073  
                      __end_of_Data_Toseg 051D                  _TMR0_SetInterruptHandler 0CA4  
                               _PORTAbits 000C                  _TMR3_SetInterruptHandler 0CB0  
                        __CFG_FOSC$INTOSC 0000                   __end_of_bsp_CounterInit 0E28  
                           ??_LCDSendData 0020                               _gTimer3Flag 0056  
                       __size_of_TMR0_ISR 0007                         __size_of_TMR1_ISR 000C  
                       __size_of_TMR3_ISR 000C                         _HEFLASH_checkData 005D  
                  ?_OSCILLATOR_Initialize 0070                            __end_of_memset 0E0B  
               ??_INT_SetInterruptHandler 0075                     HEFLASH_writeBlock@add 002A  
                     __end_of_FLASH_erase 0D87                        ?_HEFLASH_checkData 0070  
                     start_initialization 0039                       __end_of_FLASH_write 0EBB  
          ?_bsp_TimerInterruptISRCallback 0070                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 0024                       ??_HEFLASH_checkData 0035  
                         ___llmod@divisor 0020                           ___llmod@counter 0074  
                __size_of_PIN_MANAGER_IOC 0001              ?_INT_DefaultInterruptHandler 0070  
                       _HEFLASH_readBlock 0F1D                  __size_of_TMR1_Initialize 0017  
                      ?_HEFLASH_readBlock 0020                    __size_of_TMR0_CallBack 001C  
               __end_of_HEFLASH_checkData 02FA                               __pdataBANK1 00C0  
                                ??_memset 0073                __end_of_EXT_INT_Initialize 0CF6  
                  __size_of_TMR1_CallBack 000B                     _gTimer0NormalFalshCnt 0079  
                               _gExitFlag 0076                       ??_HEFLASH_readBlock 0022  
                                ?_LCDInit 0070                               __pbssCOMMON 0076  
                     __end_of_LCDSendData 069E                                 ___latbits 0002  
                       __size_of__fassert 0007                                  ?_INT_ISR 0070  
                           __pcstackBANK0 0020                    __size_of_TMR3_CallBack 000E  
                   __size_of_INT_CallBack 0027                     _TMR0_InterruptHandler 0062  
                               __pnvBANK0 0058                 __end_of_HEFLASH_readBlock 0F55  
                        ?_bsp_CounterInit 0070                          ___lwdiv@dividend 0026  
                  _PIN_MANAGER_Initialize 0E49                    HEFLASH_readBlock@count 0021  
           ??_INT_DefaultInterruptHandler 0070                  __size_of_TMR3_Initialize 001A  
        __end_of_TMR1_SetInterruptHandler 0CB0                                  ?___lldiv 0028  
                                ?___llmod 0020                                  ?___lwdiv 0024  
                                ?___lwmod 0020                               _FLASH_erase 0D70  
                             _FLASH_write 0E94              ??_INTERRUPT_InterruptManager 0072  
                                ?__unlock 0070                              _INT_CallBack 0E6D  
                          __size_of_Print 0021                          ___lwdiv@quotient 0029  
                           _TMR0_CallBack 0DD3                             _gBoxCntStruct 0041  
                           _TMR1_CallBack 0CE0                         ??_TMR0_Initialize 0075  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E               __size_of_HEFLASH_writeBlock 0058  
                               clear_ram0 0CB6                                  _PIE1bits 0090  
                                _PIE5bits 0094                  __size_of_TMR1_WriteTimer 000F  
     __size_of_INTERRUPT_InterruptManager 0033                ??_TMR0_SetInterruptHandler 0075  
                                _PIR1bits 0010                ??_TMR3_SetInterruptHandler 0075  
                           _TMR3_CallBack 0D0E                                  _PIR5bits 0014  
                         FLASH_erase@temp 0075                      __CFG_WDTCPS$WDTCPS1F 0000  
                                _TMR0_ISR 0CC2                                  _TMR1_ISR 0CF6  
                                _TMR3_ISR 0D02                __size_of_HEFLASH_checkData 029D  
                       ??_PIN_MANAGER_IOC 0070                             _HEFBufferData 00A0  
                             _LCDSendData 05E9                         ??_TMR1_Initialize 0075  
    __size_of_INT_DefaultInterruptHandler 0001                          __size_of_LCDInit 0079  
                        __size_of_INT_ISR 0004                            ?_TMR0_CallBack 0070  
                          ?_TMR1_CallBack 0070                __size_of_HEFLASH_readBlock 0038  
                          ?_TMR3_CallBack 0070                  __size_of_TMR3_WriteTimer 000F  
                                Print@str 0023                          FLASH_write@latch 0024  
                 ??_OSCILLATOR_Initialize 0073                          __size_of___lldiv 0053  
                        __size_of___llmod 0043                          __size_of___lwdiv 0035  
                        __size_of___lwmod 002D                         ??_TMR3_Initialize 0075  
                _TMR1_SetInterruptHandler 0CAA                                  __fassert 0CC9  
                   _TMR1_InterruptHandler 005E                          __size_of__unlock 0009  
                         ___lwdiv@divisor 0024                           ___lwdiv@counter 0028  
                                __ptext10 0CD0                                  __ptext11 0CEB  
                                __ptext20 0D3A                                  __ptext12 0C9E  
                                __ptext21 02FA                                  __ptext13 0E28  
                              _T1GCONbits 0019                                  __ptext22 0EBB  
                                __ptext14 073F                                  __ptext31 0D02  
                                __ptext23 0EE8                                  __ptext15 05E9  
                                __ptext40 0CC2                                  __ptext32 0D2B  
                                __ptext24 07B8                                  __ptext16 005D  
                                __ptext41 0DD3                                  __ptext33 0D0E  
                                __ptext25 0F55                                  __ptext17 0DEF  
                                __ptext42 0C9D                                  __ptext34 051D  
                                __ptext26 0FA8                                  __ptext18 0CC9  
                                __ptext43 0C9C                                  __ptext35 07FF  
                                __ptext27 0E94                                  __ptext19 0F1D  
                                __ptext44 07FB                                  __ptext36 0CF6  
                                __ptext28 0D70                                  __ptext45 0E6D  
                                __ptext37 0D1C                                  __ptext29 0CD7  
                                __ptext46 0C9B                                  __ptext38 0CE0  
                                __ptext39 0003                                _FLASH_read 0D3A  
                      FLASH_erase@address 0073                                _T3GCONbits 0496  
                 TMR3_WriteTimer@timerVal 0070                        HEFLASH_checkData@r 003E  
                           __size_of_main 00A1      __end_of_TMR0_DefaultInterruptHandler 0C9E  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0C9D  
         ??_bsp_TimerInterruptISRCallback 0070                      __CFG_WDTCWS$WDTCWSSW 0000  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0037  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
    __end_of_TMR3_DefaultInterruptHandler 0800     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 07FF                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0070                      _INT_InterruptHandler 0058  
                         FLASH_write@data 0022                                  memset@p1 0074  
                         FLASH_write@temp 0073                           ??_TMR1_CallBack 0070  
                      _EXT_INT_Initialize 0CEB                                  intlevel1 0000  
                              _PMCON1bits 0195                          ___lwmod@dividend 0022  
                        ___lldiv@dividend 002C                   ?_PIN_MANAGER_Initialize 0070  
                         ??_TMR3_CallBack 0070                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                            ?_FLASH_erase 0073                  ?_INT_SetInterruptHandler 0073  
                            ?_FLASH_write 0020                         ??_TMR3_WriteTimer 0072  
                           __pstringtext1 1000                             __pstringtext2 1007  
                           __pstringtext3 0000                      ??_EXT_INT_Initialize 0075  
                              _OPTION_REG 0095             ?_TMR3_DefaultInterruptHandler 0070  
                          _display_data_1 00C0                            _display_data_2 00D0  
                        ___lldiv@quotient 0030                           ___lwmod@divisor 0020  
                         _TMR0_Initialize 0D5B                           ___lwmod@counter 0074  
                        LCDSendData@value 0075                               ?_FLASH_read 0073  
          __end_of_PIN_MANAGER_Initialize 0E6D                           _PIN_MANAGER_IOC 0C9C  
                         _TMR1_Initialize 0D87  
