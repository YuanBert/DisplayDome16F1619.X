

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 11 13:29:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 1.45
    57                           ; Generated 16/11/2017 GMT
    58                           ; 
    59                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1619 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  0111                     	;# 
   147  0112                     	;# 
   148  0113                     	;# 
   149  0114                     	;# 
   150  0115                     	;# 
   151  0116                     	;# 
   152  0117                     	;# 
   153  0118                     	;# 
   154  0119                     	;# 
   155  011C                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  018E                     	;# 
   159  0191                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  0193                     	;# 
   163  0193                     	;# 
   164  0194                     	;# 
   165  0195                     	;# 
   166  0196                     	;# 
   167  0197                     	;# 
   168  0199                     	;# 
   169  0199                     	;# 
   170  0199                     	;# 
   171  019A                     	;# 
   172  019A                     	;# 
   173  019A                     	;# 
   174  019B                     	;# 
   175  019B                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019C                     	;# 
   180  019C                     	;# 
   181  019C                     	;# 
   182  019D                     	;# 
   183  019D                     	;# 
   184  019D                     	;# 
   185  019E                     	;# 
   186  019E                     	;# 
   187  019E                     	;# 
   188  019F                     	;# 
   189  019F                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  020C                     	;# 
   194  020D                     	;# 
   195  020E                     	;# 
   196  0211                     	;# 
   197  0211                     	;# 
   198  0212                     	;# 
   199  0212                     	;# 
   200  0213                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0214                     	;# 
   204  0215                     	;# 
   205  0215                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0216                     	;# 
   209  0216                     	;# 
   210  0217                     	;# 
   211  0217                     	;# 
   212  028C                     	;# 
   213  028D                     	;# 
   214  028E                     	;# 
   215  0291                     	;# 
   216  0291                     	;# 
   217  0292                     	;# 
   218  0293                     	;# 
   219  0294                     	;# 
   220  0298                     	;# 
   221  0298                     	;# 
   222  0299                     	;# 
   223  029A                     	;# 
   224  029B                     	;# 
   225  029E                     	;# 
   226  030C                     	;# 
   227  030D                     	;# 
   228  030E                     	;# 
   229  038C                     	;# 
   230  038D                     	;# 
   231  038E                     	;# 
   232  0391                     	;# 
   233  0392                     	;# 
   234  0393                     	;# 
   235  0394                     	;# 
   236  0395                     	;# 
   237  0396                     	;# 
   238  0397                     	;# 
   239  0398                     	;# 
   240  0399                     	;# 
   241  040E                     	;# 
   242  0413                     	;# 
   243  0413                     	;# 
   244  0414                     	;# 
   245  0414                     	;# 
   246  0415                     	;# 
   247  0416                     	;# 
   248  0417                     	;# 
   249  0418                     	;# 
   250  041A                     	;# 
   251  041A                     	;# 
   252  041B                     	;# 
   253  041B                     	;# 
   254  041C                     	;# 
   255  041D                     	;# 
   256  041E                     	;# 
   257  041F                     	;# 
   258  0493                     	;# 
   259  0494                     	;# 
   260  0495                     	;# 
   261  0496                     	;# 
   262  049A                     	;# 
   263  049B                     	;# 
   264  049C                     	;# 
   265  049D                     	;# 
   266  058C                     	;# 
   267  058C                     	;# 
   268  058D                     	;# 
   269  058E                     	;# 
   270  058E                     	;# 
   271  058F                     	;# 
   272  0590                     	;# 
   273  0590                     	;# 
   274  0591                     	;# 
   275  0592                     	;# 
   276  0592                     	;# 
   277  0593                     	;# 
   278  0594                     	;# 
   279  0594                     	;# 
   280  0595                     	;# 
   281  0596                     	;# 
   282  0596                     	;# 
   283  0597                     	;# 
   284  0598                     	;# 
   285  0599                     	;# 
   286  059A                     	;# 
   287  059B                     	;# 
   288  059B                     	;# 
   289  059C                     	;# 
   290  059D                     	;# 
   291  060C                     	;# 
   292  060C                     	;# 
   293  060D                     	;# 
   294  060E                     	;# 
   295  060F                     	;# 
   296  060F                     	;# 
   297  0610                     	;# 
   298  0611                     	;# 
   299  0612                     	;# 
   300  0613                     	;# 
   301  0614                     	;# 
   302  0617                     	;# 
   303  0618                     	;# 
   304  0619                     	;# 
   305  061A                     	;# 
   306  061B                     	;# 
   307  061C                     	;# 
   308  0691                     	;# 
   309  0692                     	;# 
   310  0693                     	;# 
   311  0694                     	;# 
   312  0695                     	;# 
   313  0696                     	;# 
   314  0697                     	;# 
   315  0699                     	;# 
   316  069A                     	;# 
   317  0711                     	;# 
   318  0712                     	;# 
   319  0713                     	;# 
   320  0714                     	;# 
   321  0715                     	;# 
   322  0718                     	;# 
   323  0718                     	;# 
   324  0719                     	;# 
   325  071A                     	;# 
   326  071A                     	;# 
   327  071B                     	;# 
   328  071C                     	;# 
   329  071D                     	;# 
   330  0791                     	;# 
   331  0791                     	;# 
   332  0792                     	;# 
   333  0793                     	;# 
   334  0793                     	;# 
   335  0794                     	;# 
   336  0795                     	;# 
   337  0795                     	;# 
   338  0796                     	;# 
   339  0797                     	;# 
   340  0797                     	;# 
   341  0798                     	;# 
   342  0799                     	;# 
   343  079A                     	;# 
   344  080C                     	;# 
   345  080C                     	;# 
   346  080D                     	;# 
   347  080E                     	;# 
   348  080E                     	;# 
   349  080F                     	;# 
   350  0810                     	;# 
   351  0810                     	;# 
   352  0811                     	;# 
   353  0812                     	;# 
   354  0812                     	;# 
   355  0813                     	;# 
   356  0814                     	;# 
   357  0815                     	;# 
   358  0816                     	;# 
   359  0817                     	;# 
   360  0818                     	;# 
   361  0819                     	;# 
   362  081A                     	;# 
   363  081A                     	;# 
   364  081B                     	;# 
   365  081C                     	;# 
   366  081C                     	;# 
   367  081D                     	;# 
   368  088C                     	;# 
   369  088D                     	;# 
   370  088E                     	;# 
   371  088F                     	;# 
   372  088F                     	;# 
   373  0890                     	;# 
   374  0891                     	;# 
   375  0892                     	;# 
   376  0893                     	;# 
   377  0893                     	;# 
   378  0894                     	;# 
   379  0895                     	;# 
   380  0896                     	;# 
   381  0897                     	;# 
   382  0897                     	;# 
   383  0898                     	;# 
   384  0899                     	;# 
   385  0D8C                     	;# 
   386  0D8C                     	;# 
   387  0D8D                     	;# 
   388  0D8E                     	;# 
   389  0D8F                     	;# 
   390  0D8F                     	;# 
   391  0D90                     	;# 
   392  0D91                     	;# 
   393  0D92                     	;# 
   394  0D92                     	;# 
   395  0D93                     	;# 
   396  0D94                     	;# 
   397  0D95                     	;# 
   398  0D95                     	;# 
   399  0D96                     	;# 
   400  0D97                     	;# 
   401  0D98                     	;# 
   402  0D99                     	;# 
   403  0D9A                     	;# 
   404  0D9B                     	;# 
   405  0D9C                     	;# 
   406  0D9D                     	;# 
   407  0D9E                     	;# 
   408  0D9E                     	;# 
   409  0D9F                     	;# 
   410  0DA0                     	;# 
   411  0DA1                     	;# 
   412  0DA1                     	;# 
   413  0DA2                     	;# 
   414  0DA3                     	;# 
   415  0DA4                     	;# 
   416  0DA4                     	;# 
   417  0DA5                     	;# 
   418  0DA6                     	;# 
   419  0DA7                     	;# 
   420  0DA7                     	;# 
   421  0DA8                     	;# 
   422  0DA9                     	;# 
   423  0DAA                     	;# 
   424  0DAB                     	;# 
   425  0DAC                     	;# 
   426  0DAD                     	;# 
   427  0DAE                     	;# 
   428  0DAF                     	;# 
   429  0E0F                     	;# 
   430  0E10                     	;# 
   431  0E11                     	;# 
   432  0E12                     	;# 
   433  0E13                     	;# 
   434  0E14                     	;# 
   435  0E15                     	;# 
   436  0E16                     	;# 
   437  0E17                     	;# 
   438  0E18                     	;# 
   439  0E19                     	;# 
   440  0E1A                     	;# 
   441  0E1B                     	;# 
   442  0E1C                     	;# 
   443  0E1D                     	;# 
   444  0E1E                     	;# 
   445  0E1F                     	;# 
   446  0E20                     	;# 
   447  0E21                     	;# 
   448  0E22                     	;# 
   449  0E23                     	;# 
   450  0E24                     	;# 
   451  0E25                     	;# 
   452  0E26                     	;# 
   453  0E27                     	;# 
   454  0E28                     	;# 
   455  0E29                     	;# 
   456  0E2A                     	;# 
   457  0E2B                     	;# 
   458  0E2C                     	;# 
   459  0E2D                     	;# 
   460  0E2E                     	;# 
   461  0E90                     	;# 
   462  0E91                     	;# 
   463  0E92                     	;# 
   464  0E94                     	;# 
   465  0E95                     	;# 
   466  0E9C                     	;# 
   467  0E9D                     	;# 
   468  0E9E                     	;# 
   469  0E9F                     	;# 
   470  0EA0                     	;# 
   471  0EA1                     	;# 
   472  0EA2                     	;# 
   473  0EA3                     	;# 
   474  0EA4                     	;# 
   475  0EA5                     	;# 
   476  0EA6                     	;# 
   477  0EA7                     	;# 
   478  0F0F                     	;# 
   479  0F10                     	;# 
   480  0F11                     	;# 
   481  0F12                     	;# 
   482  0F13                     	;# 
   483  0F14                     	;# 
   484  0F15                     	;# 
   485  0F16                     	;# 
   486  0F17                     	;# 
   487  0F18                     	;# 
   488  0F19                     	;# 
   489  0F1A                     	;# 
   490  0F1B                     	;# 
   491  0F1C                     	;# 
   492  0F1D                     	;# 
   493  0F1E                     	;# 
   494  0F1F                     	;# 
   495  0F20                     	;# 
   496  0F21                     	;# 
   497  0F22                     	;# 
   498  0F23                     	;# 
   499  0F24                     	;# 
   500  0F25                     	;# 
   501  0F26                     	;# 
   502  0F27                     	;# 
   503  0F28                     	;# 
   504  0F29                     	;# 
   505  0F2A                     	;# 
   506  0F2B                     	;# 
   507  0F2C                     	;# 
   508  0F2D                     	;# 
   509  0F2E                     	;# 
   510  0F2F                     	;# 
   511  0F30                     	;# 
   512  0F31                     	;# 
   513  0F32                     	;# 
   514  0F33                     	;# 
   515  0F34                     	;# 
   516  0F35                     	;# 
   517  0F36                     	;# 
   518  0F37                     	;# 
   519  0FE4                     	;# 
   520  0FE5                     	;# 
   521  0FE6                     	;# 
   522  0FE7                     	;# 
   523  0FE8                     	;# 
   524  0FE9                     	;# 
   525  0FEA                     	;# 
   526  0FEB                     	;# 
   527  0FED                     	;# 
   528  0FEE                     	;# 
   529  0FEF                     	;# 
   530  0000                     	;# 
   531  0001                     	;# 
   532  0002                     	;# 
   533  0003                     	;# 
   534  0004                     	;# 
   535  0005                     	;# 
   536  0006                     	;# 
   537  0007                     	;# 
   538  0008                     	;# 
   539  0009                     	;# 
   540  000A                     	;# 
   541  000B                     	;# 
   542  000C                     	;# 
   543  000D                     	;# 
   544  000E                     	;# 
   545  0010                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0013                     	;# 
   549  0014                     	;# 
   550  0015                     	;# 
   551  0016                     	;# 
   552  0016                     	;# 
   553  0017                     	;# 
   554  0018                     	;# 
   555  0019                     	;# 
   556  001A                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  008C                     	;# 
   565  008D                     	;# 
   566  008E                     	;# 
   567  0090                     	;# 
   568  0091                     	;# 
   569  0092                     	;# 
   570  0093                     	;# 
   571  0094                     	;# 
   572  0095                     	;# 
   573  0096                     	;# 
   574  0098                     	;# 
   575  0099                     	;# 
   576  009A                     	;# 
   577  009B                     	;# 
   578  009B                     	;# 
   579  009C                     	;# 
   580  009D                     	;# 
   581  009E                     	;# 
   582  009F                     	;# 
   583  010C                     	;# 
   584  010D                     	;# 
   585  010E                     	;# 
   586  0111                     	;# 
   587  0112                     	;# 
   588  0113                     	;# 
   589  0114                     	;# 
   590  0115                     	;# 
   591  0116                     	;# 
   592  0117                     	;# 
   593  0118                     	;# 
   594  0119                     	;# 
   595  011C                     	;# 
   596  018C                     	;# 
   597  018D                     	;# 
   598  018E                     	;# 
   599  0191                     	;# 
   600  0191                     	;# 
   601  0192                     	;# 
   602  0193                     	;# 
   603  0193                     	;# 
   604  0194                     	;# 
   605  0195                     	;# 
   606  0196                     	;# 
   607  0197                     	;# 
   608  0199                     	;# 
   609  0199                     	;# 
   610  0199                     	;# 
   611  019A                     	;# 
   612  019A                     	;# 
   613  019A                     	;# 
   614  019B                     	;# 
   615  019B                     	;# 
   616  019B                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019C                     	;# 
   620  019C                     	;# 
   621  019C                     	;# 
   622  019D                     	;# 
   623  019D                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019E                     	;# 
   627  019E                     	;# 
   628  019F                     	;# 
   629  019F                     	;# 
   630  019F                     	;# 
   631  019F                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020D                     	;# 
   635  020E                     	;# 
   636  0211                     	;# 
   637  0211                     	;# 
   638  0212                     	;# 
   639  0212                     	;# 
   640  0213                     	;# 
   641  0213                     	;# 
   642  0214                     	;# 
   643  0214                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0215                     	;# 
   647  0215                     	;# 
   648  0216                     	;# 
   649  0216                     	;# 
   650  0217                     	;# 
   651  0217                     	;# 
   652  028C                     	;# 
   653  028D                     	;# 
   654  028E                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0298                     	;# 
   661  0298                     	;# 
   662  0299                     	;# 
   663  029A                     	;# 
   664  029B                     	;# 
   665  029E                     	;# 
   666  030C                     	;# 
   667  030D                     	;# 
   668  030E                     	;# 
   669  038C                     	;# 
   670  038D                     	;# 
   671  038E                     	;# 
   672  0391                     	;# 
   673  0392                     	;# 
   674  0393                     	;# 
   675  0394                     	;# 
   676  0395                     	;# 
   677  0396                     	;# 
   678  0397                     	;# 
   679  0398                     	;# 
   680  0399                     	;# 
   681  040E                     	;# 
   682  0413                     	;# 
   683  0413                     	;# 
   684  0414                     	;# 
   685  0414                     	;# 
   686  0415                     	;# 
   687  0416                     	;# 
   688  0417                     	;# 
   689  0418                     	;# 
   690  041A                     	;# 
   691  041A                     	;# 
   692  041B                     	;# 
   693  041B                     	;# 
   694  041C                     	;# 
   695  041D                     	;# 
   696  041E                     	;# 
   697  041F                     	;# 
   698  0493                     	;# 
   699  0494                     	;# 
   700  0495                     	;# 
   701  0496                     	;# 
   702  049A                     	;# 
   703  049B                     	;# 
   704  049C                     	;# 
   705  049D                     	;# 
   706  058C                     	;# 
   707  058C                     	;# 
   708  058D                     	;# 
   709  058E                     	;# 
   710  058E                     	;# 
   711  058F                     	;# 
   712  0590                     	;# 
   713  0590                     	;# 
   714  0591                     	;# 
   715  0592                     	;# 
   716  0592                     	;# 
   717  0593                     	;# 
   718  0594                     	;# 
   719  0594                     	;# 
   720  0595                     	;# 
   721  0596                     	;# 
   722  0596                     	;# 
   723  0597                     	;# 
   724  0598                     	;# 
   725  0599                     	;# 
   726  059A                     	;# 
   727  059B                     	;# 
   728  059B                     	;# 
   729  059C                     	;# 
   730  059D                     	;# 
   731  060C                     	;# 
   732  060C                     	;# 
   733  060D                     	;# 
   734  060E                     	;# 
   735  060F                     	;# 
   736  060F                     	;# 
   737  0610                     	;# 
   738  0611                     	;# 
   739  0612                     	;# 
   740  0613                     	;# 
   741  0614                     	;# 
   742  0617                     	;# 
   743  0618                     	;# 
   744  0619                     	;# 
   745  061A                     	;# 
   746  061B                     	;# 
   747  061C                     	;# 
   748  0691                     	;# 
   749  0692                     	;# 
   750  0693                     	;# 
   751  0694                     	;# 
   752  0695                     	;# 
   753  0696                     	;# 
   754  0697                     	;# 
   755  0699                     	;# 
   756  069A                     	;# 
   757  0711                     	;# 
   758  0712                     	;# 
   759  0713                     	;# 
   760  0714                     	;# 
   761  0715                     	;# 
   762  0718                     	;# 
   763  0718                     	;# 
   764  0719                     	;# 
   765  071A                     	;# 
   766  071A                     	;# 
   767  071B                     	;# 
   768  071C                     	;# 
   769  071D                     	;# 
   770  0791                     	;# 
   771  0791                     	;# 
   772  0792                     	;# 
   773  0793                     	;# 
   774  0793                     	;# 
   775  0794                     	;# 
   776  0795                     	;# 
   777  0795                     	;# 
   778  0796                     	;# 
   779  0797                     	;# 
   780  0797                     	;# 
   781  0798                     	;# 
   782  0799                     	;# 
   783  079A                     	;# 
   784  080C                     	;# 
   785  080C                     	;# 
   786  080D                     	;# 
   787  080E                     	;# 
   788  080E                     	;# 
   789  080F                     	;# 
   790  0810                     	;# 
   791  0810                     	;# 
   792  0811                     	;# 
   793  0812                     	;# 
   794  0812                     	;# 
   795  0813                     	;# 
   796  0814                     	;# 
   797  0815                     	;# 
   798  0816                     	;# 
   799  0817                     	;# 
   800  0818                     	;# 
   801  0819                     	;# 
   802  081A                     	;# 
   803  081A                     	;# 
   804  081B                     	;# 
   805  081C                     	;# 
   806  081C                     	;# 
   807  081D                     	;# 
   808  088C                     	;# 
   809  088D                     	;# 
   810  088E                     	;# 
   811  088F                     	;# 
   812  088F                     	;# 
   813  0890                     	;# 
   814  0891                     	;# 
   815  0892                     	;# 
   816  0893                     	;# 
   817  0893                     	;# 
   818  0894                     	;# 
   819  0895                     	;# 
   820  0896                     	;# 
   821  0897                     	;# 
   822  0897                     	;# 
   823  0898                     	;# 
   824  0899                     	;# 
   825  0D8C                     	;# 
   826  0D8C                     	;# 
   827  0D8D                     	;# 
   828  0D8E                     	;# 
   829  0D8F                     	;# 
   830  0D8F                     	;# 
   831  0D90                     	;# 
   832  0D91                     	;# 
   833  0D92                     	;# 
   834  0D92                     	;# 
   835  0D93                     	;# 
   836  0D94                     	;# 
   837  0D95                     	;# 
   838  0D95                     	;# 
   839  0D96                     	;# 
   840  0D97                     	;# 
   841  0D98                     	;# 
   842  0D99                     	;# 
   843  0D9A                     	;# 
   844  0D9B                     	;# 
   845  0D9C                     	;# 
   846  0D9D                     	;# 
   847  0D9E                     	;# 
   848  0D9E                     	;# 
   849  0D9F                     	;# 
   850  0DA0                     	;# 
   851  0DA1                     	;# 
   852  0DA1                     	;# 
   853  0DA2                     	;# 
   854  0DA3                     	;# 
   855  0DA4                     	;# 
   856  0DA4                     	;# 
   857  0DA5                     	;# 
   858  0DA6                     	;# 
   859  0DA7                     	;# 
   860  0DA7                     	;# 
   861  0DA8                     	;# 
   862  0DA9                     	;# 
   863  0DAA                     	;# 
   864  0DAB                     	;# 
   865  0DAC                     	;# 
   866  0DAD                     	;# 
   867  0DAE                     	;# 
   868  0DAF                     	;# 
   869  0E0F                     	;# 
   870  0E10                     	;# 
   871  0E11                     	;# 
   872  0E12                     	;# 
   873  0E13                     	;# 
   874  0E14                     	;# 
   875  0E15                     	;# 
   876  0E16                     	;# 
   877  0E17                     	;# 
   878  0E18                     	;# 
   879  0E19                     	;# 
   880  0E1A                     	;# 
   881  0E1B                     	;# 
   882  0E1C                     	;# 
   883  0E1D                     	;# 
   884  0E1E                     	;# 
   885  0E1F                     	;# 
   886  0E20                     	;# 
   887  0E21                     	;# 
   888  0E22                     	;# 
   889  0E23                     	;# 
   890  0E24                     	;# 
   891  0E25                     	;# 
   892  0E26                     	;# 
   893  0E27                     	;# 
   894  0E28                     	;# 
   895  0E29                     	;# 
   896  0E2A                     	;# 
   897  0E2B                     	;# 
   898  0E2C                     	;# 
   899  0E2D                     	;# 
   900  0E2E                     	;# 
   901  0E90                     	;# 
   902  0E91                     	;# 
   903  0E92                     	;# 
   904  0E94                     	;# 
   905  0E95                     	;# 
   906  0E9C                     	;# 
   907  0E9D                     	;# 
   908  0E9E                     	;# 
   909  0E9F                     	;# 
   910  0EA0                     	;# 
   911  0EA1                     	;# 
   912  0EA2                     	;# 
   913  0EA3                     	;# 
   914  0EA4                     	;# 
   915  0EA5                     	;# 
   916  0EA6                     	;# 
   917  0EA7                     	;# 
   918  0F0F                     	;# 
   919  0F10                     	;# 
   920  0F11                     	;# 
   921  0F12                     	;# 
   922  0F13                     	;# 
   923  0F14                     	;# 
   924  0F15                     	;# 
   925  0F16                     	;# 
   926  0F17                     	;# 
   927  0F18                     	;# 
   928  0F19                     	;# 
   929  0F1A                     	;# 
   930  0F1B                     	;# 
   931  0F1C                     	;# 
   932  0F1D                     	;# 
   933  0F1E                     	;# 
   934  0F1F                     	;# 
   935  0F20                     	;# 
   936  0F21                     	;# 
   937  0F22                     	;# 
   938  0F23                     	;# 
   939  0F24                     	;# 
   940  0F25                     	;# 
   941  0F26                     	;# 
   942  0F27                     	;# 
   943  0F28                     	;# 
   944  0F29                     	;# 
   945  0F2A                     	;# 
   946  0F2B                     	;# 
   947  0F2C                     	;# 
   948  0F2D                     	;# 
   949  0F2E                     	;# 
   950  0F2F                     	;# 
   951  0F30                     	;# 
   952  0F31                     	;# 
   953  0F32                     	;# 
   954  0F33                     	;# 
   955  0F34                     	;# 
   956  0F35                     	;# 
   957  0F36                     	;# 
   958  0F37                     	;# 
   959  0FE4                     	;# 
   960  0FE5                     	;# 
   961  0FE6                     	;# 
   962  0FE7                     	;# 
   963  0FE8                     	;# 
   964  0FE9                     	;# 
   965  0FEA                     	;# 
   966  0FEB                     	;# 
   967  0FED                     	;# 
   968  0FEE                     	;# 
   969  0FEF                     	;# 
   970  0000                     	;# 
   971  0001                     	;# 
   972  0002                     	;# 
   973  0003                     	;# 
   974  0004                     	;# 
   975  0005                     	;# 
   976  0006                     	;# 
   977  0007                     	;# 
   978  0008                     	;# 
   979  0009                     	;# 
   980  000A                     	;# 
   981  000B                     	;# 
   982  000C                     	;# 
   983  000D                     	;# 
   984  000E                     	;# 
   985  0010                     	;# 
   986  0011                     	;# 
   987  0012                     	;# 
   988  0013                     	;# 
   989  0014                     	;# 
   990  0015                     	;# 
   991  0016                     	;# 
   992  0016                     	;# 
   993  0017                     	;# 
   994  0018                     	;# 
   995  0019                     	;# 
   996  001A                     	;# 
   997  001A                     	;# 
   998  001B                     	;# 
   999  001B                     	;# 
  1000  001C                     	;# 
  1001  001D                     	;# 
  1002  001E                     	;# 
  1003  001F                     	;# 
  1004  008C                     	;# 
  1005  008D                     	;# 
  1006  008E                     	;# 
  1007  0090                     	;# 
  1008  0091                     	;# 
  1009  0092                     	;# 
  1010  0093                     	;# 
  1011  0094                     	;# 
  1012  0095                     	;# 
  1013  0096                     	;# 
  1014  0098                     	;# 
  1015  0099                     	;# 
  1016  009A                     	;# 
  1017  009B                     	;# 
  1018  009B                     	;# 
  1019  009C                     	;# 
  1020  009D                     	;# 
  1021  009E                     	;# 
  1022  009F                     	;# 
  1023  010C                     	;# 
  1024  010D                     	;# 
  1025  010E                     	;# 
  1026  0111                     	;# 
  1027  0112                     	;# 
  1028  0113                     	;# 
  1029  0114                     	;# 
  1030  0115                     	;# 
  1031  0116                     	;# 
  1032  0117                     	;# 
  1033  0118                     	;# 
  1034  0119                     	;# 
  1035  011C                     	;# 
  1036  018C                     	;# 
  1037  018D                     	;# 
  1038  018E                     	;# 
  1039  0191                     	;# 
  1040  0191                     	;# 
  1041  0192                     	;# 
  1042  0193                     	;# 
  1043  0193                     	;# 
  1044  0194                     	;# 
  1045  0195                     	;# 
  1046  0196                     	;# 
  1047  0197                     	;# 
  1048  0199                     	;# 
  1049  0199                     	;# 
  1050  0199                     	;# 
  1051  019A                     	;# 
  1052  019A                     	;# 
  1053  019A                     	;# 
  1054  019B                     	;# 
  1055  019B                     	;# 
  1056  019B                     	;# 
  1057  019B                     	;# 
  1058  019B                     	;# 
  1059  019C                     	;# 
  1060  019C                     	;# 
  1061  019C                     	;# 
  1062  019D                     	;# 
  1063  019D                     	;# 
  1064  019D                     	;# 
  1065  019E                     	;# 
  1066  019E                     	;# 
  1067  019E                     	;# 
  1068  019F                     	;# 
  1069  019F                     	;# 
  1070  019F                     	;# 
  1071  019F                     	;# 
  1072  019F                     	;# 
  1073  020C                     	;# 
  1074  020D                     	;# 
  1075  020E                     	;# 
  1076  0211                     	;# 
  1077  0211                     	;# 
  1078  0212                     	;# 
  1079  0212                     	;# 
  1080  0213                     	;# 
  1081  0213                     	;# 
  1082  0214                     	;# 
  1083  0214                     	;# 
  1084  0215                     	;# 
  1085  0215                     	;# 
  1086  0215                     	;# 
  1087  0215                     	;# 
  1088  0216                     	;# 
  1089  0216                     	;# 
  1090  0217                     	;# 
  1091  0217                     	;# 
  1092  028C                     	;# 
  1093  028D                     	;# 
  1094  028E                     	;# 
  1095  0291                     	;# 
  1096  0291                     	;# 
  1097  0292                     	;# 
  1098  0293                     	;# 
  1099  0294                     	;# 
  1100  0298                     	;# 
  1101  0298                     	;# 
  1102  0299                     	;# 
  1103  029A                     	;# 
  1104  029B                     	;# 
  1105  029E                     	;# 
  1106  030C                     	;# 
  1107  030D                     	;# 
  1108  030E                     	;# 
  1109  038C                     	;# 
  1110  038D                     	;# 
  1111  038E                     	;# 
  1112  0391                     	;# 
  1113  0392                     	;# 
  1114  0393                     	;# 
  1115  0394                     	;# 
  1116  0395                     	;# 
  1117  0396                     	;# 
  1118  0397                     	;# 
  1119  0398                     	;# 
  1120  0399                     	;# 
  1121  040E                     	;# 
  1122  0413                     	;# 
  1123  0413                     	;# 
  1124  0414                     	;# 
  1125  0414                     	;# 
  1126  0415                     	;# 
  1127  0416                     	;# 
  1128  0417                     	;# 
  1129  0418                     	;# 
  1130  041A                     	;# 
  1131  041A                     	;# 
  1132  041B                     	;# 
  1133  041B                     	;# 
  1134  041C                     	;# 
  1135  041D                     	;# 
  1136  041E                     	;# 
  1137  041F                     	;# 
  1138  0493                     	;# 
  1139  0494                     	;# 
  1140  0495                     	;# 
  1141  0496                     	;# 
  1142  049A                     	;# 
  1143  049B                     	;# 
  1144  049C                     	;# 
  1145  049D                     	;# 
  1146  058C                     	;# 
  1147  058C                     	;# 
  1148  058D                     	;# 
  1149  058E                     	;# 
  1150  058E                     	;# 
  1151  058F                     	;# 
  1152  0590                     	;# 
  1153  0590                     	;# 
  1154  0591                     	;# 
  1155  0592                     	;# 
  1156  0592                     	;# 
  1157  0593                     	;# 
  1158  0594                     	;# 
  1159  0594                     	;# 
  1160  0595                     	;# 
  1161  0596                     	;# 
  1162  0596                     	;# 
  1163  0597                     	;# 
  1164  0598                     	;# 
  1165  0599                     	;# 
  1166  059A                     	;# 
  1167  059B                     	;# 
  1168  059B                     	;# 
  1169  059C                     	;# 
  1170  059D                     	;# 
  1171  060C                     	;# 
  1172  060C                     	;# 
  1173  060D                     	;# 
  1174  060E                     	;# 
  1175  060F                     	;# 
  1176  060F                     	;# 
  1177  0610                     	;# 
  1178  0611                     	;# 
  1179  0612                     	;# 
  1180  0613                     	;# 
  1181  0614                     	;# 
  1182  0617                     	;# 
  1183  0618                     	;# 
  1184  0619                     	;# 
  1185  061A                     	;# 
  1186  061B                     	;# 
  1187  061C                     	;# 
  1188  0691                     	;# 
  1189  0692                     	;# 
  1190  0693                     	;# 
  1191  0694                     	;# 
  1192  0695                     	;# 
  1193  0696                     	;# 
  1194  0697                     	;# 
  1195  0699                     	;# 
  1196  069A                     	;# 
  1197  0711                     	;# 
  1198  0712                     	;# 
  1199  0713                     	;# 
  1200  0714                     	;# 
  1201  0715                     	;# 
  1202  0718                     	;# 
  1203  0718                     	;# 
  1204  0719                     	;# 
  1205  071A                     	;# 
  1206  071A                     	;# 
  1207  071B                     	;# 
  1208  071C                     	;# 
  1209  071D                     	;# 
  1210  0791                     	;# 
  1211  0791                     	;# 
  1212  0792                     	;# 
  1213  0793                     	;# 
  1214  0793                     	;# 
  1215  0794                     	;# 
  1216  0795                     	;# 
  1217  0795                     	;# 
  1218  0796                     	;# 
  1219  0797                     	;# 
  1220  0797                     	;# 
  1221  0798                     	;# 
  1222  0799                     	;# 
  1223  079A                     	;# 
  1224  080C                     	;# 
  1225  080C                     	;# 
  1226  080D                     	;# 
  1227  080E                     	;# 
  1228  080E                     	;# 
  1229  080F                     	;# 
  1230  0810                     	;# 
  1231  0810                     	;# 
  1232  0811                     	;# 
  1233  0812                     	;# 
  1234  0812                     	;# 
  1235  0813                     	;# 
  1236  0814                     	;# 
  1237  0815                     	;# 
  1238  0816                     	;# 
  1239  0817                     	;# 
  1240  0818                     	;# 
  1241  0819                     	;# 
  1242  081A                     	;# 
  1243  081A                     	;# 
  1244  081B                     	;# 
  1245  081C                     	;# 
  1246  081C                     	;# 
  1247  081D                     	;# 
  1248  088C                     	;# 
  1249  088D                     	;# 
  1250  088E                     	;# 
  1251  088F                     	;# 
  1252  088F                     	;# 
  1253  0890                     	;# 
  1254  0891                     	;# 
  1255  0892                     	;# 
  1256  0893                     	;# 
  1257  0893                     	;# 
  1258  0894                     	;# 
  1259  0895                     	;# 
  1260  0896                     	;# 
  1261  0897                     	;# 
  1262  0897                     	;# 
  1263  0898                     	;# 
  1264  0899                     	;# 
  1265  0D8C                     	;# 
  1266  0D8C                     	;# 
  1267  0D8D                     	;# 
  1268  0D8E                     	;# 
  1269  0D8F                     	;# 
  1270  0D8F                     	;# 
  1271  0D90                     	;# 
  1272  0D91                     	;# 
  1273  0D92                     	;# 
  1274  0D92                     	;# 
  1275  0D93                     	;# 
  1276  0D94                     	;# 
  1277  0D95                     	;# 
  1278  0D95                     	;# 
  1279  0D96                     	;# 
  1280  0D97                     	;# 
  1281  0D98                     	;# 
  1282  0D99                     	;# 
  1283  0D9A                     	;# 
  1284  0D9B                     	;# 
  1285  0D9C                     	;# 
  1286  0D9D                     	;# 
  1287  0D9E                     	;# 
  1288  0D9E                     	;# 
  1289  0D9F                     	;# 
  1290  0DA0                     	;# 
  1291  0DA1                     	;# 
  1292  0DA1                     	;# 
  1293  0DA2                     	;# 
  1294  0DA3                     	;# 
  1295  0DA4                     	;# 
  1296  0DA4                     	;# 
  1297  0DA5                     	;# 
  1298  0DA6                     	;# 
  1299  0DA7                     	;# 
  1300  0DA7                     	;# 
  1301  0DA8                     	;# 
  1302  0DA9                     	;# 
  1303  0DAA                     	;# 
  1304  0DAB                     	;# 
  1305  0DAC                     	;# 
  1306  0DAD                     	;# 
  1307  0DAE                     	;# 
  1308  0DAF                     	;# 
  1309  0E0F                     	;# 
  1310  0E10                     	;# 
  1311  0E11                     	;# 
  1312  0E12                     	;# 
  1313  0E13                     	;# 
  1314  0E14                     	;# 
  1315  0E15                     	;# 
  1316  0E16                     	;# 
  1317  0E17                     	;# 
  1318  0E18                     	;# 
  1319  0E19                     	;# 
  1320  0E1A                     	;# 
  1321  0E1B                     	;# 
  1322  0E1C                     	;# 
  1323  0E1D                     	;# 
  1324  0E1E                     	;# 
  1325  0E1F                     	;# 
  1326  0E20                     	;# 
  1327  0E21                     	;# 
  1328  0E22                     	;# 
  1329  0E23                     	;# 
  1330  0E24                     	;# 
  1331  0E25                     	;# 
  1332  0E26                     	;# 
  1333  0E27                     	;# 
  1334  0E28                     	;# 
  1335  0E29                     	;# 
  1336  0E2A                     	;# 
  1337  0E2B                     	;# 
  1338  0E2C                     	;# 
  1339  0E2D                     	;# 
  1340  0E2E                     	;# 
  1341  0E90                     	;# 
  1342  0E91                     	;# 
  1343  0E92                     	;# 
  1344  0E94                     	;# 
  1345  0E95                     	;# 
  1346  0E9C                     	;# 
  1347  0E9D                     	;# 
  1348  0E9E                     	;# 
  1349  0E9F                     	;# 
  1350  0EA0                     	;# 
  1351  0EA1                     	;# 
  1352  0EA2                     	;# 
  1353  0EA3                     	;# 
  1354  0EA4                     	;# 
  1355  0EA5                     	;# 
  1356  0EA6                     	;# 
  1357  0EA7                     	;# 
  1358  0F0F                     	;# 
  1359  0F10                     	;# 
  1360  0F11                     	;# 
  1361  0F12                     	;# 
  1362  0F13                     	;# 
  1363  0F14                     	;# 
  1364  0F15                     	;# 
  1365  0F16                     	;# 
  1366  0F17                     	;# 
  1367  0F18                     	;# 
  1368  0F19                     	;# 
  1369  0F1A                     	;# 
  1370  0F1B                     	;# 
  1371  0F1C                     	;# 
  1372  0F1D                     	;# 
  1373  0F1E                     	;# 
  1374  0F1F                     	;# 
  1375  0F20                     	;# 
  1376  0F21                     	;# 
  1377  0F22                     	;# 
  1378  0F23                     	;# 
  1379  0F24                     	;# 
  1380  0F25                     	;# 
  1381  0F26                     	;# 
  1382  0F27                     	;# 
  1383  0F28                     	;# 
  1384  0F29                     	;# 
  1385  0F2A                     	;# 
  1386  0F2B                     	;# 
  1387  0F2C                     	;# 
  1388  0F2D                     	;# 
  1389  0F2E                     	;# 
  1390  0F2F                     	;# 
  1391  0F30                     	;# 
  1392  0F31                     	;# 
  1393  0F32                     	;# 
  1394  0F33                     	;# 
  1395  0F34                     	;# 
  1396  0F35                     	;# 
  1397  0F36                     	;# 
  1398  0F37                     	;# 
  1399  0FE4                     	;# 
  1400  0FE5                     	;# 
  1401  0FE6                     	;# 
  1402  0FE7                     	;# 
  1403  0FE8                     	;# 
  1404  0FE9                     	;# 
  1405  0FEA                     	;# 
  1406  0FEB                     	;# 
  1407  0FED                     	;# 
  1408  0FEE                     	;# 
  1409  0FEF                     	;# 
  1410  0000                     	;# 
  1411  0001                     	;# 
  1412  0002                     	;# 
  1413  0003                     	;# 
  1414  0004                     	;# 
  1415  0005                     	;# 
  1416  0006                     	;# 
  1417  0007                     	;# 
  1418  0008                     	;# 
  1419  0009                     	;# 
  1420  000A                     	;# 
  1421  000B                     	;# 
  1422  000C                     	;# 
  1423  000D                     	;# 
  1424  000E                     	;# 
  1425  0010                     	;# 
  1426  0011                     	;# 
  1427  0012                     	;# 
  1428  0013                     	;# 
  1429  0014                     	;# 
  1430  0015                     	;# 
  1431  0016                     	;# 
  1432  0016                     	;# 
  1433  0017                     	;# 
  1434  0018                     	;# 
  1435  0019                     	;# 
  1436  001A                     	;# 
  1437  001A                     	;# 
  1438  001B                     	;# 
  1439  001B                     	;# 
  1440  001C                     	;# 
  1441  001D                     	;# 
  1442  001E                     	;# 
  1443  001F                     	;# 
  1444  008C                     	;# 
  1445  008D                     	;# 
  1446  008E                     	;# 
  1447  0090                     	;# 
  1448  0091                     	;# 
  1449  0092                     	;# 
  1450  0093                     	;# 
  1451  0094                     	;# 
  1452  0095                     	;# 
  1453  0096                     	;# 
  1454  0098                     	;# 
  1455  0099                     	;# 
  1456  009A                     	;# 
  1457  009B                     	;# 
  1458  009B                     	;# 
  1459  009C                     	;# 
  1460  009D                     	;# 
  1461  009E                     	;# 
  1462  009F                     	;# 
  1463  010C                     	;# 
  1464  010D                     	;# 
  1465  010E                     	;# 
  1466  0111                     	;# 
  1467  0112                     	;# 
  1468  0113                     	;# 
  1469  0114                     	;# 
  1470  0115                     	;# 
  1471  0116                     	;# 
  1472  0117                     	;# 
  1473  0118                     	;# 
  1474  0119                     	;# 
  1475  011C                     	;# 
  1476  018C                     	;# 
  1477  018D                     	;# 
  1478  018E                     	;# 
  1479  0191                     	;# 
  1480  0191                     	;# 
  1481  0192                     	;# 
  1482  0193                     	;# 
  1483  0193                     	;# 
  1484  0194                     	;# 
  1485  0195                     	;# 
  1486  0196                     	;# 
  1487  0197                     	;# 
  1488  0199                     	;# 
  1489  0199                     	;# 
  1490  0199                     	;# 
  1491  019A                     	;# 
  1492  019A                     	;# 
  1493  019A                     	;# 
  1494  019B                     	;# 
  1495  019B                     	;# 
  1496  019B                     	;# 
  1497  019B                     	;# 
  1498  019B                     	;# 
  1499  019C                     	;# 
  1500  019C                     	;# 
  1501  019C                     	;# 
  1502  019D                     	;# 
  1503  019D                     	;# 
  1504  019D                     	;# 
  1505  019E                     	;# 
  1506  019E                     	;# 
  1507  019E                     	;# 
  1508  019F                     	;# 
  1509  019F                     	;# 
  1510  019F                     	;# 
  1511  019F                     	;# 
  1512  019F                     	;# 
  1513  020C                     	;# 
  1514  020D                     	;# 
  1515  020E                     	;# 
  1516  0211                     	;# 
  1517  0211                     	;# 
  1518  0212                     	;# 
  1519  0212                     	;# 
  1520  0213                     	;# 
  1521  0213                     	;# 
  1522  0214                     	;# 
  1523  0214                     	;# 
  1524  0215                     	;# 
  1525  0215                     	;# 
  1526  0215                     	;# 
  1527  0215                     	;# 
  1528  0216                     	;# 
  1529  0216                     	;# 
  1530  0217                     	;# 
  1531  0217                     	;# 
  1532  028C                     	;# 
  1533  028D                     	;# 
  1534  028E                     	;# 
  1535  0291                     	;# 
  1536  0291                     	;# 
  1537  0292                     	;# 
  1538  0293                     	;# 
  1539  0294                     	;# 
  1540  0298                     	;# 
  1541  0298                     	;# 
  1542  0299                     	;# 
  1543  029A                     	;# 
  1544  029B                     	;# 
  1545  029E                     	;# 
  1546  030C                     	;# 
  1547  030D                     	;# 
  1548  030E                     	;# 
  1549  038C                     	;# 
  1550  038D                     	;# 
  1551  038E                     	;# 
  1552  0391                     	;# 
  1553  0392                     	;# 
  1554  0393                     	;# 
  1555  0394                     	;# 
  1556  0395                     	;# 
  1557  0396                     	;# 
  1558  0397                     	;# 
  1559  0398                     	;# 
  1560  0399                     	;# 
  1561  040E                     	;# 
  1562  0413                     	;# 
  1563  0413                     	;# 
  1564  0414                     	;# 
  1565  0414                     	;# 
  1566  0415                     	;# 
  1567  0416                     	;# 
  1568  0417                     	;# 
  1569  0418                     	;# 
  1570  041A                     	;# 
  1571  041A                     	;# 
  1572  041B                     	;# 
  1573  041B                     	;# 
  1574  041C                     	;# 
  1575  041D                     	;# 
  1576  041E                     	;# 
  1577  041F                     	;# 
  1578  0493                     	;# 
  1579  0494                     	;# 
  1580  0495                     	;# 
  1581  0496                     	;# 
  1582  049A                     	;# 
  1583  049B                     	;# 
  1584  049C                     	;# 
  1585  049D                     	;# 
  1586  058C                     	;# 
  1587  058C                     	;# 
  1588  058D                     	;# 
  1589  058E                     	;# 
  1590  058E                     	;# 
  1591  058F                     	;# 
  1592  0590                     	;# 
  1593  0590                     	;# 
  1594  0591                     	;# 
  1595  0592                     	;# 
  1596  0592                     	;# 
  1597  0593                     	;# 
  1598  0594                     	;# 
  1599  0594                     	;# 
  1600  0595                     	;# 
  1601  0596                     	;# 
  1602  0596                     	;# 
  1603  0597                     	;# 
  1604  0598                     	;# 
  1605  0599                     	;# 
  1606  059A                     	;# 
  1607  059B                     	;# 
  1608  059B                     	;# 
  1609  059C                     	;# 
  1610  059D                     	;# 
  1611  060C                     	;# 
  1612  060C                     	;# 
  1613  060D                     	;# 
  1614  060E                     	;# 
  1615  060F                     	;# 
  1616  060F                     	;# 
  1617  0610                     	;# 
  1618  0611                     	;# 
  1619  0612                     	;# 
  1620  0613                     	;# 
  1621  0614                     	;# 
  1622  0617                     	;# 
  1623  0618                     	;# 
  1624  0619                     	;# 
  1625  061A                     	;# 
  1626  061B                     	;# 
  1627  061C                     	;# 
  1628  0691                     	;# 
  1629  0692                     	;# 
  1630  0693                     	;# 
  1631  0694                     	;# 
  1632  0695                     	;# 
  1633  0696                     	;# 
  1634  0697                     	;# 
  1635  0699                     	;# 
  1636  069A                     	;# 
  1637  0711                     	;# 
  1638  0712                     	;# 
  1639  0713                     	;# 
  1640  0714                     	;# 
  1641  0715                     	;# 
  1642  0718                     	;# 
  1643  0718                     	;# 
  1644  0719                     	;# 
  1645  071A                     	;# 
  1646  071A                     	;# 
  1647  071B                     	;# 
  1648  071C                     	;# 
  1649  071D                     	;# 
  1650  0791                     	;# 
  1651  0791                     	;# 
  1652  0792                     	;# 
  1653  0793                     	;# 
  1654  0793                     	;# 
  1655  0794                     	;# 
  1656  0795                     	;# 
  1657  0795                     	;# 
  1658  0796                     	;# 
  1659  0797                     	;# 
  1660  0797                     	;# 
  1661  0798                     	;# 
  1662  0799                     	;# 
  1663  079A                     	;# 
  1664  080C                     	;# 
  1665  080C                     	;# 
  1666  080D                     	;# 
  1667  080E                     	;# 
  1668  080E                     	;# 
  1669  080F                     	;# 
  1670  0810                     	;# 
  1671  0810                     	;# 
  1672  0811                     	;# 
  1673  0812                     	;# 
  1674  0812                     	;# 
  1675  0813                     	;# 
  1676  0814                     	;# 
  1677  0815                     	;# 
  1678  0816                     	;# 
  1679  0817                     	;# 
  1680  0818                     	;# 
  1681  0819                     	;# 
  1682  081A                     	;# 
  1683  081A                     	;# 
  1684  081B                     	;# 
  1685  081C                     	;# 
  1686  081C                     	;# 
  1687  081D                     	;# 
  1688  088C                     	;# 
  1689  088D                     	;# 
  1690  088E                     	;# 
  1691  088F                     	;# 
  1692  088F                     	;# 
  1693  0890                     	;# 
  1694  0891                     	;# 
  1695  0892                     	;# 
  1696  0893                     	;# 
  1697  0893                     	;# 
  1698  0894                     	;# 
  1699  0895                     	;# 
  1700  0896                     	;# 
  1701  0897                     	;# 
  1702  0897                     	;# 
  1703  0898                     	;# 
  1704  0899                     	;# 
  1705  0D8C                     	;# 
  1706  0D8C                     	;# 
  1707  0D8D                     	;# 
  1708  0D8E                     	;# 
  1709  0D8F                     	;# 
  1710  0D8F                     	;# 
  1711  0D90                     	;# 
  1712  0D91                     	;# 
  1713  0D92                     	;# 
  1714  0D92                     	;# 
  1715  0D93                     	;# 
  1716  0D94                     	;# 
  1717  0D95                     	;# 
  1718  0D95                     	;# 
  1719  0D96                     	;# 
  1720  0D97                     	;# 
  1721  0D98                     	;# 
  1722  0D99                     	;# 
  1723  0D9A                     	;# 
  1724  0D9B                     	;# 
  1725  0D9C                     	;# 
  1726  0D9D                     	;# 
  1727  0D9E                     	;# 
  1728  0D9E                     	;# 
  1729  0D9F                     	;# 
  1730  0DA0                     	;# 
  1731  0DA1                     	;# 
  1732  0DA1                     	;# 
  1733  0DA2                     	;# 
  1734  0DA3                     	;# 
  1735  0DA4                     	;# 
  1736  0DA4                     	;# 
  1737  0DA5                     	;# 
  1738  0DA6                     	;# 
  1739  0DA7                     	;# 
  1740  0DA7                     	;# 
  1741  0DA8                     	;# 
  1742  0DA9                     	;# 
  1743  0DAA                     	;# 
  1744  0DAB                     	;# 
  1745  0DAC                     	;# 
  1746  0DAD                     	;# 
  1747  0DAE                     	;# 
  1748  0DAF                     	;# 
  1749  0E0F                     	;# 
  1750  0E10                     	;# 
  1751  0E11                     	;# 
  1752  0E12                     	;# 
  1753  0E13                     	;# 
  1754  0E14                     	;# 
  1755  0E15                     	;# 
  1756  0E16                     	;# 
  1757  0E17                     	;# 
  1758  0E18                     	;# 
  1759  0E19                     	;# 
  1760  0E1A                     	;# 
  1761  0E1B                     	;# 
  1762  0E1C                     	;# 
  1763  0E1D                     	;# 
  1764  0E1E                     	;# 
  1765  0E1F                     	;# 
  1766  0E20                     	;# 
  1767  0E21                     	;# 
  1768  0E22                     	;# 
  1769  0E23                     	;# 
  1770  0E24                     	;# 
  1771  0E25                     	;# 
  1772  0E26                     	;# 
  1773  0E27                     	;# 
  1774  0E28                     	;# 
  1775  0E29                     	;# 
  1776  0E2A                     	;# 
  1777  0E2B                     	;# 
  1778  0E2C                     	;# 
  1779  0E2D                     	;# 
  1780  0E2E                     	;# 
  1781  0E90                     	;# 
  1782  0E91                     	;# 
  1783  0E92                     	;# 
  1784  0E94                     	;# 
  1785  0E95                     	;# 
  1786  0E9C                     	;# 
  1787  0E9D                     	;# 
  1788  0E9E                     	;# 
  1789  0E9F                     	;# 
  1790  0EA0                     	;# 
  1791  0EA1                     	;# 
  1792  0EA2                     	;# 
  1793  0EA3                     	;# 
  1794  0EA4                     	;# 
  1795  0EA5                     	;# 
  1796  0EA6                     	;# 
  1797  0EA7                     	;# 
  1798  0F0F                     	;# 
  1799  0F10                     	;# 
  1800  0F11                     	;# 
  1801  0F12                     	;# 
  1802  0F13                     	;# 
  1803  0F14                     	;# 
  1804  0F15                     	;# 
  1805  0F16                     	;# 
  1806  0F17                     	;# 
  1807  0F18                     	;# 
  1808  0F19                     	;# 
  1809  0F1A                     	;# 
  1810  0F1B                     	;# 
  1811  0F1C                     	;# 
  1812  0F1D                     	;# 
  1813  0F1E                     	;# 
  1814  0F1F                     	;# 
  1815  0F20                     	;# 
  1816  0F21                     	;# 
  1817  0F22                     	;# 
  1818  0F23                     	;# 
  1819  0F24                     	;# 
  1820  0F25                     	;# 
  1821  0F26                     	;# 
  1822  0F27                     	;# 
  1823  0F28                     	;# 
  1824  0F29                     	;# 
  1825  0F2A                     	;# 
  1826  0F2B                     	;# 
  1827  0F2C                     	;# 
  1828  0F2D                     	;# 
  1829  0F2E                     	;# 
  1830  0F2F                     	;# 
  1831  0F30                     	;# 
  1832  0F31                     	;# 
  1833  0F32                     	;# 
  1834  0F33                     	;# 
  1835  0F34                     	;# 
  1836  0F35                     	;# 
  1837  0F36                     	;# 
  1838  0F37                     	;# 
  1839  0FE4                     	;# 
  1840  0FE5                     	;# 
  1841  0FE6                     	;# 
  1842  0FE7                     	;# 
  1843  0FE8                     	;# 
  1844  0FE9                     	;# 
  1845  0FEA                     	;# 
  1846  0FEB                     	;# 
  1847  0FED                     	;# 
  1848  0FEE                     	;# 
  1849  0FEF                     	;# 
  1850  0000                     	;# 
  1851  0001                     	;# 
  1852  0002                     	;# 
  1853  0003                     	;# 
  1854  0004                     	;# 
  1855  0005                     	;# 
  1856  0006                     	;# 
  1857  0007                     	;# 
  1858  0008                     	;# 
  1859  0009                     	;# 
  1860  000A                     	;# 
  1861  000B                     	;# 
  1862  000C                     	;# 
  1863  000D                     	;# 
  1864  000E                     	;# 
  1865  0010                     	;# 
  1866  0011                     	;# 
  1867  0012                     	;# 
  1868  0013                     	;# 
  1869  0014                     	;# 
  1870  0015                     	;# 
  1871  0016                     	;# 
  1872  0016                     	;# 
  1873  0017                     	;# 
  1874  0018                     	;# 
  1875  0019                     	;# 
  1876  001A                     	;# 
  1877  001A                     	;# 
  1878  001B                     	;# 
  1879  001B                     	;# 
  1880  001C                     	;# 
  1881  001D                     	;# 
  1882  001E                     	;# 
  1883  001F                     	;# 
  1884  008C                     	;# 
  1885  008D                     	;# 
  1886  008E                     	;# 
  1887  0090                     	;# 
  1888  0091                     	;# 
  1889  0092                     	;# 
  1890  0093                     	;# 
  1891  0094                     	;# 
  1892  0095                     	;# 
  1893  0096                     	;# 
  1894  0098                     	;# 
  1895  0099                     	;# 
  1896  009A                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  011C                     	;# 
  1916  018C                     	;# 
  1917  018D                     	;# 
  1918  018E                     	;# 
  1919  0191                     	;# 
  1920  0191                     	;# 
  1921  0192                     	;# 
  1922  0193                     	;# 
  1923  0193                     	;# 
  1924  0194                     	;# 
  1925  0195                     	;# 
  1926  0196                     	;# 
  1927  0197                     	;# 
  1928  0199                     	;# 
  1929  0199                     	;# 
  1930  0199                     	;# 
  1931  019A                     	;# 
  1932  019A                     	;# 
  1933  019A                     	;# 
  1934  019B                     	;# 
  1935  019B                     	;# 
  1936  019B                     	;# 
  1937  019B                     	;# 
  1938  019B                     	;# 
  1939  019C                     	;# 
  1940  019C                     	;# 
  1941  019C                     	;# 
  1942  019D                     	;# 
  1943  019D                     	;# 
  1944  019D                     	;# 
  1945  019E                     	;# 
  1946  019E                     	;# 
  1947  019E                     	;# 
  1948  019F                     	;# 
  1949  019F                     	;# 
  1950  019F                     	;# 
  1951  019F                     	;# 
  1952  019F                     	;# 
  1953  020C                     	;# 
  1954  020D                     	;# 
  1955  020E                     	;# 
  1956  0211                     	;# 
  1957  0211                     	;# 
  1958  0212                     	;# 
  1959  0212                     	;# 
  1960  0213                     	;# 
  1961  0213                     	;# 
  1962  0214                     	;# 
  1963  0214                     	;# 
  1964  0215                     	;# 
  1965  0215                     	;# 
  1966  0215                     	;# 
  1967  0215                     	;# 
  1968  0216                     	;# 
  1969  0216                     	;# 
  1970  0217                     	;# 
  1971  0217                     	;# 
  1972  028C                     	;# 
  1973  028D                     	;# 
  1974  028E                     	;# 
  1975  0291                     	;# 
  1976  0291                     	;# 
  1977  0292                     	;# 
  1978  0293                     	;# 
  1979  0294                     	;# 
  1980  0298                     	;# 
  1981  0298                     	;# 
  1982  0299                     	;# 
  1983  029A                     	;# 
  1984  029B                     	;# 
  1985  029E                     	;# 
  1986  030C                     	;# 
  1987  030D                     	;# 
  1988  030E                     	;# 
  1989  038C                     	;# 
  1990  038D                     	;# 
  1991  038E                     	;# 
  1992  0391                     	;# 
  1993  0392                     	;# 
  1994  0393                     	;# 
  1995  0394                     	;# 
  1996  0395                     	;# 
  1997  0396                     	;# 
  1998  0397                     	;# 
  1999  0398                     	;# 
  2000  0399                     	;# 
  2001  040E                     	;# 
  2002  0413                     	;# 
  2003  0413                     	;# 
  2004  0414                     	;# 
  2005  0414                     	;# 
  2006  0415                     	;# 
  2007  0416                     	;# 
  2008  0417                     	;# 
  2009  0418                     	;# 
  2010  041A                     	;# 
  2011  041A                     	;# 
  2012  041B                     	;# 
  2013  041B                     	;# 
  2014  041C                     	;# 
  2015  041D                     	;# 
  2016  041E                     	;# 
  2017  041F                     	;# 
  2018  0493                     	;# 
  2019  0494                     	;# 
  2020  0495                     	;# 
  2021  0496                     	;# 
  2022  049A                     	;# 
  2023  049B                     	;# 
  2024  049C                     	;# 
  2025  049D                     	;# 
  2026  058C                     	;# 
  2027  058C                     	;# 
  2028  058D                     	;# 
  2029  058E                     	;# 
  2030  058E                     	;# 
  2031  058F                     	;# 
  2032  0590                     	;# 
  2033  0590                     	;# 
  2034  0591                     	;# 
  2035  0592                     	;# 
  2036  0592                     	;# 
  2037  0593                     	;# 
  2038  0594                     	;# 
  2039  0594                     	;# 
  2040  0595                     	;# 
  2041  0596                     	;# 
  2042  0596                     	;# 
  2043  0597                     	;# 
  2044  0598                     	;# 
  2045  0599                     	;# 
  2046  059A                     	;# 
  2047  059B                     	;# 
  2048  059B                     	;# 
  2049  059C                     	;# 
  2050  059D                     	;# 
  2051  060C                     	;# 
  2052  060C                     	;# 
  2053  060D                     	;# 
  2054  060E                     	;# 
  2055  060F                     	;# 
  2056  060F                     	;# 
  2057  0610                     	;# 
  2058  0611                     	;# 
  2059  0612                     	;# 
  2060  0613                     	;# 
  2061  0614                     	;# 
  2062  0617                     	;# 
  2063  0618                     	;# 
  2064  0619                     	;# 
  2065  061A                     	;# 
  2066  061B                     	;# 
  2067  061C                     	;# 
  2068  0691                     	;# 
  2069  0692                     	;# 
  2070  0693                     	;# 
  2071  0694                     	;# 
  2072  0695                     	;# 
  2073  0696                     	;# 
  2074  0697                     	;# 
  2075  0699                     	;# 
  2076  069A                     	;# 
  2077  0711                     	;# 
  2078  0712                     	;# 
  2079  0713                     	;# 
  2080  0714                     	;# 
  2081  0715                     	;# 
  2082  0718                     	;# 
  2083  0718                     	;# 
  2084  0719                     	;# 
  2085  071A                     	;# 
  2086  071A                     	;# 
  2087  071B                     	;# 
  2088  071C                     	;# 
  2089  071D                     	;# 
  2090  0791                     	;# 
  2091  0791                     	;# 
  2092  0792                     	;# 
  2093  0793                     	;# 
  2094  0793                     	;# 
  2095  0794                     	;# 
  2096  0795                     	;# 
  2097  0795                     	;# 
  2098  0796                     	;# 
  2099  0797                     	;# 
  2100  0797                     	;# 
  2101  0798                     	;# 
  2102  0799                     	;# 
  2103  079A                     	;# 
  2104  080C                     	;# 
  2105  080C                     	;# 
  2106  080D                     	;# 
  2107  080E                     	;# 
  2108  080E                     	;# 
  2109  080F                     	;# 
  2110  0810                     	;# 
  2111  0810                     	;# 
  2112  0811                     	;# 
  2113  0812                     	;# 
  2114  0812                     	;# 
  2115  0813                     	;# 
  2116  0814                     	;# 
  2117  0815                     	;# 
  2118  0816                     	;# 
  2119  0817                     	;# 
  2120  0818                     	;# 
  2121  0819                     	;# 
  2122  081A                     	;# 
  2123  081A                     	;# 
  2124  081B                     	;# 
  2125  081C                     	;# 
  2126  081C                     	;# 
  2127  081D                     	;# 
  2128  088C                     	;# 
  2129  088D                     	;# 
  2130  088E                     	;# 
  2131  088F                     	;# 
  2132  088F                     	;# 
  2133  0890                     	;# 
  2134  0891                     	;# 
  2135  0892                     	;# 
  2136  0893                     	;# 
  2137  0893                     	;# 
  2138  0894                     	;# 
  2139  0895                     	;# 
  2140  0896                     	;# 
  2141  0897                     	;# 
  2142  0897                     	;# 
  2143  0898                     	;# 
  2144  0899                     	;# 
  2145  0D8C                     	;# 
  2146  0D8C                     	;# 
  2147  0D8D                     	;# 
  2148  0D8E                     	;# 
  2149  0D8F                     	;# 
  2150  0D8F                     	;# 
  2151  0D90                     	;# 
  2152  0D91                     	;# 
  2153  0D92                     	;# 
  2154  0D92                     	;# 
  2155  0D93                     	;# 
  2156  0D94                     	;# 
  2157  0D95                     	;# 
  2158  0D95                     	;# 
  2159  0D96                     	;# 
  2160  0D97                     	;# 
  2161  0D98                     	;# 
  2162  0D99                     	;# 
  2163  0D9A                     	;# 
  2164  0D9B                     	;# 
  2165  0D9C                     	;# 
  2166  0D9D                     	;# 
  2167  0D9E                     	;# 
  2168  0D9E                     	;# 
  2169  0D9F                     	;# 
  2170  0DA0                     	;# 
  2171  0DA1                     	;# 
  2172  0DA1                     	;# 
  2173  0DA2                     	;# 
  2174  0DA3                     	;# 
  2175  0DA4                     	;# 
  2176  0DA4                     	;# 
  2177  0DA5                     	;# 
  2178  0DA6                     	;# 
  2179  0DA7                     	;# 
  2180  0DA7                     	;# 
  2181  0DA8                     	;# 
  2182  0DA9                     	;# 
  2183  0DAA                     	;# 
  2184  0DAB                     	;# 
  2185  0DAC                     	;# 
  2186  0DAD                     	;# 
  2187  0DAE                     	;# 
  2188  0DAF                     	;# 
  2189  0E0F                     	;# 
  2190  0E10                     	;# 
  2191  0E11                     	;# 
  2192  0E12                     	;# 
  2193  0E13                     	;# 
  2194  0E14                     	;# 
  2195  0E15                     	;# 
  2196  0E16                     	;# 
  2197  0E17                     	;# 
  2198  0E18                     	;# 
  2199  0E19                     	;# 
  2200  0E1A                     	;# 
  2201  0E1B                     	;# 
  2202  0E1C                     	;# 
  2203  0E1D                     	;# 
  2204  0E1E                     	;# 
  2205  0E1F                     	;# 
  2206  0E20                     	;# 
  2207  0E21                     	;# 
  2208  0E22                     	;# 
  2209  0E23                     	;# 
  2210  0E24                     	;# 
  2211  0E25                     	;# 
  2212  0E26                     	;# 
  2213  0E27                     	;# 
  2214  0E28                     	;# 
  2215  0E29                     	;# 
  2216  0E2A                     	;# 
  2217  0E2B                     	;# 
  2218  0E2C                     	;# 
  2219  0E2D                     	;# 
  2220  0E2E                     	;# 
  2221  0E90                     	;# 
  2222  0E91                     	;# 
  2223  0E92                     	;# 
  2224  0E94                     	;# 
  2225  0E95                     	;# 
  2226  0E9C                     	;# 
  2227  0E9D                     	;# 
  2228  0E9E                     	;# 
  2229  0E9F                     	;# 
  2230  0EA0                     	;# 
  2231  0EA1                     	;# 
  2232  0EA2                     	;# 
  2233  0EA3                     	;# 
  2234  0EA4                     	;# 
  2235  0EA5                     	;# 
  2236  0EA6                     	;# 
  2237  0EA7                     	;# 
  2238  0F0F                     	;# 
  2239  0F10                     	;# 
  2240  0F11                     	;# 
  2241  0F12                     	;# 
  2242  0F13                     	;# 
  2243  0F14                     	;# 
  2244  0F15                     	;# 
  2245  0F16                     	;# 
  2246  0F17                     	;# 
  2247  0F18                     	;# 
  2248  0F19                     	;# 
  2249  0F1A                     	;# 
  2250  0F1B                     	;# 
  2251  0F1C                     	;# 
  2252  0F1D                     	;# 
  2253  0F1E                     	;# 
  2254  0F1F                     	;# 
  2255  0F20                     	;# 
  2256  0F21                     	;# 
  2257  0F22                     	;# 
  2258  0F23                     	;# 
  2259  0F24                     	;# 
  2260  0F25                     	;# 
  2261  0F26                     	;# 
  2262  0F27                     	;# 
  2263  0F28                     	;# 
  2264  0F29                     	;# 
  2265  0F2A                     	;# 
  2266  0F2B                     	;# 
  2267  0F2C                     	;# 
  2268  0F2D                     	;# 
  2269  0F2E                     	;# 
  2270  0F2F                     	;# 
  2271  0F30                     	;# 
  2272  0F31                     	;# 
  2273  0F32                     	;# 
  2274  0F33                     	;# 
  2275  0F34                     	;# 
  2276  0F35                     	;# 
  2277  0F36                     	;# 
  2278  0F37                     	;# 
  2279  0FE4                     	;# 
  2280  0FE5                     	;# 
  2281  0FE6                     	;# 
  2282  0FE7                     	;# 
  2283  0FE8                     	;# 
  2284  0FE9                     	;# 
  2285  0FEA                     	;# 
  2286  0FEB                     	;# 
  2287  0FED                     	;# 
  2288  0FEE                     	;# 
  2289  0FEF                     	;# 
  2290  0000                     	;# 
  2291  0001                     	;# 
  2292  0002                     	;# 
  2293  0003                     	;# 
  2294  0004                     	;# 
  2295  0005                     	;# 
  2296  0006                     	;# 
  2297  0007                     	;# 
  2298  0008                     	;# 
  2299  0009                     	;# 
  2300  000A                     	;# 
  2301  000B                     	;# 
  2302  000C                     	;# 
  2303  000D                     	;# 
  2304  000E                     	;# 
  2305  0010                     	;# 
  2306  0011                     	;# 
  2307  0012                     	;# 
  2308  0013                     	;# 
  2309  0014                     	;# 
  2310  0015                     	;# 
  2311  0016                     	;# 
  2312  0016                     	;# 
  2313  0017                     	;# 
  2314  0018                     	;# 
  2315  0019                     	;# 
  2316  001A                     	;# 
  2317  001A                     	;# 
  2318  001B                     	;# 
  2319  001B                     	;# 
  2320  001C                     	;# 
  2321  001D                     	;# 
  2322  001E                     	;# 
  2323  001F                     	;# 
  2324  008C                     	;# 
  2325  008D                     	;# 
  2326  008E                     	;# 
  2327  0090                     	;# 
  2328  0091                     	;# 
  2329  0092                     	;# 
  2330  0093                     	;# 
  2331  0094                     	;# 
  2332  0095                     	;# 
  2333  0096                     	;# 
  2334  0098                     	;# 
  2335  0099                     	;# 
  2336  009A                     	;# 
  2337  009B                     	;# 
  2338  009B                     	;# 
  2339  009C                     	;# 
  2340  009D                     	;# 
  2341  009E                     	;# 
  2342  009F                     	;# 
  2343  010C                     	;# 
  2344  010D                     	;# 
  2345  010E                     	;# 
  2346  0111                     	;# 
  2347  0112                     	;# 
  2348  0113                     	;# 
  2349  0114                     	;# 
  2350  0115                     	;# 
  2351  0116                     	;# 
  2352  0117                     	;# 
  2353  0118                     	;# 
  2354  0119                     	;# 
  2355  011C                     	;# 
  2356  018C                     	;# 
  2357  018D                     	;# 
  2358  018E                     	;# 
  2359  0191                     	;# 
  2360  0191                     	;# 
  2361  0192                     	;# 
  2362  0193                     	;# 
  2363  0193                     	;# 
  2364  0194                     	;# 
  2365  0195                     	;# 
  2366  0196                     	;# 
  2367  0197                     	;# 
  2368  0199                     	;# 
  2369  0199                     	;# 
  2370  0199                     	;# 
  2371  019A                     	;# 
  2372  019A                     	;# 
  2373  019A                     	;# 
  2374  019B                     	;# 
  2375  019B                     	;# 
  2376  019B                     	;# 
  2377  019B                     	;# 
  2378  019B                     	;# 
  2379  019C                     	;# 
  2380  019C                     	;# 
  2381  019C                     	;# 
  2382  019D                     	;# 
  2383  019D                     	;# 
  2384  019D                     	;# 
  2385  019E                     	;# 
  2386  019E                     	;# 
  2387  019E                     	;# 
  2388  019F                     	;# 
  2389  019F                     	;# 
  2390  019F                     	;# 
  2391  019F                     	;# 
  2392  019F                     	;# 
  2393  020C                     	;# 
  2394  020D                     	;# 
  2395  020E                     	;# 
  2396  0211                     	;# 
  2397  0211                     	;# 
  2398  0212                     	;# 
  2399  0212                     	;# 
  2400  0213                     	;# 
  2401  0213                     	;# 
  2402  0214                     	;# 
  2403  0214                     	;# 
  2404  0215                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0215                     	;# 
  2408  0216                     	;# 
  2409  0216                     	;# 
  2410  0217                     	;# 
  2411  0217                     	;# 
  2412  028C                     	;# 
  2413  028D                     	;# 
  2414  028E                     	;# 
  2415  0291                     	;# 
  2416  0291                     	;# 
  2417  0292                     	;# 
  2418  0293                     	;# 
  2419  0294                     	;# 
  2420  0298                     	;# 
  2421  0298                     	;# 
  2422  0299                     	;# 
  2423  029A                     	;# 
  2424  029B                     	;# 
  2425  029E                     	;# 
  2426  030C                     	;# 
  2427  030D                     	;# 
  2428  030E                     	;# 
  2429  038C                     	;# 
  2430  038D                     	;# 
  2431  038E                     	;# 
  2432  0391                     	;# 
  2433  0392                     	;# 
  2434  0393                     	;# 
  2435  0394                     	;# 
  2436  0395                     	;# 
  2437  0396                     	;# 
  2438  0397                     	;# 
  2439  0398                     	;# 
  2440  0399                     	;# 
  2441  040E                     	;# 
  2442  0413                     	;# 
  2443  0413                     	;# 
  2444  0414                     	;# 
  2445  0414                     	;# 
  2446  0415                     	;# 
  2447  0416                     	;# 
  2448  0417                     	;# 
  2449  0418                     	;# 
  2450  041A                     	;# 
  2451  041A                     	;# 
  2452  041B                     	;# 
  2453  041B                     	;# 
  2454  041C                     	;# 
  2455  041D                     	;# 
  2456  041E                     	;# 
  2457  041F                     	;# 
  2458  0493                     	;# 
  2459  0494                     	;# 
  2460  0495                     	;# 
  2461  0496                     	;# 
  2462  049A                     	;# 
  2463  049B                     	;# 
  2464  049C                     	;# 
  2465  049D                     	;# 
  2466  058C                     	;# 
  2467  058C                     	;# 
  2468  058D                     	;# 
  2469  058E                     	;# 
  2470  058E                     	;# 
  2471  058F                     	;# 
  2472  0590                     	;# 
  2473  0590                     	;# 
  2474  0591                     	;# 
  2475  0592                     	;# 
  2476  0592                     	;# 
  2477  0593                     	;# 
  2478  0594                     	;# 
  2479  0594                     	;# 
  2480  0595                     	;# 
  2481  0596                     	;# 
  2482  0596                     	;# 
  2483  0597                     	;# 
  2484  0598                     	;# 
  2485  0599                     	;# 
  2486  059A                     	;# 
  2487  059B                     	;# 
  2488  059B                     	;# 
  2489  059C                     	;# 
  2490  059D                     	;# 
  2491  060C                     	;# 
  2492  060C                     	;# 
  2493  060D                     	;# 
  2494  060E                     	;# 
  2495  060F                     	;# 
  2496  060F                     	;# 
  2497  0610                     	;# 
  2498  0611                     	;# 
  2499  0612                     	;# 
  2500  0613                     	;# 
  2501  0614                     	;# 
  2502  0617                     	;# 
  2503  0618                     	;# 
  2504  0619                     	;# 
  2505  061A                     	;# 
  2506  061B                     	;# 
  2507  061C                     	;# 
  2508  0691                     	;# 
  2509  0692                     	;# 
  2510  0693                     	;# 
  2511  0694                     	;# 
  2512  0695                     	;# 
  2513  0696                     	;# 
  2514  0697                     	;# 
  2515  0699                     	;# 
  2516  069A                     	;# 
  2517  0711                     	;# 
  2518  0712                     	;# 
  2519  0713                     	;# 
  2520  0714                     	;# 
  2521  0715                     	;# 
  2522  0718                     	;# 
  2523  0718                     	;# 
  2524  0719                     	;# 
  2525  071A                     	;# 
  2526  071A                     	;# 
  2527  071B                     	;# 
  2528  071C                     	;# 
  2529  071D                     	;# 
  2530  0791                     	;# 
  2531  0791                     	;# 
  2532  0792                     	;# 
  2533  0793                     	;# 
  2534  0793                     	;# 
  2535  0794                     	;# 
  2536  0795                     	;# 
  2537  0795                     	;# 
  2538  0796                     	;# 
  2539  0797                     	;# 
  2540  0797                     	;# 
  2541  0798                     	;# 
  2542  0799                     	;# 
  2543  079A                     	;# 
  2544  080C                     	;# 
  2545  080C                     	;# 
  2546  080D                     	;# 
  2547  080E                     	;# 
  2548  080E                     	;# 
  2549  080F                     	;# 
  2550  0810                     	;# 
  2551  0810                     	;# 
  2552  0811                     	;# 
  2553  0812                     	;# 
  2554  0812                     	;# 
  2555  0813                     	;# 
  2556  0814                     	;# 
  2557  0815                     	;# 
  2558  0816                     	;# 
  2559  0817                     	;# 
  2560  0818                     	;# 
  2561  0819                     	;# 
  2562  081A                     	;# 
  2563  081A                     	;# 
  2564  081B                     	;# 
  2565  081C                     	;# 
  2566  081C                     	;# 
  2567  081D                     	;# 
  2568  088C                     	;# 
  2569  088D                     	;# 
  2570  088E                     	;# 
  2571  088F                     	;# 
  2572  088F                     	;# 
  2573  0890                     	;# 
  2574  0891                     	;# 
  2575  0892                     	;# 
  2576  0893                     	;# 
  2577  0893                     	;# 
  2578  0894                     	;# 
  2579  0895                     	;# 
  2580  0896                     	;# 
  2581  0897                     	;# 
  2582  0897                     	;# 
  2583  0898                     	;# 
  2584  0899                     	;# 
  2585  0D8C                     	;# 
  2586  0D8C                     	;# 
  2587  0D8D                     	;# 
  2588  0D8E                     	;# 
  2589  0D8F                     	;# 
  2590  0D8F                     	;# 
  2591  0D90                     	;# 
  2592  0D91                     	;# 
  2593  0D92                     	;# 
  2594  0D92                     	;# 
  2595  0D93                     	;# 
  2596  0D94                     	;# 
  2597  0D95                     	;# 
  2598  0D95                     	;# 
  2599  0D96                     	;# 
  2600  0D97                     	;# 
  2601  0D98                     	;# 
  2602  0D99                     	;# 
  2603  0D9A                     	;# 
  2604  0D9B                     	;# 
  2605  0D9C                     	;# 
  2606  0D9D                     	;# 
  2607  0D9E                     	;# 
  2608  0D9E                     	;# 
  2609  0D9F                     	;# 
  2610  0DA0                     	;# 
  2611  0DA1                     	;# 
  2612  0DA1                     	;# 
  2613  0DA2                     	;# 
  2614  0DA3                     	;# 
  2615  0DA4                     	;# 
  2616  0DA4                     	;# 
  2617  0DA5                     	;# 
  2618  0DA6                     	;# 
  2619  0DA7                     	;# 
  2620  0DA7                     	;# 
  2621  0DA8                     	;# 
  2622  0DA9                     	;# 
  2623  0DAA                     	;# 
  2624  0DAB                     	;# 
  2625  0DAC                     	;# 
  2626  0DAD                     	;# 
  2627  0DAE                     	;# 
  2628  0DAF                     	;# 
  2629  0E0F                     	;# 
  2630  0E10                     	;# 
  2631  0E11                     	;# 
  2632  0E12                     	;# 
  2633  0E13                     	;# 
  2634  0E14                     	;# 
  2635  0E15                     	;# 
  2636  0E16                     	;# 
  2637  0E17                     	;# 
  2638  0E18                     	;# 
  2639  0E19                     	;# 
  2640  0E1A                     	;# 
  2641  0E1B                     	;# 
  2642  0E1C                     	;# 
  2643  0E1D                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E90                     	;# 
  2662  0E91                     	;# 
  2663  0E92                     	;# 
  2664  0E94                     	;# 
  2665  0E95                     	;# 
  2666  0E9C                     	;# 
  2667  0E9D                     	;# 
  2668  0E9E                     	;# 
  2669  0E9F                     	;# 
  2670  0EA0                     	;# 
  2671  0EA1                     	;# 
  2672  0EA2                     	;# 
  2673  0EA3                     	;# 
  2674  0EA4                     	;# 
  2675  0EA5                     	;# 
  2676  0EA6                     	;# 
  2677  0EA7                     	;# 
  2678  0F0F                     	;# 
  2679  0F10                     	;# 
  2680  0F11                     	;# 
  2681  0F12                     	;# 
  2682  0F13                     	;# 
  2683  0F14                     	;# 
  2684  0F15                     	;# 
  2685  0F16                     	;# 
  2686  0F17                     	;# 
  2687  0F18                     	;# 
  2688  0F19                     	;# 
  2689  0F1A                     	;# 
  2690  0F1B                     	;# 
  2691  0F1C                     	;# 
  2692  0F1D                     	;# 
  2693  0F1E                     	;# 
  2694  0F1F                     	;# 
  2695  0F20                     	;# 
  2696  0F21                     	;# 
  2697  0F22                     	;# 
  2698  0F23                     	;# 
  2699  0F24                     	;# 
  2700  0F25                     	;# 
  2701  0F26                     	;# 
  2702  0F27                     	;# 
  2703  0F28                     	;# 
  2704  0F29                     	;# 
  2705  0F2A                     	;# 
  2706  0F2B                     	;# 
  2707  0F2C                     	;# 
  2708  0F2D                     	;# 
  2709  0F2E                     	;# 
  2710  0F2F                     	;# 
  2711  0F30                     	;# 
  2712  0F31                     	;# 
  2713  0F32                     	;# 
  2714  0F33                     	;# 
  2715  0F34                     	;# 
  2716  0F35                     	;# 
  2717  0F36                     	;# 
  2718  0F37                     	;# 
  2719  0FE4                     	;# 
  2720  0FE5                     	;# 
  2721  0FE6                     	;# 
  2722  0FE7                     	;# 
  2723  0FE8                     	;# 
  2724  0FE9                     	;# 
  2725  0FEA                     	;# 
  2726  0FEB                     	;# 
  2727  0FED                     	;# 
  2728  0FEE                     	;# 
  2729  0FEF                     	;# 
  2730  0000                     	;# 
  2731  0001                     	;# 
  2732  0002                     	;# 
  2733  0003                     	;# 
  2734  0004                     	;# 
  2735  0005                     	;# 
  2736  0006                     	;# 
  2737  0007                     	;# 
  2738  0008                     	;# 
  2739  0009                     	;# 
  2740  000A                     	;# 
  2741  000B                     	;# 
  2742  000C                     	;# 
  2743  000D                     	;# 
  2744  000E                     	;# 
  2745  0010                     	;# 
  2746  0011                     	;# 
  2747  0012                     	;# 
  2748  0013                     	;# 
  2749  0014                     	;# 
  2750  0015                     	;# 
  2751  0016                     	;# 
  2752  0016                     	;# 
  2753  0017                     	;# 
  2754  0018                     	;# 
  2755  0019                     	;# 
  2756  001A                     	;# 
  2757  001A                     	;# 
  2758  001B                     	;# 
  2759  001B                     	;# 
  2760  001C                     	;# 
  2761  001D                     	;# 
  2762  001E                     	;# 
  2763  001F                     	;# 
  2764  008C                     	;# 
  2765  008D                     	;# 
  2766  008E                     	;# 
  2767  0090                     	;# 
  2768  0091                     	;# 
  2769  0092                     	;# 
  2770  0093                     	;# 
  2771  0094                     	;# 
  2772  0095                     	;# 
  2773  0096                     	;# 
  2774  0098                     	;# 
  2775  0099                     	;# 
  2776  009A                     	;# 
  2777  009B                     	;# 
  2778  009B                     	;# 
  2779  009C                     	;# 
  2780  009D                     	;# 
  2781  009E                     	;# 
  2782  009F                     	;# 
  2783  010C                     	;# 
  2784  010D                     	;# 
  2785  010E                     	;# 
  2786  0111                     	;# 
  2787  0112                     	;# 
  2788  0113                     	;# 
  2789  0114                     	;# 
  2790  0115                     	;# 
  2791  0116                     	;# 
  2792  0117                     	;# 
  2793  0118                     	;# 
  2794  0119                     	;# 
  2795  011C                     	;# 
  2796  018C                     	;# 
  2797  018D                     	;# 
  2798  018E                     	;# 
  2799  0191                     	;# 
  2800  0191                     	;# 
  2801  0192                     	;# 
  2802  0193                     	;# 
  2803  0193                     	;# 
  2804  0194                     	;# 
  2805  0195                     	;# 
  2806  0196                     	;# 
  2807  0197                     	;# 
  2808  0199                     	;# 
  2809  0199                     	;# 
  2810  0199                     	;# 
  2811  019A                     	;# 
  2812  019A                     	;# 
  2813  019A                     	;# 
  2814  019B                     	;# 
  2815  019B                     	;# 
  2816  019B                     	;# 
  2817  019B                     	;# 
  2818  019B                     	;# 
  2819  019C                     	;# 
  2820  019C                     	;# 
  2821  019C                     	;# 
  2822  019D                     	;# 
  2823  019D                     	;# 
  2824  019D                     	;# 
  2825  019E                     	;# 
  2826  019E                     	;# 
  2827  019E                     	;# 
  2828  019F                     	;# 
  2829  019F                     	;# 
  2830  019F                     	;# 
  2831  019F                     	;# 
  2832  019F                     	;# 
  2833  020C                     	;# 
  2834  020D                     	;# 
  2835  020E                     	;# 
  2836  0211                     	;# 
  2837  0211                     	;# 
  2838  0212                     	;# 
  2839  0212                     	;# 
  2840  0213                     	;# 
  2841  0213                     	;# 
  2842  0214                     	;# 
  2843  0214                     	;# 
  2844  0215                     	;# 
  2845  0215                     	;# 
  2846  0215                     	;# 
  2847  0215                     	;# 
  2848  0216                     	;# 
  2849  0216                     	;# 
  2850  0217                     	;# 
  2851  0217                     	;# 
  2852  028C                     	;# 
  2853  028D                     	;# 
  2854  028E                     	;# 
  2855  0291                     	;# 
  2856  0291                     	;# 
  2857  0292                     	;# 
  2858  0293                     	;# 
  2859  0294                     	;# 
  2860  0298                     	;# 
  2861  0298                     	;# 
  2862  0299                     	;# 
  2863  029A                     	;# 
  2864  029B                     	;# 
  2865  029E                     	;# 
  2866  030C                     	;# 
  2867  030D                     	;# 
  2868  030E                     	;# 
  2869  038C                     	;# 
  2870  038D                     	;# 
  2871  038E                     	;# 
  2872  0391                     	;# 
  2873  0392                     	;# 
  2874  0393                     	;# 
  2875  0394                     	;# 
  2876  0395                     	;# 
  2877  0396                     	;# 
  2878  0397                     	;# 
  2879  0398                     	;# 
  2880  0399                     	;# 
  2881  040E                     	;# 
  2882  0413                     	;# 
  2883  0413                     	;# 
  2884  0414                     	;# 
  2885  0414                     	;# 
  2886  0415                     	;# 
  2887  0416                     	;# 
  2888  0417                     	;# 
  2889  0418                     	;# 
  2890  041A                     	;# 
  2891  041A                     	;# 
  2892  041B                     	;# 
  2893  041B                     	;# 
  2894  041C                     	;# 
  2895  041D                     	;# 
  2896  041E                     	;# 
  2897  041F                     	;# 
  2898  0493                     	;# 
  2899  0494                     	;# 
  2900  0495                     	;# 
  2901  0496                     	;# 
  2902  049A                     	;# 
  2903  049B                     	;# 
  2904  049C                     	;# 
  2905  049D                     	;# 
  2906  058C                     	;# 
  2907  058C                     	;# 
  2908  058D                     	;# 
  2909  058E                     	;# 
  2910  058E                     	;# 
  2911  058F                     	;# 
  2912  0590                     	;# 
  2913  0590                     	;# 
  2914  0591                     	;# 
  2915  0592                     	;# 
  2916  0592                     	;# 
  2917  0593                     	;# 
  2918  0594                     	;# 
  2919  0594                     	;# 
  2920  0595                     	;# 
  2921  0596                     	;# 
  2922  0596                     	;# 
  2923  0597                     	;# 
  2924  0598                     	;# 
  2925  0599                     	;# 
  2926  059A                     	;# 
  2927  059B                     	;# 
  2928  059B                     	;# 
  2929  059C                     	;# 
  2930  059D                     	;# 
  2931  060C                     	;# 
  2932  060C                     	;# 
  2933  060D                     	;# 
  2934  060E                     	;# 
  2935  060F                     	;# 
  2936  060F                     	;# 
  2937  0610                     	;# 
  2938  0611                     	;# 
  2939  0612                     	;# 
  2940  0613                     	;# 
  2941  0614                     	;# 
  2942  0617                     	;# 
  2943  0618                     	;# 
  2944  0619                     	;# 
  2945  061A                     	;# 
  2946  061B                     	;# 
  2947  061C                     	;# 
  2948  0691                     	;# 
  2949  0692                     	;# 
  2950  0693                     	;# 
  2951  0694                     	;# 
  2952  0695                     	;# 
  2953  0696                     	;# 
  2954  0697                     	;# 
  2955  0699                     	;# 
  2956  069A                     	;# 
  2957  0711                     	;# 
  2958  0712                     	;# 
  2959  0713                     	;# 
  2960  0714                     	;# 
  2961  0715                     	;# 
  2962  0718                     	;# 
  2963  0718                     	;# 
  2964  0719                     	;# 
  2965  071A                     	;# 
  2966  071A                     	;# 
  2967  071B                     	;# 
  2968  071C                     	;# 
  2969  071D                     	;# 
  2970  0791                     	;# 
  2971  0791                     	;# 
  2972  0792                     	;# 
  2973  0793                     	;# 
  2974  0793                     	;# 
  2975  0794                     	;# 
  2976  0795                     	;# 
  2977  0795                     	;# 
  2978  0796                     	;# 
  2979  0797                     	;# 
  2980  0797                     	;# 
  2981  0798                     	;# 
  2982  0799                     	;# 
  2983  079A                     	;# 
  2984  080C                     	;# 
  2985  080C                     	;# 
  2986  080D                     	;# 
  2987  080E                     	;# 
  2988  080E                     	;# 
  2989  080F                     	;# 
  2990  0810                     	;# 
  2991  0810                     	;# 
  2992  0811                     	;# 
  2993  0812                     	;# 
  2994  0812                     	;# 
  2995  0813                     	;# 
  2996  0814                     	;# 
  2997  0815                     	;# 
  2998  0816                     	;# 
  2999  0817                     	;# 
  3000  0818                     	;# 
  3001  0819                     	;# 
  3002  081A                     	;# 
  3003  081A                     	;# 
  3004  081B                     	;# 
  3005  081C                     	;# 
  3006  081C                     	;# 
  3007  081D                     	;# 
  3008  088C                     	;# 
  3009  088D                     	;# 
  3010  088E                     	;# 
  3011  088F                     	;# 
  3012  088F                     	;# 
  3013  0890                     	;# 
  3014  0891                     	;# 
  3015  0892                     	;# 
  3016  0893                     	;# 
  3017  0893                     	;# 
  3018  0894                     	;# 
  3019  0895                     	;# 
  3020  0896                     	;# 
  3021  0897                     	;# 
  3022  0897                     	;# 
  3023  0898                     	;# 
  3024  0899                     	;# 
  3025  0D8C                     	;# 
  3026  0D8C                     	;# 
  3027  0D8D                     	;# 
  3028  0D8E                     	;# 
  3029  0D8F                     	;# 
  3030  0D8F                     	;# 
  3031  0D90                     	;# 
  3032  0D91                     	;# 
  3033  0D92                     	;# 
  3034  0D92                     	;# 
  3035  0D93                     	;# 
  3036  0D94                     	;# 
  3037  0D95                     	;# 
  3038  0D95                     	;# 
  3039  0D96                     	;# 
  3040  0D97                     	;# 
  3041  0D98                     	;# 
  3042  0D99                     	;# 
  3043  0D9A                     	;# 
  3044  0D9B                     	;# 
  3045  0D9C                     	;# 
  3046  0D9D                     	;# 
  3047  0D9E                     	;# 
  3048  0D9E                     	;# 
  3049  0D9F                     	;# 
  3050  0DA0                     	;# 
  3051  0DA1                     	;# 
  3052  0DA1                     	;# 
  3053  0DA2                     	;# 
  3054  0DA3                     	;# 
  3055  0DA4                     	;# 
  3056  0DA4                     	;# 
  3057  0DA5                     	;# 
  3058  0DA6                     	;# 
  3059  0DA7                     	;# 
  3060  0DA7                     	;# 
  3061  0DA8                     	;# 
  3062  0DA9                     	;# 
  3063  0DAA                     	;# 
  3064  0DAB                     	;# 
  3065  0DAC                     	;# 
  3066  0DAD                     	;# 
  3067  0DAE                     	;# 
  3068  0DAF                     	;# 
  3069  0E0F                     	;# 
  3070  0E10                     	;# 
  3071  0E11                     	;# 
  3072  0E12                     	;# 
  3073  0E13                     	;# 
  3074  0E14                     	;# 
  3075  0E15                     	;# 
  3076  0E16                     	;# 
  3077  0E17                     	;# 
  3078  0E18                     	;# 
  3079  0E19                     	;# 
  3080  0E1A                     	;# 
  3081  0E1B                     	;# 
  3082  0E1C                     	;# 
  3083  0E1D                     	;# 
  3084  0E1E                     	;# 
  3085  0E1F                     	;# 
  3086  0E20                     	;# 
  3087  0E21                     	;# 
  3088  0E22                     	;# 
  3089  0E23                     	;# 
  3090  0E24                     	;# 
  3091  0E25                     	;# 
  3092  0E26                     	;# 
  3093  0E27                     	;# 
  3094  0E28                     	;# 
  3095  0E29                     	;# 
  3096  0E2A                     	;# 
  3097  0E2B                     	;# 
  3098  0E2C                     	;# 
  3099  0E2D                     	;# 
  3100  0E2E                     	;# 
  3101  0E90                     	;# 
  3102  0E91                     	;# 
  3103  0E92                     	;# 
  3104  0E94                     	;# 
  3105  0E95                     	;# 
  3106  0E9C                     	;# 
  3107  0E9D                     	;# 
  3108  0E9E                     	;# 
  3109  0E9F                     	;# 
  3110  0EA0                     	;# 
  3111  0EA1                     	;# 
  3112  0EA2                     	;# 
  3113  0EA3                     	;# 
  3114  0EA4                     	;# 
  3115  0EA5                     	;# 
  3116  0EA6                     	;# 
  3117  0EA7                     	;# 
  3118  0F0F                     	;# 
  3119  0F10                     	;# 
  3120  0F11                     	;# 
  3121  0F12                     	;# 
  3122  0F13                     	;# 
  3123  0F14                     	;# 
  3124  0F15                     	;# 
  3125  0F16                     	;# 
  3126  0F17                     	;# 
  3127  0F18                     	;# 
  3128  0F19                     	;# 
  3129  0F1A                     	;# 
  3130  0F1B                     	;# 
  3131  0F1C                     	;# 
  3132  0F1D                     	;# 
  3133  0F1E                     	;# 
  3134  0F1F                     	;# 
  3135  0F20                     	;# 
  3136  0F21                     	;# 
  3137  0F22                     	;# 
  3138  0F23                     	;# 
  3139  0F24                     	;# 
  3140  0F25                     	;# 
  3141  0F26                     	;# 
  3142  0F27                     	;# 
  3143  0F28                     	;# 
  3144  0F29                     	;# 
  3145  0F2A                     	;# 
  3146  0F2B                     	;# 
  3147  0F2C                     	;# 
  3148  0F2D                     	;# 
  3149  0F2E                     	;# 
  3150  0F2F                     	;# 
  3151  0F30                     	;# 
  3152  0F31                     	;# 
  3153  0F32                     	;# 
  3154  0F33                     	;# 
  3155  0F34                     	;# 
  3156  0F35                     	;# 
  3157  0F36                     	;# 
  3158  0F37                     	;# 
  3159  0FE4                     	;# 
  3160  0FE5                     	;# 
  3161  0FE6                     	;# 
  3162  0FE7                     	;# 
  3163  0FE8                     	;# 
  3164  0FE9                     	;# 
  3165  0FEA                     	;# 
  3166  0FEB                     	;# 
  3167  0FED                     	;# 
  3168  0FEE                     	;# 
  3169  0FEF                     	;# 
  3170  0000                     	;# 
  3171  0001                     	;# 
  3172  0002                     	;# 
  3173  0003                     	;# 
  3174  0004                     	;# 
  3175  0005                     	;# 
  3176  0006                     	;# 
  3177  0007                     	;# 
  3178  0008                     	;# 
  3179  0009                     	;# 
  3180  000A                     	;# 
  3181  000B                     	;# 
  3182  000C                     	;# 
  3183  000D                     	;# 
  3184  000E                     	;# 
  3185  0010                     	;# 
  3186  0011                     	;# 
  3187  0012                     	;# 
  3188  0013                     	;# 
  3189  0014                     	;# 
  3190  0015                     	;# 
  3191  0016                     	;# 
  3192  0016                     	;# 
  3193  0017                     	;# 
  3194  0018                     	;# 
  3195  0019                     	;# 
  3196  001A                     	;# 
  3197  001A                     	;# 
  3198  001B                     	;# 
  3199  001B                     	;# 
  3200  001C                     	;# 
  3201  001D                     	;# 
  3202  001E                     	;# 
  3203  001F                     	;# 
  3204  008C                     	;# 
  3205  008D                     	;# 
  3206  008E                     	;# 
  3207  0090                     	;# 
  3208  0091                     	;# 
  3209  0092                     	;# 
  3210  0093                     	;# 
  3211  0094                     	;# 
  3212  0095                     	;# 
  3213  0096                     	;# 
  3214  0098                     	;# 
  3215  0099                     	;# 
  3216  009A                     	;# 
  3217  009B                     	;# 
  3218  009B                     	;# 
  3219  009C                     	;# 
  3220  009D                     	;# 
  3221  009E                     	;# 
  3222  009F                     	;# 
  3223  010C                     	;# 
  3224  010D                     	;# 
  3225  010E                     	;# 
  3226  0111                     	;# 
  3227  0112                     	;# 
  3228  0113                     	;# 
  3229  0114                     	;# 
  3230  0115                     	;# 
  3231  0116                     	;# 
  3232  0117                     	;# 
  3233  0118                     	;# 
  3234  0119                     	;# 
  3235  011C                     	;# 
  3236  018C                     	;# 
  3237  018D                     	;# 
  3238  018E                     	;# 
  3239  0191                     	;# 
  3240  0191                     	;# 
  3241  0192                     	;# 
  3242  0193                     	;# 
  3243  0193                     	;# 
  3244  0194                     	;# 
  3245  0195                     	;# 
  3246  0196                     	;# 
  3247  0197                     	;# 
  3248  0199                     	;# 
  3249  0199                     	;# 
  3250  0199                     	;# 
  3251  019A                     	;# 
  3252  019A                     	;# 
  3253  019A                     	;# 
  3254  019B                     	;# 
  3255  019B                     	;# 
  3256  019B                     	;# 
  3257  019B                     	;# 
  3258  019B                     	;# 
  3259  019C                     	;# 
  3260  019C                     	;# 
  3261  019C                     	;# 
  3262  019D                     	;# 
  3263  019D                     	;# 
  3264  019D                     	;# 
  3265  019E                     	;# 
  3266  019E                     	;# 
  3267  019E                     	;# 
  3268  019F                     	;# 
  3269  019F                     	;# 
  3270  019F                     	;# 
  3271  019F                     	;# 
  3272  019F                     	;# 
  3273  020C                     	;# 
  3274  020D                     	;# 
  3275  020E                     	;# 
  3276  0211                     	;# 
  3277  0211                     	;# 
  3278  0212                     	;# 
  3279  0212                     	;# 
  3280  0213                     	;# 
  3281  0213                     	;# 
  3282  0214                     	;# 
  3283  0214                     	;# 
  3284  0215                     	;# 
  3285  0215                     	;# 
  3286  0215                     	;# 
  3287  0215                     	;# 
  3288  0216                     	;# 
  3289  0216                     	;# 
  3290  0217                     	;# 
  3291  0217                     	;# 
  3292  028C                     	;# 
  3293  028D                     	;# 
  3294  028E                     	;# 
  3295  0291                     	;# 
  3296  0291                     	;# 
  3297  0292                     	;# 
  3298  0293                     	;# 
  3299  0294                     	;# 
  3300  0298                     	;# 
  3301  0298                     	;# 
  3302  0299                     	;# 
  3303  029A                     	;# 
  3304  029B                     	;# 
  3305  029E                     	;# 
  3306  030C                     	;# 
  3307  030D                     	;# 
  3308  030E                     	;# 
  3309  038C                     	;# 
  3310  038D                     	;# 
  3311  038E                     	;# 
  3312  0391                     	;# 
  3313  0392                     	;# 
  3314  0393                     	;# 
  3315  0394                     	;# 
  3316  0395                     	;# 
  3317  0396                     	;# 
  3318  0397                     	;# 
  3319  0398                     	;# 
  3320  0399                     	;# 
  3321  040E                     	;# 
  3322  0413                     	;# 
  3323  0413                     	;# 
  3324  0414                     	;# 
  3325  0414                     	;# 
  3326  0415                     	;# 
  3327  0416                     	;# 
  3328  0417                     	;# 
  3329  0418                     	;# 
  3330  041A                     	;# 
  3331  041A                     	;# 
  3332  041B                     	;# 
  3333  041B                     	;# 
  3334  041C                     	;# 
  3335  041D                     	;# 
  3336  041E                     	;# 
  3337  041F                     	;# 
  3338  0493                     	;# 
  3339  0494                     	;# 
  3340  0495                     	;# 
  3341  0496                     	;# 
  3342  049A                     	;# 
  3343  049B                     	;# 
  3344  049C                     	;# 
  3345  049D                     	;# 
  3346  058C                     	;# 
  3347  058C                     	;# 
  3348  058D                     	;# 
  3349  058E                     	;# 
  3350  058E                     	;# 
  3351  058F                     	;# 
  3352  0590                     	;# 
  3353  0590                     	;# 
  3354  0591                     	;# 
  3355  0592                     	;# 
  3356  0592                     	;# 
  3357  0593                     	;# 
  3358  0594                     	;# 
  3359  0594                     	;# 
  3360  0595                     	;# 
  3361  0596                     	;# 
  3362  0596                     	;# 
  3363  0597                     	;# 
  3364  0598                     	;# 
  3365  0599                     	;# 
  3366  059A                     	;# 
  3367  059B                     	;# 
  3368  059B                     	;# 
  3369  059C                     	;# 
  3370  059D                     	;# 
  3371  060C                     	;# 
  3372  060C                     	;# 
  3373  060D                     	;# 
  3374  060E                     	;# 
  3375  060F                     	;# 
  3376  060F                     	;# 
  3377  0610                     	;# 
  3378  0611                     	;# 
  3379  0612                     	;# 
  3380  0613                     	;# 
  3381  0614                     	;# 
  3382  0617                     	;# 
  3383  0618                     	;# 
  3384  0619                     	;# 
  3385  061A                     	;# 
  3386  061B                     	;# 
  3387  061C                     	;# 
  3388  0691                     	;# 
  3389  0692                     	;# 
  3390  0693                     	;# 
  3391  0694                     	;# 
  3392  0695                     	;# 
  3393  0696                     	;# 
  3394  0697                     	;# 
  3395  0699                     	;# 
  3396  069A                     	;# 
  3397  0711                     	;# 
  3398  0712                     	;# 
  3399  0713                     	;# 
  3400  0714                     	;# 
  3401  0715                     	;# 
  3402  0718                     	;# 
  3403  0718                     	;# 
  3404  0719                     	;# 
  3405  071A                     	;# 
  3406  071A                     	;# 
  3407  071B                     	;# 
  3408  071C                     	;# 
  3409  071D                     	;# 
  3410  0791                     	;# 
  3411  0791                     	;# 
  3412  0792                     	;# 
  3413  0793                     	;# 
  3414  0793                     	;# 
  3415  0794                     	;# 
  3416  0795                     	;# 
  3417  0795                     	;# 
  3418  0796                     	;# 
  3419  0797                     	;# 
  3420  0797                     	;# 
  3421  0798                     	;# 
  3422  0799                     	;# 
  3423  079A                     	;# 
  3424  080C                     	;# 
  3425  080C                     	;# 
  3426  080D                     	;# 
  3427  080E                     	;# 
  3428  080E                     	;# 
  3429  080F                     	;# 
  3430  0810                     	;# 
  3431  0810                     	;# 
  3432  0811                     	;# 
  3433  0812                     	;# 
  3434  0812                     	;# 
  3435  0813                     	;# 
  3436  0814                     	;# 
  3437  0815                     	;# 
  3438  0816                     	;# 
  3439  0817                     	;# 
  3440  0818                     	;# 
  3441  0819                     	;# 
  3442  081A                     	;# 
  3443  081A                     	;# 
  3444  081B                     	;# 
  3445  081C                     	;# 
  3446  081C                     	;# 
  3447  081D                     	;# 
  3448  088C                     	;# 
  3449  088D                     	;# 
  3450  088E                     	;# 
  3451  088F                     	;# 
  3452  088F                     	;# 
  3453  0890                     	;# 
  3454  0891                     	;# 
  3455  0892                     	;# 
  3456  0893                     	;# 
  3457  0893                     	;# 
  3458  0894                     	;# 
  3459  0895                     	;# 
  3460  0896                     	;# 
  3461  0897                     	;# 
  3462  0897                     	;# 
  3463  0898                     	;# 
  3464  0899                     	;# 
  3465  0D8C                     	;# 
  3466  0D8C                     	;# 
  3467  0D8D                     	;# 
  3468  0D8E                     	;# 
  3469  0D8F                     	;# 
  3470  0D8F                     	;# 
  3471  0D90                     	;# 
  3472  0D91                     	;# 
  3473  0D92                     	;# 
  3474  0D92                     	;# 
  3475  0D93                     	;# 
  3476  0D94                     	;# 
  3477  0D95                     	;# 
  3478  0D95                     	;# 
  3479  0D96                     	;# 
  3480  0D97                     	;# 
  3481  0D98                     	;# 
  3482  0D99                     	;# 
  3483  0D9A                     	;# 
  3484  0D9B                     	;# 
  3485  0D9C                     	;# 
  3486  0D9D                     	;# 
  3487  0D9E                     	;# 
  3488  0D9E                     	;# 
  3489  0D9F                     	;# 
  3490  0DA0                     	;# 
  3491  0DA1                     	;# 
  3492  0DA1                     	;# 
  3493  0DA2                     	;# 
  3494  0DA3                     	;# 
  3495  0DA4                     	;# 
  3496  0DA4                     	;# 
  3497  0DA5                     	;# 
  3498  0DA6                     	;# 
  3499  0DA7                     	;# 
  3500  0DA7                     	;# 
  3501  0DA8                     	;# 
  3502  0DA9                     	;# 
  3503  0DAA                     	;# 
  3504  0DAB                     	;# 
  3505  0DAC                     	;# 
  3506  0DAD                     	;# 
  3507  0DAE                     	;# 
  3508  0DAF                     	;# 
  3509  0E0F                     	;# 
  3510  0E10                     	;# 
  3511  0E11                     	;# 
  3512  0E12                     	;# 
  3513  0E13                     	;# 
  3514  0E14                     	;# 
  3515  0E15                     	;# 
  3516  0E16                     	;# 
  3517  0E17                     	;# 
  3518  0E18                     	;# 
  3519  0E19                     	;# 
  3520  0E1A                     	;# 
  3521  0E1B                     	;# 
  3522  0E1C                     	;# 
  3523  0E1D                     	;# 
  3524  0E1E                     	;# 
  3525  0E1F                     	;# 
  3526  0E20                     	;# 
  3527  0E21                     	;# 
  3528  0E22                     	;# 
  3529  0E23                     	;# 
  3530  0E24                     	;# 
  3531  0E25                     	;# 
  3532  0E26                     	;# 
  3533  0E27                     	;# 
  3534  0E28                     	;# 
  3535  0E29                     	;# 
  3536  0E2A                     	;# 
  3537  0E2B                     	;# 
  3538  0E2C                     	;# 
  3539  0E2D                     	;# 
  3540  0E2E                     	;# 
  3541  0E90                     	;# 
  3542  0E91                     	;# 
  3543  0E92                     	;# 
  3544  0E94                     	;# 
  3545  0E95                     	;# 
  3546  0E9C                     	;# 
  3547  0E9D                     	;# 
  3548  0E9E                     	;# 
  3549  0E9F                     	;# 
  3550  0EA0                     	;# 
  3551  0EA1                     	;# 
  3552  0EA2                     	;# 
  3553  0EA3                     	;# 
  3554  0EA4                     	;# 
  3555  0EA5                     	;# 
  3556  0EA6                     	;# 
  3557  0EA7                     	;# 
  3558  0F0F                     	;# 
  3559  0F10                     	;# 
  3560  0F11                     	;# 
  3561  0F12                     	;# 
  3562  0F13                     	;# 
  3563  0F14                     	;# 
  3564  0F15                     	;# 
  3565  0F16                     	;# 
  3566  0F17                     	;# 
  3567  0F18                     	;# 
  3568  0F19                     	;# 
  3569  0F1A                     	;# 
  3570  0F1B                     	;# 
  3571  0F1C                     	;# 
  3572  0F1D                     	;# 
  3573  0F1E                     	;# 
  3574  0F1F                     	;# 
  3575  0F20                     	;# 
  3576  0F21                     	;# 
  3577  0F22                     	;# 
  3578  0F23                     	;# 
  3579  0F24                     	;# 
  3580  0F25                     	;# 
  3581  0F26                     	;# 
  3582  0F27                     	;# 
  3583  0F28                     	;# 
  3584  0F29                     	;# 
  3585  0F2A                     	;# 
  3586  0F2B                     	;# 
  3587  0F2C                     	;# 
  3588  0F2D                     	;# 
  3589  0F2E                     	;# 
  3590  0F2F                     	;# 
  3591  0F30                     	;# 
  3592  0F31                     	;# 
  3593  0F32                     	;# 
  3594  0F33                     	;# 
  3595  0F34                     	;# 
  3596  0F35                     	;# 
  3597  0F36                     	;# 
  3598  0F37                     	;# 
  3599  0FE4                     	;# 
  3600  0FE5                     	;# 
  3601  0FE6                     	;# 
  3602  0FE7                     	;# 
  3603  0FE8                     	;# 
  3604  0FE9                     	;# 
  3605  0FEA                     	;# 
  3606  0FEB                     	;# 
  3607  0FED                     	;# 
  3608  0FEE                     	;# 
  3609  0FEF                     	;# 
  3610  0000                     	;# 
  3611  0001                     	;# 
  3612  0002                     	;# 
  3613  0003                     	;# 
  3614  0004                     	;# 
  3615  0005                     	;# 
  3616  0006                     	;# 
  3617  0007                     	;# 
  3618  0008                     	;# 
  3619  0009                     	;# 
  3620  000A                     	;# 
  3621  000B                     	;# 
  3622  000C                     	;# 
  3623  000D                     	;# 
  3624  000E                     	;# 
  3625  0010                     	;# 
  3626  0011                     	;# 
  3627  0012                     	;# 
  3628  0013                     	;# 
  3629  0014                     	;# 
  3630  0015                     	;# 
  3631  0016                     	;# 
  3632  0016                     	;# 
  3633  0017                     	;# 
  3634  0018                     	;# 
  3635  0019                     	;# 
  3636  001A                     	;# 
  3637  001A                     	;# 
  3638  001B                     	;# 
  3639  001B                     	;# 
  3640  001C                     	;# 
  3641  001D                     	;# 
  3642  001E                     	;# 
  3643  001F                     	;# 
  3644  008C                     	;# 
  3645  008D                     	;# 
  3646  008E                     	;# 
  3647  0090                     	;# 
  3648  0091                     	;# 
  3649  0092                     	;# 
  3650  0093                     	;# 
  3651  0094                     	;# 
  3652  0095                     	;# 
  3653  0096                     	;# 
  3654  0098                     	;# 
  3655  0099                     	;# 
  3656  009A                     	;# 
  3657  009B                     	;# 
  3658  009B                     	;# 
  3659  009C                     	;# 
  3660  009D                     	;# 
  3661  009E                     	;# 
  3662  009F                     	;# 
  3663  010C                     	;# 
  3664  010D                     	;# 
  3665  010E                     	;# 
  3666  0111                     	;# 
  3667  0112                     	;# 
  3668  0113                     	;# 
  3669  0114                     	;# 
  3670  0115                     	;# 
  3671  0116                     	;# 
  3672  0117                     	;# 
  3673  0118                     	;# 
  3674  0119                     	;# 
  3675  011C                     	;# 
  3676  018C                     	;# 
  3677  018D                     	;# 
  3678  018E                     	;# 
  3679  0191                     	;# 
  3680  0191                     	;# 
  3681  0192                     	;# 
  3682  0193                     	;# 
  3683  0193                     	;# 
  3684  0194                     	;# 
  3685  0195                     	;# 
  3686  0196                     	;# 
  3687  0197                     	;# 
  3688  0199                     	;# 
  3689  0199                     	;# 
  3690  0199                     	;# 
  3691  019A                     	;# 
  3692  019A                     	;# 
  3693  019A                     	;# 
  3694  019B                     	;# 
  3695  019B                     	;# 
  3696  019B                     	;# 
  3697  019B                     	;# 
  3698  019B                     	;# 
  3699  019C                     	;# 
  3700  019C                     	;# 
  3701  019C                     	;# 
  3702  019D                     	;# 
  3703  019D                     	;# 
  3704  019D                     	;# 
  3705  019E                     	;# 
  3706  019E                     	;# 
  3707  019E                     	;# 
  3708  019F                     	;# 
  3709  019F                     	;# 
  3710  019F                     	;# 
  3711  019F                     	;# 
  3712  019F                     	;# 
  3713  020C                     	;# 
  3714  020D                     	;# 
  3715  020E                     	;# 
  3716  0211                     	;# 
  3717  0211                     	;# 
  3718  0212                     	;# 
  3719  0212                     	;# 
  3720  0213                     	;# 
  3721  0213                     	;# 
  3722  0214                     	;# 
  3723  0214                     	;# 
  3724  0215                     	;# 
  3725  0215                     	;# 
  3726  0215                     	;# 
  3727  0215                     	;# 
  3728  0216                     	;# 
  3729  0216                     	;# 
  3730  0217                     	;# 
  3731  0217                     	;# 
  3732  028C                     	;# 
  3733  028D                     	;# 
  3734  028E                     	;# 
  3735  0291                     	;# 
  3736  0291                     	;# 
  3737  0292                     	;# 
  3738  0293                     	;# 
  3739  0294                     	;# 
  3740  0298                     	;# 
  3741  0298                     	;# 
  3742  0299                     	;# 
  3743  029A                     	;# 
  3744  029B                     	;# 
  3745  029E                     	;# 
  3746  030C                     	;# 
  3747  030D                     	;# 
  3748  030E                     	;# 
  3749  038C                     	;# 
  3750  038D                     	;# 
  3751  038E                     	;# 
  3752  0391                     	;# 
  3753  0392                     	;# 
  3754  0393                     	;# 
  3755  0394                     	;# 
  3756  0395                     	;# 
  3757  0396                     	;# 
  3758  0397                     	;# 
  3759  0398                     	;# 
  3760  0399                     	;# 
  3761  040E                     	;# 
  3762  0413                     	;# 
  3763  0413                     	;# 
  3764  0414                     	;# 
  3765  0414                     	;# 
  3766  0415                     	;# 
  3767  0416                     	;# 
  3768  0417                     	;# 
  3769  0418                     	;# 
  3770  041A                     	;# 
  3771  041A                     	;# 
  3772  041B                     	;# 
  3773  041B                     	;# 
  3774  041C                     	;# 
  3775  041D                     	;# 
  3776  041E                     	;# 
  3777  041F                     	;# 
  3778  0493                     	;# 
  3779  0494                     	;# 
  3780  0495                     	;# 
  3781  0496                     	;# 
  3782  049A                     	;# 
  3783  049B                     	;# 
  3784  049C                     	;# 
  3785  049D                     	;# 
  3786  058C                     	;# 
  3787  058C                     	;# 
  3788  058D                     	;# 
  3789  058E                     	;# 
  3790  058E                     	;# 
  3791  058F                     	;# 
  3792  0590                     	;# 
  3793  0590                     	;# 
  3794  0591                     	;# 
  3795  0592                     	;# 
  3796  0592                     	;# 
  3797  0593                     	;# 
  3798  0594                     	;# 
  3799  0594                     	;# 
  3800  0595                     	;# 
  3801  0596                     	;# 
  3802  0596                     	;# 
  3803  0597                     	;# 
  3804  0598                     	;# 
  3805  0599                     	;# 
  3806  059A                     	;# 
  3807  059B                     	;# 
  3808  059B                     	;# 
  3809  059C                     	;# 
  3810  059D                     	;# 
  3811  060C                     	;# 
  3812  060C                     	;# 
  3813  060D                     	;# 
  3814  060E                     	;# 
  3815  060F                     	;# 
  3816  060F                     	;# 
  3817  0610                     	;# 
  3818  0611                     	;# 
  3819  0612                     	;# 
  3820  0613                     	;# 
  3821  0614                     	;# 
  3822  0617                     	;# 
  3823  0618                     	;# 
  3824  0619                     	;# 
  3825  061A                     	;# 
  3826  061B                     	;# 
  3827  061C                     	;# 
  3828  0691                     	;# 
  3829  0692                     	;# 
  3830  0693                     	;# 
  3831  0694                     	;# 
  3832  0695                     	;# 
  3833  0696                     	;# 
  3834  0697                     	;# 
  3835  0699                     	;# 
  3836  069A                     	;# 
  3837  0711                     	;# 
  3838  0712                     	;# 
  3839  0713                     	;# 
  3840  0714                     	;# 
  3841  0715                     	;# 
  3842  0718                     	;# 
  3843  0718                     	;# 
  3844  0719                     	;# 
  3845  071A                     	;# 
  3846  071A                     	;# 
  3847  071B                     	;# 
  3848  071C                     	;# 
  3849  071D                     	;# 
  3850  0791                     	;# 
  3851  0791                     	;# 
  3852  0792                     	;# 
  3853  0793                     	;# 
  3854  0793                     	;# 
  3855  0794                     	;# 
  3856  0795                     	;# 
  3857  0795                     	;# 
  3858  0796                     	;# 
  3859  0797                     	;# 
  3860  0797                     	;# 
  3861  0798                     	;# 
  3862  0799                     	;# 
  3863  079A                     	;# 
  3864  080C                     	;# 
  3865  080C                     	;# 
  3866  080D                     	;# 
  3867  080E                     	;# 
  3868  080E                     	;# 
  3869  080F                     	;# 
  3870  0810                     	;# 
  3871  0810                     	;# 
  3872  0811                     	;# 
  3873  0812                     	;# 
  3874  0812                     	;# 
  3875  0813                     	;# 
  3876  0814                     	;# 
  3877  0815                     	;# 
  3878  0816                     	;# 
  3879  0817                     	;# 
  3880  0818                     	;# 
  3881  0819                     	;# 
  3882  081A                     	;# 
  3883  081A                     	;# 
  3884  081B                     	;# 
  3885  081C                     	;# 
  3886  081C                     	;# 
  3887  081D                     	;# 
  3888  088C                     	;# 
  3889  088D                     	;# 
  3890  088E                     	;# 
  3891  088F                     	;# 
  3892  088F                     	;# 
  3893  0890                     	;# 
  3894  0891                     	;# 
  3895  0892                     	;# 
  3896  0893                     	;# 
  3897  0893                     	;# 
  3898  0894                     	;# 
  3899  0895                     	;# 
  3900  0896                     	;# 
  3901  0897                     	;# 
  3902  0897                     	;# 
  3903  0898                     	;# 
  3904  0899                     	;# 
  3905  0D8C                     	;# 
  3906  0D8C                     	;# 
  3907  0D8D                     	;# 
  3908  0D8E                     	;# 
  3909  0D8F                     	;# 
  3910  0D8F                     	;# 
  3911  0D90                     	;# 
  3912  0D91                     	;# 
  3913  0D92                     	;# 
  3914  0D92                     	;# 
  3915  0D93                     	;# 
  3916  0D94                     	;# 
  3917  0D95                     	;# 
  3918  0D95                     	;# 
  3919  0D96                     	;# 
  3920  0D97                     	;# 
  3921  0D98                     	;# 
  3922  0D99                     	;# 
  3923  0D9A                     	;# 
  3924  0D9B                     	;# 
  3925  0D9C                     	;# 
  3926  0D9D                     	;# 
  3927  0D9E                     	;# 
  3928  0D9E                     	;# 
  3929  0D9F                     	;# 
  3930  0DA0                     	;# 
  3931  0DA1                     	;# 
  3932  0DA1                     	;# 
  3933  0DA2                     	;# 
  3934  0DA3                     	;# 
  3935  0DA4                     	;# 
  3936  0DA4                     	;# 
  3937  0DA5                     	;# 
  3938  0DA6                     	;# 
  3939  0DA7                     	;# 
  3940  0DA7                     	;# 
  3941  0DA8                     	;# 
  3942  0DA9                     	;# 
  3943  0DAA                     	;# 
  3944  0DAB                     	;# 
  3945  0DAC                     	;# 
  3946  0DAD                     	;# 
  3947  0DAE                     	;# 
  3948  0DAF                     	;# 
  3949  0E0F                     	;# 
  3950  0E10                     	;# 
  3951  0E11                     	;# 
  3952  0E12                     	;# 
  3953  0E13                     	;# 
  3954  0E14                     	;# 
  3955  0E15                     	;# 
  3956  0E16                     	;# 
  3957  0E17                     	;# 
  3958  0E18                     	;# 
  3959  0E19                     	;# 
  3960  0E1A                     	;# 
  3961  0E1B                     	;# 
  3962  0E1C                     	;# 
  3963  0E1D                     	;# 
  3964  0E1E                     	;# 
  3965  0E1F                     	;# 
  3966  0E20                     	;# 
  3967  0E21                     	;# 
  3968  0E22                     	;# 
  3969  0E23                     	;# 
  3970  0E24                     	;# 
  3971  0E25                     	;# 
  3972  0E26                     	;# 
  3973  0E27                     	;# 
  3974  0E28                     	;# 
  3975  0E29                     	;# 
  3976  0E2A                     	;# 
  3977  0E2B                     	;# 
  3978  0E2C                     	;# 
  3979  0E2D                     	;# 
  3980  0E2E                     	;# 
  3981  0E90                     	;# 
  3982  0E91                     	;# 
  3983  0E92                     	;# 
  3984  0E94                     	;# 
  3985  0E95                     	;# 
  3986  0E9C                     	;# 
  3987  0E9D                     	;# 
  3988  0E9E                     	;# 
  3989  0E9F                     	;# 
  3990  0EA0                     	;# 
  3991  0EA1                     	;# 
  3992  0EA2                     	;# 
  3993  0EA3                     	;# 
  3994  0EA4                     	;# 
  3995  0EA5                     	;# 
  3996  0EA6                     	;# 
  3997  0EA7                     	;# 
  3998  0F0F                     	;# 
  3999  0F10                     	;# 
  4000  0F11                     	;# 
  4001  0F12                     	;# 
  4002  0F13                     	;# 
  4003  0F14                     	;# 
  4004  0F15                     	;# 
  4005  0F16                     	;# 
  4006  0F17                     	;# 
  4007  0F18                     	;# 
  4008  0F19                     	;# 
  4009  0F1A                     	;# 
  4010  0F1B                     	;# 
  4011  0F1C                     	;# 
  4012  0F1D                     	;# 
  4013  0F1E                     	;# 
  4014  0F1F                     	;# 
  4015  0F20                     	;# 
  4016  0F21                     	;# 
  4017  0F22                     	;# 
  4018  0F23                     	;# 
  4019  0F24                     	;# 
  4020  0F25                     	;# 
  4021  0F26                     	;# 
  4022  0F27                     	;# 
  4023  0F28                     	;# 
  4024  0F29                     	;# 
  4025  0F2A                     	;# 
  4026  0F2B                     	;# 
  4027  0F2C                     	;# 
  4028  0F2D                     	;# 
  4029  0F2E                     	;# 
  4030  0F2F                     	;# 
  4031  0F30                     	;# 
  4032  0F31                     	;# 
  4033  0F32                     	;# 
  4034  0F33                     	;# 
  4035  0F34                     	;# 
  4036  0F35                     	;# 
  4037  0F36                     	;# 
  4038  0F37                     	;# 
  4039  0FE4                     	;# 
  4040  0FE5                     	;# 
  4041  0FE6                     	;# 
  4042  0FE7                     	;# 
  4043  0FE8                     	;# 
  4044  0FE9                     	;# 
  4045  0FEA                     	;# 
  4046  0FEB                     	;# 
  4047  0FED                     	;# 
  4048  0FEE                     	;# 
  4049  0FEF                     	;# 
  4050                           
  4051                           	psect	idataBANK0
  4052  06F5                     __pidataBANK0:	
  4053                           
  4054                           ;initializer for _display_data_2
  4055  06F5  345A               	retlw	90
  4056  06F6  343A               	retlw	58
  4057  06F7  3430               	retlw	48
  4058  06F8  3430               	retlw	48
  4059  06F9  3430               	retlw	48
  4060  06FA  3447               	retlw	71
  4061  06FB  343A               	retlw	58
  4062  06FC  3430               	retlw	48
  4063  06FD  3430               	retlw	48
  4064  06FE  3430               	retlw	48
  4065  06FF  3400               	retlw	0
  4066                           
  4067                           	psect	idataBANK1
  4068  06A1                     __pidataBANK1:	
  4069                           
  4070                           ;initializer for _display_data_1
  4071  06A1  3453               	retlw	83
  4072  06A2  343A               	retlw	58
  4073  06A3  3430               	retlw	48
  4074  06A4  3430               	retlw	48
  4075  06A5  3430               	retlw	48
  4076  06A6  344D               	retlw	77
  4077  06A7  343A               	retlw	58
  4078  06A8  3430               	retlw	48
  4079  06A9  3430               	retlw	48
  4080  06AA  3430               	retlw	48
  4081  06AB  344C               	retlw	76
  4082  06AC  343A               	retlw	58
  4083  06AD  3430               	retlw	48
  4084  06AE  3430               	retlw	48
  4085  06AF  3430               	retlw	48
  4086  06B0  3400               	retlw	0
  4087                           
  4088                           	psect	nvBANK0
  4089  004F                     __pnvBANK0:	
  4090  004F                     _INT_InterruptHandler:	
  4091  004F                     	ds	2
  4092  0051                     _TMR3_InterruptHandler:	
  4093  0051                     	ds	2
  4094  0053                     _timer3ReloadVal:	
  4095  0053                     	ds	2
  4096  0055                     _TMR1_InterruptHandler:	
  4097  0055                     	ds	2
  4098  0057                     _timer1ReloadVal:	
  4099  0057                     	ds	2
  4100  0059                     _TMR0_InterruptHandler:	
  4101  0059                     	ds	2
  4102  005B                     _timer0ReloadVal:	
  4103  005B                     	ds	1
  4104  000C                     _PORTAbits	set	12
  4105  0014                     _PIR5bits	set	20
  4106  0019                     _T1GCONbits	set	25
  4107  0018                     _T1CONbits	set	24
  4108  0018                     _T1CON	set	24
  4109  0010                     _PIR1bits	set	16
  4110  0016                     _TMR1L	set	22
  4111  0017                     _TMR1H	set	23
  4112  0019                     _T1GCON	set	25
  4113  000B                     _INTCONbits	set	11
  4114  0015                     _TMR0	set	21
  4115  0095                     _OPTION_REGbits	set	149
  4116  008E                     _TRISC	set	142
  4117  008D                     _TRISB	set	141
  4118  008C                     _TRISA	set	140
  4119  0094                     _PIE5bits	set	148
  4120  0098                     _OSCTUNE	set	152
  4121  0099                     _OSCCON	set	153
  4122  0090                     _PIE1bits	set	144
  4123  0095                     _OPTION_REG	set	149
  4124  010C                     _LATAbits	set	268
  4125  010E                     _LATCbits	set	270
  4126  010D                     _LATBbits	set	269
  4127  010E                     _LATC	set	270
  4128  010D                     _LATB	set	269
  4129  010C                     _LATA	set	268
  4130  0116                     _BORCON	set	278
  4131  018C                     _ANSELA	set	396
  4132  018D                     _ANSELB	set	397
  4133  018E                     _ANSELC	set	398
  4134  020E                     _WPUC	set	526
  4135  020C                     _WPUA	set	524
  4136  020D                     _WPUB	set	525
  4137  028E                     _ODCONC	set	654
  4138  028D                     _ODCONB	set	653
  4139  028C                     _ODCONA	set	652
  4140  0496                     _T3GCONbits	set	1174
  4141  0495                     _T3CONbits	set	1173
  4142  0495                     _T3CON	set	1173
  4143  0493                     _TMR3L	set	1171
  4144  0494                     _TMR3H	set	1172
  4145  0496                     _T3GCON	set	1174
  4146  0E10                     _INTPPS	set	3600
  4147                           
  4148                           ; #config settings
  4149  0000                     
  4150                           	psect	cinit
  4151  0039                     start_initialization:	
  4152  0039                     __initialization:	
  4153                           
  4154                           ; Initialize objects allocated to BANK0
  4155  0039  30F5               	movlw	low __pidataBANK0
  4156  003A  0084               	movwf	4
  4157  003B  3086               	movlw	(high __pidataBANK0)| (0+128)
  4158  003C  0085               	movwf	5
  4159  003D  305C               	movlw	low __pdataBANK0
  4160  003E  0086               	movwf	6
  4161  003F  3000               	movlw	high __pdataBANK0
  4162  0040  0087               	movwf	7
  4163  0041  300B               	movlw	11
  4164  0042  3187  2724  3180   	fcall	init_ram
  4165                           
  4166                           ; Initialize objects allocated to BANK1
  4167  0045  30A1               	movlw	low __pidataBANK1
  4168  0046  0084               	movwf	4
  4169  0047  3086               	movlw	(high __pidataBANK1)| (0+128)
  4170  0048  0085               	movwf	5
  4171  0049  30A0               	movlw	low __pdataBANK1
  4172  004A  0086               	movwf	6
  4173  004B  3000               	movlw	high __pdataBANK1
  4174  004C  0087               	movwf	7
  4175  004D  3010               	movlw	16
  4176  004E  3187  2724  3180   	fcall	init_ram
  4177                           
  4178                           ; Clear objects allocated to COMMON
  4179  0051  01F6               	clrf	__pbssCOMMON& (0+127)
  4180  0052  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  4181  0053  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  4182  0054  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  4183  0055  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  4184                           
  4185                           ; Clear objects allocated to BANK0
  4186  0056  3038               	movlw	low __pbssBANK0
  4187  0057  0084               	movwf	4
  4188  0058  3000               	movlw	high __pbssBANK0
  4189  0059  0085               	movwf	5
  4190  005A  3017               	movlw	23
  4191  005B  3187  272A         	fcall	clear_ram0
  4192  005D                     end_of_initialization:	
  4193                           ;End of C runtime variable initialization code
  4194                           
  4195  005D                     __end_of__initialization:	
  4196  005D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4197  005E  0020               	movlb	0
  4198  005F  3183  2BA0         	ljmp	_main	;jump to C main() function
  4199                           
  4200                           	psect	bssCOMMON
  4201  0076                     __pbssCOMMON:	
  4202  0076                     _gExitFlag:	
  4203  0076                     	ds	1
  4204  0077                     _gEnterFlag:	
  4205  0077                     	ds	1
  4206  0078                     _gTimer0NormalFlashFlag:	
  4207  0078                     	ds	1
  4208  0079                     _gTimer0NormalFalshCnt:	
  4209  0079                     	ds	1
  4210  007A                     _gTimer0AlarmFlashFlag:	
  4211  007A                     	ds	1
  4212                           
  4213                           	psect	bssBANK0
  4214  0038                     __pbssBANK0:	
  4215  0038                     _gBoxCntStruct:	
  4216  0038                     	ds	21
  4217  004D                     _gTimer3Flag:	
  4218  004D                     	ds	1
  4219  004E                     _gInterruptFlag:	
  4220  004E                     	ds	1
  4221                           
  4222                           	psect	dataBANK0
  4223  005C                     __pdataBANK0:	
  4224  005C                     _display_data_2:	
  4225  005C                     	ds	11
  4226                           
  4227                           	psect	dataBANK1
  4228  00A0                     __pdataBANK1:	
  4229  00A0                     _display_data_1:	
  4230  00A0                     	ds	16
  4231                           
  4232                           	psect	inittext
  4233  0724                     init_ram:	
  4234  0724  00FE               	movwf	126
  4235  0725                     initloop:	
  4236  0725  0012               	moviw fsr0++
  4237  0726  001E               	movwi fsr1++
  4238  0727  0BFE               	decfsz	126,f
  4239  0728  2F25               	goto	initloop
  4240  0729  3400               	retlw	0
  4241                           
  4242                           	psect	clrtext
  4243  072A                     clear_ram0:	
  4244                           ;	Called with FSR0 containing the base address, and
  4245                           ;	WREG with the size to clear
  4246                           
  4247  072A  0064               	clrwdt	;clear the watchdog before getting into this loop
  4248  072B                     clrloop0:	
  4249  072B  0180               	clrf	0	;clear RAM location pointed to by FSR
  4250  072C  3101               	addfsr 0,1
  4251  072D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4252  072E  2F2B               	goto	clrloop0	;have we reached the end yet?
  4253  072F  3400               	retlw	0	;all done for this memory range, return
  4254                           
  4255                           	psect	cstackCOMMON
  4256  0070                     __pcstackCOMMON:	
  4257  0070                     ?_TMR0_DefaultInterruptHandler:	
  4258  0070                     ??_TMR0_DefaultInterruptHandler:	
  4259                           ; 1 bytes @ 0x0
  4260                           
  4261  0070                     ?_TMR0_CallBack:	
  4262                           ; 1 bytes @ 0x0
  4263                           
  4264  0070                     ??_TMR0_CallBack:	
  4265                           ; 1 bytes @ 0x0
  4266                           
  4267  0070                     ?_TMR1_DefaultInterruptHandler:	
  4268                           ; 1 bytes @ 0x0
  4269                           
  4270  0070                     ??_TMR1_DefaultInterruptHandler:	
  4271                           ; 1 bytes @ 0x0
  4272                           
  4273  0070                     ?_TMR1_CallBack:	
  4274                           ; 1 bytes @ 0x0
  4275                           
  4276  0070                     ??_TMR1_CallBack:	
  4277                           ; 1 bytes @ 0x0
  4278                           
  4279  0070                     ?_PIN_MANAGER_Initialize:	
  4280                           ; 1 bytes @ 0x0
  4281                           
  4282  0070                     ?_OSCILLATOR_Initialize:	
  4283                           ; 1 bytes @ 0x0
  4284                           
  4285  0070                     ?_TMR3_Initialize:	
  4286                           ; 1 bytes @ 0x0
  4287                           
  4288  0070                     ?_EXT_INT_Initialize:	
  4289                           ; 1 bytes @ 0x0
  4290                           
  4291  0070                     ?_INT_ISR:	
  4292                           ; 1 bytes @ 0x0
  4293                           
  4294  0070                     ?_PIN_MANAGER_IOC:	
  4295                           ; 1 bytes @ 0x0
  4296                           
  4297  0070                     ??_PIN_MANAGER_IOC:	
  4298                           ; 1 bytes @ 0x0
  4299                           
  4300  0070                     ?_TMR3_ISR:	
  4301                           ; 1 bytes @ 0x0
  4302                           
  4303  0070                     ?_TMR3_DefaultInterruptHandler:	
  4304                           ; 1 bytes @ 0x0
  4305                           
  4306  0070                     ??_TMR3_DefaultInterruptHandler:	
  4307                           ; 1 bytes @ 0x0
  4308                           
  4309  0070                     ?_TMR3_CallBack:	
  4310                           ; 1 bytes @ 0x0
  4311                           
  4312  0070                     ??_TMR3_CallBack:	
  4313                           ; 1 bytes @ 0x0
  4314                           
  4315  0070                     ?_bsp_TimerInterruptISRCallback:	
  4316                           ; 1 bytes @ 0x0
  4317                           
  4318  0070                     ??_bsp_TimerInterruptISRCallback:	
  4319                           ; 1 bytes @ 0x0
  4320                           
  4321  0070                     ?_INT_CallBack:	
  4322                           ; 1 bytes @ 0x0
  4323                           
  4324  0070                     ??_INT_CallBack:	
  4325                           ; 1 bytes @ 0x0
  4326                           
  4327  0070                     ?_bsp_CounterInit:	
  4328                           ; 1 bytes @ 0x0
  4329                           
  4330  0070                     ?_TMR0_Initialize:	
  4331                           ; 1 bytes @ 0x0
  4332                           
  4333  0070                     ?_TMR0_ISR:	
  4334                           ; 1 bytes @ 0x0
  4335                           
  4336  0070                     ?_TMR1_Initialize:	
  4337                           ; 1 bytes @ 0x0
  4338                           
  4339  0070                     ?_TMR1_WriteTimer:	
  4340                           ; 1 bytes @ 0x0
  4341                           
  4342  0070                     ?_TMR1_ISR:	
  4343                           ; 1 bytes @ 0x0
  4344                           
  4345  0070                     ?_SYSTEM_Initialize:	
  4346                           ; 1 bytes @ 0x0
  4347                           
  4348  0070                     ?_INTERRUPT_InterruptManager:	
  4349                           ; 1 bytes @ 0x0
  4350                           
  4351  0070                     ?_TMR3_WriteTimer:	
  4352                           ; 1 bytes @ 0x0
  4353                           
  4354  0070                     ?_INT_DefaultInterruptHandler:	
  4355                           ; 1 bytes @ 0x0
  4356                           
  4357  0070                     ??_INT_DefaultInterruptHandler:	
  4358                           ; 1 bytes @ 0x0
  4359                           
  4360  0070                     ?_LCDInit:	
  4361                           ; 1 bytes @ 0x0
  4362                           
  4363  0070                     ?_Data_Toseg:	
  4364                           ; 1 bytes @ 0x0
  4365                           
  4366  0070                     ?_main:	
  4367                           ; 1 bytes @ 0x0
  4368                           
  4369  0070                     TMR1_WriteTimer@timerVal:	
  4370                           ; 1 bytes @ 0x0
  4371                           
  4372  0070                     TMR3_WriteTimer@timerVal:	
  4373                           ; 2 bytes @ 0x0
  4374                           
  4375                           
  4376                           ; 2 bytes @ 0x0
  4377  0070                     	ds	1
  4378  0071                     ??_INT_ISR:	
  4379  0071                     ??_TMR0_ISR:	
  4380                           ; 1 bytes @ 0x1
  4381                           
  4382                           
  4383                           ; 1 bytes @ 0x1
  4384  0071                     	ds	1
  4385  0072                     ??_TMR3_ISR:	
  4386  0072                     ??_TMR1_WriteTimer:	
  4387                           ; 1 bytes @ 0x2
  4388                           
  4389  0072                     ??_TMR1_ISR:	
  4390                           ; 1 bytes @ 0x2
  4391                           
  4392  0072                     ??_INTERRUPT_InterruptManager:	
  4393                           ; 1 bytes @ 0x2
  4394                           
  4395  0072                     ??_TMR3_WriteTimer:	
  4396                           ; 1 bytes @ 0x2
  4397                           
  4398                           
  4399                           ; 1 bytes @ 0x2
  4400  0072                     	ds	1
  4401  0073                     ?_TMR0_SetInterruptHandler:	
  4402  0073                     ?_TMR1_SetInterruptHandler:	
  4403                           ; 1 bytes @ 0x3
  4404                           
  4405  0073                     ??_PIN_MANAGER_Initialize:	
  4406                           ; 1 bytes @ 0x3
  4407                           
  4408  0073                     ??_OSCILLATOR_Initialize:	
  4409                           ; 1 bytes @ 0x3
  4410                           
  4411  0073                     ?_TMR3_SetInterruptHandler:	
  4412                           ; 1 bytes @ 0x3
  4413                           
  4414  0073                     ??_bsp_CounterInit:	
  4415                           ; 1 bytes @ 0x3
  4416                           
  4417  0073                     ?_INT_SetInterruptHandler:	
  4418                           ; 1 bytes @ 0x3
  4419                           
  4420  0073                     ?_LCDSendData:	
  4421                           ; 1 bytes @ 0x3
  4422                           
  4423  0073                     ??___llmod:	
  4424                           ; 1 bytes @ 0x3
  4425                           
  4426  0073                     ??___lwmod:	
  4427                           ; 1 bytes @ 0x3
  4428                           
  4429  0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  4430                           ; 1 bytes @ 0x3
  4431                           
  4432  0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  4433                           ; 2 bytes @ 0x3
  4434                           
  4435  0073                     TMR3_SetInterruptHandler@InterruptHandler:	
  4436                           ; 2 bytes @ 0x3
  4437                           
  4438  0073                     INT_SetInterruptHandler@InterruptHandler:	
  4439                           ; 2 bytes @ 0x3
  4440                           
  4441  0073                     LCDSendData@RS:	
  4442                           ; 2 bytes @ 0x3
  4443                           
  4444                           
  4445                           ; 2 bytes @ 0x3
  4446  0073                     	ds	1
  4447  0074                     ___llmod@counter:	
  4448  0074                     ___lwmod@counter:	
  4449                           ; 1 bytes @ 0x4
  4450                           
  4451                           
  4452                           ; 1 bytes @ 0x4
  4453  0074                     	ds	1
  4454  0075                     ??_TMR0_SetInterruptHandler:	
  4455  0075                     ??_TMR1_SetInterruptHandler:	
  4456                           ; 1 bytes @ 0x5
  4457                           
  4458  0075                     ??_TMR3_Initialize:	
  4459                           ; 1 bytes @ 0x5
  4460                           
  4461  0075                     ??_EXT_INT_Initialize:	
  4462                           ; 1 bytes @ 0x5
  4463                           
  4464  0075                     ??_TMR3_SetInterruptHandler:	
  4465                           ; 1 bytes @ 0x5
  4466                           
  4467  0075                     ??_TMR0_Initialize:	
  4468                           ; 1 bytes @ 0x5
  4469                           
  4470  0075                     ??_TMR1_Initialize:	
  4471                           ; 1 bytes @ 0x5
  4472                           
  4473  0075                     ??_INT_SetInterruptHandler:	
  4474                           ; 1 bytes @ 0x5
  4475                           
  4476  0075                     ??___lldiv:	
  4477                           ; 1 bytes @ 0x5
  4478                           
  4479  0075                     ??___lwdiv:	
  4480                           ; 1 bytes @ 0x5
  4481                           
  4482  0075                     LCDSendData@value:	
  4483                           ; 1 bytes @ 0x5
  4484                           
  4485                           
  4486                           ; 1 bytes @ 0x5
  4487  0075                     	ds	1
  4488  0076                     ??_SYSTEM_Initialize:	
  4489                           
  4490                           	psect	cstackBANK0
  4491  0020                     __pcstackBANK0:	
  4492                           ; 1 bytes @ 0x6
  4493                           
  4494  0020                     ??_LCDSendData:	
  4495  0020                     ?___lwmod:	
  4496                           ; 1 bytes @ 0x0
  4497                           
  4498  0020                     ?___llmod:	
  4499                           ; 2 bytes @ 0x0
  4500                           
  4501  0020                     ___lwmod@divisor:	
  4502                           ; 4 bytes @ 0x0
  4503                           
  4504  0020                     ___llmod@divisor:	
  4505                           ; 2 bytes @ 0x0
  4506                           
  4507                           
  4508                           ; 4 bytes @ 0x0
  4509  0020                     	ds	2
  4510  0022                     ??_LCDInit:	
  4511  0022                     ?_Print:	
  4512                           ; 1 bytes @ 0x2
  4513                           
  4514  0022                     ??_Print:	
  4515                           ; 1 bytes @ 0x2
  4516                           
  4517  0022                     ___lwmod@dividend:	
  4518                           ; 1 bytes @ 0x2
  4519                           
  4520                           
  4521                           ; 2 bytes @ 0x2
  4522  0022                     	ds	1
  4523  0023                     Print@str:	
  4524                           
  4525                           ; 1 bytes @ 0x3
  4526  0023                     	ds	1
  4527  0024                     ?___lwdiv:	
  4528  0024                     ___lwdiv@divisor:	
  4529                           ; 2 bytes @ 0x4
  4530                           
  4531  0024                     ___llmod@dividend:	
  4532                           ; 2 bytes @ 0x4
  4533                           
  4534                           
  4535                           ; 4 bytes @ 0x4
  4536  0024                     	ds	2
  4537  0026                     ___lwdiv@dividend:	
  4538                           
  4539                           ; 2 bytes @ 0x6
  4540  0026                     	ds	2
  4541  0028                     ?___lldiv:	
  4542  0028                     ___lwdiv@counter:	
  4543                           ; 4 bytes @ 0x8
  4544                           
  4545  0028                     ___lldiv@divisor:	
  4546                           ; 1 bytes @ 0x8
  4547                           
  4548                           
  4549                           ; 4 bytes @ 0x8
  4550  0028                     	ds	1
  4551  0029                     ___lwdiv@quotient:	
  4552                           
  4553                           ; 2 bytes @ 0x9
  4554  0029                     	ds	3
  4555  002C                     ___lldiv@dividend:	
  4556                           
  4557                           ; 4 bytes @ 0xC
  4558  002C                     	ds	4
  4559  0030                     ___lldiv@quotient:	
  4560                           
  4561                           ; 4 bytes @ 0x10
  4562  0030                     	ds	4
  4563  0034                     ___lldiv@counter:	
  4564                           
  4565                           ; 1 bytes @ 0x14
  4566  0034                     	ds	1
  4567  0035                     ??_Data_Toseg:	
  4568                           
  4569                           ; 1 bytes @ 0x15
  4570  0035                     	ds	1
  4571  0036                     ??_main:	
  4572                           
  4573                           ; 1 bytes @ 0x16
  4574  0036                     	ds	2
  4575                           
  4576                           	psect	maintext
  4577  03A0                     __pmaintext:	
  4578 ;;
  4579 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4580 ;;
  4581 ;; *************** function _main *****************
  4582 ;; Defined at:
  4583 ;;		line 154 in file "main.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : B1F/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4599 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4600 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4601 ;;Total ram usage:        2 bytes
  4602 ;; Hardware stack levels required when called:    7
  4603 ;; This function calls:
  4604 ;;		_Data_Toseg
  4605 ;;		_LCDInit
  4606 ;;		_LCDSendData
  4607 ;;		_Print
  4608 ;;		_SYSTEM_Initialize
  4609 ;;		_bsp_CounterInit
  4610 ;; This function is called by:
  4611 ;;		Startup code after reset
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _main
  4617  03A0                     _main:	
  4618                           
  4619                           ;main.c: 157: SYSTEM_Initialize();
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4623  03A0  3186  268F  3183   	fcall	_SYSTEM_Initialize
  4624                           
  4625                           ;main.c: 158: bsp_CounterInit();
  4626  03A3  3186  2610  3183   	fcall	_bsp_CounterInit
  4627                           
  4628                           ;main.c: 159: LCDInit();
  4629  03A6  3184  2433  3183   	fcall	_LCDInit
  4630                           
  4631                           ;main.c: 164: (INTCONbits.GIE = 1);
  4632  03A9  178B               	bsf	11,7	;volatile
  4633                           
  4634                           ;main.c: 167: (INTCONbits.PEIE = 1);
  4635  03AA  170B               	bsf	11,6	;volatile
  4636                           
  4637                           ;main.c: 175: LCDSendData(0, 0b10000000);
  4638  03AB  3000               	movlw	0
  4639  03AC  00F3               	movwf	LCDSendData@RS
  4640  03AD  00F4               	movwf	LCDSendData@RS+1
  4641  03AE  3080               	movlw	128
  4642  03AF  0020               	movlb	0	; select bank0
  4643  03B0  00B6               	movwf	??_main
  4644  03B1  0836               	movf	??_main,w
  4645  03B2  00F5               	movwf	LCDSendData@value
  4646  03B3  3182  22EB  3183   	fcall	_LCDSendData
  4647                           
  4648                           ;main.c: 176: Print(display_data_1);
  4649  03B6  30A0               	movlw	(low (_display_data_1| 0))& (0+255)
  4650  03B7  3185  25EF  3183   	fcall	_Print
  4651                           
  4652                           ;main.c: 177: _delay((unsigned long)((1000)*(2000000/4000.0)));
  4653  03BA  3003               	movlw	3
  4654  03BB  0020               	movlb	0	; select bank0
  4655  03BC  00B7               	movwf	??_main+1
  4656  03BD  308A               	movlw	138
  4657  03BE  00B6               	movwf	??_main
  4658  03BF  3055               	movlw	85
  4659  03C0                     u1937:	
  4660  03C0  0B89               	decfsz	9,f
  4661  03C1  2BC0               	goto	u1937
  4662  03C2  0BB6               	decfsz	??_main,f
  4663  03C3  2BC0               	goto	u1937
  4664  03C4  0BB7               	decfsz	??_main+1,f
  4665  03C5  2BC0               	goto	u1937
  4666  03C6  3200               	nop2
  4667  03C7                     L1:	
  4668                           
  4669                           ;main.c: 178: LCDSendData(0, 0b11000000);
  4670  03C7  3000               	movlw	0
  4671  03C8  00F3               	movwf	LCDSendData@RS
  4672  03C9  00F4               	movwf	LCDSendData@RS+1
  4673  03CA  30C0               	movlw	192
  4674  03CB  0020               	movlb	0	; select bank0
  4675  03CC  00B6               	movwf	??_main
  4676  03CD  0836               	movf	??_main,w
  4677  03CE  00F5               	movwf	LCDSendData@value
  4678  03CF  3182  22EB  3183   	fcall	_LCDSendData
  4679                           
  4680                           ;main.c: 179: Print(display_data_2);
  4681  03D2  305C               	movlw	(low (_display_data_2| 0))& (0+255)
  4682  03D3  3185  25EF  3183   	fcall	_Print
  4683  03D6                     l1942:	
  4684                           ;main.c: 181: while (1)
  4685                           
  4686                           
  4687                           ;main.c: 182: {
  4688                           ;main.c: 184: if(gInterruptFlag)
  4689  03D6  0020               	movlb	0	; select bank0
  4690  03D7  084E               	movf	_gInterruptFlag,w	;volatile
  4691  03D8  1D03               	btfss	3,2
  4692                           
  4693                           ;main.c: 185: {
  4694                           ;main.c: 187: gInterruptFlag = 0;
  4695  03D9  01CE               	clrf	_gInterruptFlag	;volatile
  4696                           
  4697                           ;main.c: 188: }
  4698                           ;main.c: 190: if(0 == PORTAbits.RA1 )
  4699  03DA  188C               	btfsc	12,1	;volatile
  4700  03DB  2BEA               	goto	l1954
  4701                           
  4702                           ;main.c: 191: {
  4703                           ;main.c: 192: _delay((unsigned long)((5)*(2000000/4000.0)));
  4704  03DC  3004               	movlw	4
  4705  03DD  0020               	movlb	0	; select bank0
  4706  03DE  00B6               	movwf	??_main
  4707  03DF  303D               	movlw	61
  4708  03E0                     u1947:	
  4709  03E0  0B89               	decfsz	9,f
  4710  03E1  2BE0               	goto	u1947
  4711  03E2  0BB6               	decfsz	??_main,f
  4712  03E3  2BE0               	goto	u1947
  4713  03E4  3200               	nop2
  4714                           
  4715                           ;main.c: 193: if(0 == PORTAbits.RA1 )
  4716  03E5  0020               	movlb	0	; select bank0
  4717  03E6  188C               	btfsc	12,1	;volatile
  4718  03E7  2BEA               	goto	l1954
  4719                           
  4720                           ;main.c: 194: {
  4721                           ;main.c: 195: gBoxCntStruct.AlarmFlag = 0;
  4722  03E8  01BA               	clrf	_gBoxCntStruct+2
  4723                           
  4724                           ;main.c: 196: gBoxCntStruct.JamFlag = 0;
  4725  03E9  01BB               	clrf	_gBoxCntStruct+3
  4726  03EA                     l1954:	
  4727                           
  4728                           ;main.c: 197: }
  4729                           ;main.c: 198: }
  4730                           ;main.c: 200: if(gTimer0NormalFlashFlag)
  4731  03EA  0878               	movf	_gTimer0NormalFlashFlag,w	;volatile
  4732  03EB  1903               	btfsc	3,2
  4733  03EC  2C08               	goto	l1964
  4734                           
  4735                           ;main.c: 201: {
  4736                           ;main.c: 202: gTimer0NormalFlashFlag = 0;
  4737  03ED  01F8               	clrf	_gTimer0NormalFlashFlag	;volatile
  4738                           
  4739                           ;main.c: 204: do { LATAbits.LATA4 = ~LATAbits.LATA4; } while(0);
  4740  03EE  1003               	clrc
  4741  03EF  0022               	movlb	2	; select bank2
  4742  03F0  1E0C               	btfss	12,4	;volatile
  4743  03F1  1403               	setc
  4744  03F2  1C03               	btfss	3,0
  4745  03F3  2BF7               	goto	u1830
  4746  03F4  0022               	movlb	2	; select bank2
  4747  03F5  160C               	bsf	12,4	;volatile
  4748  03F6  2BF9               	goto	l1960
  4749  03F7                     u1830:	
  4750  03F7  0022               	movlb	2	; select bank2
  4751  03F8  120C               	bcf	12,4	;volatile
  4752  03F9                     l1960:	
  4753                           
  4754                           ;main.c: 205: if(0 == gBoxCntStruct.AlarmFlag)
  4755  03F9  0020               	movlb	0	; select bank0
  4756  03FA  083A               	movf	_gBoxCntStruct+2,w
  4757  03FB  1D03               	btfss	3,2
  4758  03FC  2C08               	goto	l1964
  4759                           
  4760                           ;main.c: 206: {
  4761                           ;main.c: 207: LATAbits.LATA5 = ~LATAbits.LATA4;
  4762  03FD  1003               	clrc
  4763  03FE  0022               	movlb	2	; select bank2
  4764  03FF  1E0C               	btfss	12,4	;volatile
  4765  0400  1403               	setc
  4766  0401  1C03               	btfss	3,0
  4767  0402  2C06               	goto	u1860
  4768  0403  0022               	movlb	2	; select bank2
  4769  0404  168C               	bsf	12,5	;volatile
  4770  0405  2C08               	goto	l1964
  4771  0406                     u1860:	
  4772  0406  0022               	movlb	2	; select bank2
  4773  0407  128C               	bcf	12,5	;volatile
  4774  0408                     l1964:	
  4775                           
  4776                           ;main.c: 208: }
  4777                           ;main.c: 209: }
  4778                           ;main.c: 210: if(1 == gTimer0AlarmFlashFlag)
  4779  0408  037A               	decf	_gTimer0AlarmFlashFlag,w	;volatile
  4780  0409  1D03               	btfss	3,2
  4781  040A  2C1B               	goto	l1972
  4782                           
  4783                           ;main.c: 211: {
  4784                           ;main.c: 212: gTimer0AlarmFlashFlag = 0;
  4785  040B  01FA               	clrf	_gTimer0AlarmFlashFlag	;volatile
  4786                           
  4787                           ;main.c: 213: if(1 == gBoxCntStruct.AlarmFlag)
  4788  040C  0020               	movlb	0	; select bank0
  4789  040D  033A               	decf	_gBoxCntStruct+2,w
  4790  040E  1D03               	btfss	3,2
  4791  040F  2C1B               	goto	l1972
  4792                           
  4793                           ;main.c: 214: {
  4794                           ;main.c: 215: LATAbits.LATA5 = ~LATAbits.LATA5;
  4795  0410  1003               	clrc
  4796  0411  0022               	movlb	2	; select bank2
  4797  0412  1E8C               	btfss	12,5	;volatile
  4798  0413  1403               	setc
  4799  0414  1C03               	btfss	3,0
  4800  0415  2C19               	goto	u1900
  4801  0416  0022               	movlb	2	; select bank2
  4802  0417  168C               	bsf	12,5	;volatile
  4803  0418  2C1B               	goto	l1972
  4804  0419                     u1900:	
  4805  0419  0022               	movlb	2	; select bank2
  4806  041A  128C               	bcf	12,5	;volatile
  4807  041B                     l1972:	
  4808                           
  4809                           ;main.c: 216: }
  4810                           ;main.c: 217: }
  4811                           ;main.c: 226: if(gBoxCntStruct.DisplayReflashFlag)
  4812  041B  0020               	movlb	0	; select bank0
  4813  041C  083C               	movf	_gBoxCntStruct+4,w
  4814  041D  1903               	btfsc	3,2
  4815  041E  2BD6               	goto	l1942
  4816                           
  4817                           ;main.c: 227: {
  4818                           ;main.c: 229: gBoxCntStruct.DisplayReflashFlag = 0;
  4819  041F  01BC               	clrf	_gBoxCntStruct+4
  4820                           
  4821                           ;main.c: 230: Data_Toseg();
  4822  0420  3180  2061  3183   	fcall	_Data_Toseg
  4823                           
  4824                           ;main.c: 231: LCDSendData(0, 0b10000000);
  4825  0423  3000               	movlw	0
  4826  0424  00F3               	movwf	LCDSendData@RS
  4827  0425  00F4               	movwf	LCDSendData@RS+1
  4828  0426  3080               	movlw	128
  4829  0427  0020               	movlb	0	; select bank0
  4830  0428  00B6               	movwf	??_main
  4831  0429  0836               	movf	??_main,w
  4832  042A  00F5               	movwf	LCDSendData@value
  4833  042B  3182  22EB  3183   	fcall	_LCDSendData
  4834                           
  4835                           ;main.c: 232: Print(display_data_1);
  4836  042E  30A0               	movlw	(low (_display_data_1| 0))& (0+255)
  4837  042F  3185  25EF  3183   	fcall	_Print
  4838  0432  2BC7               	goto	L1
  4839  0433                     __end_of_main:	
  4840                           ;main.c: 236: Print(display_data_2);
  4841                           
  4842                           ;main.c: 233: LCDSendData(0, 0b11000000);
  4843                           
  4844                           
  4845                           	psect	text1
  4846  0610                     __ptext1:	
  4847 ;; *************** function _bsp_CounterInit *****************
  4848 ;; Defined at:
  4849 ;;		line 6 in file "bsp_counter.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;		None
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  1    wreg      void 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;Total ram usage:        0 bytes
  4868 ;; Hardware stack levels used:    1
  4869 ;; Hardware stack levels required when called:    4
  4870 ;; This function calls:
  4871 ;;		Nothing
  4872 ;; This function is called by:
  4873 ;;		_main
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function _bsp_CounterInit
  4879  0610                     _bsp_CounterInit:	
  4880                           
  4881                           ;bsp_counter.c: 8: gBoxCntStruct.AlarmFlag = 0;
  4882                           
  4883                           ;incstack = 0
  4884                           ; Regs used in _bsp_CounterInit: [wreg+status,2]
  4885  0610  0020               	movlb	0	; select bank0
  4886  0611  01BA               	clrf	_gBoxCntStruct+2
  4887                           
  4888                           ;bsp_counter.c: 9: gBoxCntStruct.JamFlag = 0;
  4889  0612  01BB               	clrf	_gBoxCntStruct+3
  4890                           
  4891                           ;bsp_counter.c: 10: gBoxCntStruct.LargeBoxCnt = 0;
  4892  0613  01C5               	clrf	_gBoxCntStruct+13
  4893  0614  01C6               	clrf	_gBoxCntStruct+14
  4894                           
  4895                           ;bsp_counter.c: 11: gBoxCntStruct.MiddleBoxCnt = 0;
  4896  0615  01C3               	clrf	_gBoxCntStruct+11
  4897  0616  01C4               	clrf	_gBoxCntStruct+12
  4898                           
  4899                           ;bsp_counter.c: 12: gBoxCntStruct.SmallBoxCnt = 0;
  4900  0617  01C1               	clrf	_gBoxCntStruct+9
  4901  0618  01C2               	clrf	_gBoxCntStruct+10
  4902                           
  4903                           ;bsp_counter.c: 13: gBoxCntStruct.BoxSum = 0;
  4904  0619  3000               	movlw	0
  4905  061A  00CC               	movwf	_gBoxCntStruct+20
  4906  061B  3000               	movlw	0
  4907  061C  00CB               	movwf	_gBoxCntStruct+19
  4908  061D  3000               	movlw	0
  4909  061E  00CA               	movwf	_gBoxCntStruct+18
  4910  061F  3000               	movlw	0
  4911  0620  00C9               	movwf	_gBoxCntStruct+17
  4912                           
  4913                           ;bsp_counter.c: 14: gBoxCntStruct.SingleTimeCnt = 0;
  4914  0621  3000               	movlw	0
  4915  0622  00C0               	movwf	_gBoxCntStruct+8
  4916  0623  3000               	movlw	0
  4917  0624  00BF               	movwf	_gBoxCntStruct+7
  4918  0625  3000               	movlw	0
  4919  0626  00BE               	movwf	_gBoxCntStruct+6
  4920  0627  3000               	movlw	0
  4921  0628  00BD               	movwf	_gBoxCntStruct+5
  4922                           
  4923                           ;bsp_counter.c: 15: gBoxCntStruct.TimeCntEndFlag = 0;
  4924  0629  01B9               	clrf	_gBoxCntStruct+1
  4925                           
  4926                           ;bsp_counter.c: 16: gBoxCntStruct.TimeCntStartFlag = 0;
  4927  062A  01B8               	clrf	_gBoxCntStruct
  4928                           
  4929                           ;bsp_counter.c: 17: gBoxCntStruct.DisplayReflashFlag = 0;
  4930  062B  01BC               	clrf	_gBoxCntStruct+4
  4931  062C  0008               	return
  4932  062D                     __end_of_bsp_CounterInit:	
  4933                           
  4934                           	psect	text2
  4935  068F                     __ptext2:	
  4936 ;; *************** function _SYSTEM_Initialize *****************
  4937 ;; Defined at:
  4938 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;		None
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;		None
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  1    wreg      void 
  4945 ;; Registers used:
  4946 ;;		wreg, status,2, status,0, pclath, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;Total ram usage:        0 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    6
  4959 ;; This function calls:
  4960 ;;		_EXT_INT_Initialize
  4961 ;;		_OSCILLATOR_Initialize
  4962 ;;		_PIN_MANAGER_Initialize
  4963 ;;		_TMR0_Initialize
  4964 ;;		_TMR1_Initialize
  4965 ;;		_TMR3_Initialize
  4966 ;; This function is called by:
  4967 ;;		_main
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           
  4972                           ;psect for function _SYSTEM_Initialize
  4973  068F                     _SYSTEM_Initialize:	
  4974                           
  4975                           ;mcc.c: 52: PIN_MANAGER_Initialize();
  4976                           
  4977                           ;incstack = 0
  4978                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4979  068F  3185  25CB  3186   	fcall	_PIN_MANAGER_Initialize
  4980                           
  4981                           ;mcc.c: 53: OSCILLATOR_Initialize();
  4982  0692  3187  2716  3186   	fcall	_OSCILLATOR_Initialize
  4983                           
  4984                           ;mcc.c: 54: TMR3_Initialize();
  4985  0695  3186  2649  3186   	fcall	_TMR3_Initialize
  4986                           
  4987                           ;mcc.c: 55: EXT_INT_Initialize();
  4988  0698  3187  2700  3186   	fcall	_EXT_INT_Initialize
  4989                           
  4990                           ;mcc.c: 56: TMR1_Initialize();
  4991  069B  3186  2663  3186   	fcall	_TMR1_Initialize
  4992                           
  4993                           ;mcc.c: 57: TMR0_Initialize();
  4994  069E  3186  267A         	fcall	_TMR0_Initialize
  4995  06A0  0008               	return
  4996  06A1                     __end_of_SYSTEM_Initialize:	
  4997                           
  4998                           	psect	text3
  4999  0649                     __ptext3:	
  5000 ;; *************** function _TMR3_Initialize *****************
  5001 ;; Defined at:
  5002 ;;		line 67 in file "mcc_generated_files/tmr3.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0, pclath, cstack
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    5
  5023 ;; This function calls:
  5024 ;;		_TMR3_SetInterruptHandler
  5025 ;; This function is called by:
  5026 ;;		_SYSTEM_Initialize
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function _TMR3_Initialize
  5032  0649                     _TMR3_Initialize:	
  5033                           
  5034                           ;tmr3.c: 72: T3GCON = 0x00;
  5035                           
  5036                           ;incstack = 0
  5037                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5038  0649  0029               	movlb	9	; select bank9
  5039  064A  0196               	clrf	22	;volatile
  5040                           
  5041                           ;tmr3.c: 75: TMR3H = 0xEC;
  5042  064B  30EC               	movlw	236
  5043  064C  0094               	movwf	20	;volatile
  5044                           
  5045                           ;tmr3.c: 78: TMR3L = 0x78;
  5046  064D  3078               	movlw	120
  5047  064E  0093               	movwf	19	;volatile
  5048                           
  5049                           ;tmr3.c: 81: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
  5050  064F  0814               	movf	20,w	;volatile
  5051  0650  0020               	movlb	0	; select bank0
  5052  0651  00D4               	movwf	_timer3ReloadVal+1	;volatile
  5053  0652  0029               	movlb	9	; select bank9
  5054  0653  0813               	movf	19,w	;volatile
  5055  0654  0020               	movlb	0	; select bank0
  5056  0655  00D3               	movwf	_timer3ReloadVal	;volatile
  5057                           
  5058                           ;tmr3.c: 84: PIR5bits.TMR3IF = 0;
  5059  0656  1314               	bcf	20,6	;volatile
  5060                           
  5061                           ;tmr3.c: 87: PIE5bits.TMR3IE = 1;
  5062  0657  0021               	movlb	1	; select bank1
  5063  0658  1714               	bsf	20,6	;volatile
  5064                           
  5065                           ;tmr3.c: 90: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
  5066  0659  304C               	movlw	low _TMR3_DefaultInterruptHandler
  5067  065A  00F3               	movwf	TMR3_SetInterruptHandler@InterruptHandler
  5068  065B  3007               	movlw	high _TMR3_DefaultInterruptHandler
  5069  065C  00F4               	movwf	TMR3_SetInterruptHandler@InterruptHandler+1
  5070  065D  3187  2730         	fcall	_TMR3_SetInterruptHandler
  5071                           
  5072                           ;tmr3.c: 93: T3CON = 0x05;
  5073  065F  3005               	movlw	5
  5074  0660  0029               	movlb	9	; select bank9
  5075  0661  0095               	movwf	21	;volatile
  5076  0662  0008               	return
  5077  0663                     __end_of_TMR3_Initialize:	
  5078                           
  5079                           	psect	text4
  5080  0730                     __ptext4:	
  5081 ;; *************** function _TMR3_SetInterruptHandler *****************
  5082 ;; Defined at:
  5083 ;;		line 182 in file "mcc_generated_files/tmr3.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  5086 ;;		 -> TMR3_DefaultInterruptHandler(1), 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5101 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;Total ram usage:        2 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    4
  5105 ;; This function calls:
  5106 ;;		Nothing
  5107 ;; This function is called by:
  5108 ;;		_TMR3_Initialize
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           
  5113                           ;psect for function _TMR3_SetInterruptHandler
  5114  0730                     _TMR3_SetInterruptHandler:	
  5115                           
  5116                           ;tmr3.c: 183: TMR3_InterruptHandler = InterruptHandler;
  5117                           
  5118                           ;incstack = 0
  5119                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
  5120  0730  0874               	movf	TMR3_SetInterruptHandler@InterruptHandler+1,w
  5121  0731  0020               	movlb	0	; select bank0
  5122  0732  00D2               	movwf	_TMR3_InterruptHandler+1
  5123  0733  0873               	movf	TMR3_SetInterruptHandler@InterruptHandler,w
  5124  0734  00D1               	movwf	_TMR3_InterruptHandler
  5125  0735  0008               	return
  5126  0736                     __end_of_TMR3_SetInterruptHandler:	
  5127                           
  5128                           	psect	text5
  5129  0663                     __ptext5:	
  5130 ;; *************** function _TMR1_Initialize *****************
  5131 ;; Defined at:
  5132 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;		None
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;		None
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      void 
  5139 ;; Registers used:
  5140 ;;		wreg, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5150 ;;Total ram usage:        0 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    5
  5153 ;; This function calls:
  5154 ;;		_TMR1_SetInterruptHandler
  5155 ;; This function is called by:
  5156 ;;		_SYSTEM_Initialize
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           
  5161                           ;psect for function _TMR1_Initialize
  5162  0663                     _TMR1_Initialize:	
  5163                           
  5164                           ;tmr1.c: 69: T1GCON = 0x00;
  5165                           
  5166                           ;incstack = 0
  5167                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5168  0663  0020               	movlb	0	; select bank0
  5169  0664  0199               	clrf	25	;volatile
  5170                           
  5171                           ;tmr1.c: 72: TMR1H = 0xFF;
  5172  0665  30FF               	movlw	255
  5173  0666  0097               	movwf	23	;volatile
  5174                           
  5175                           ;tmr1.c: 75: TMR1L = 0xFF;
  5176  0667  30FF               	movlw	255
  5177  0668  0096               	movwf	22	;volatile
  5178                           
  5179                           ;tmr1.c: 78: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  5180  0669  0817               	movf	23,w	;volatile
  5181  066A  00D8               	movwf	_timer1ReloadVal+1	;volatile
  5182  066B  0816               	movf	22,w	;volatile
  5183  066C  00D7               	movwf	_timer1ReloadVal	;volatile
  5184                           
  5185                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
  5186  066D  1010               	bcf	16,0	;volatile
  5187                           
  5188                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
  5189  066E  0021               	movlb	1	; select bank1
  5190  066F  1410               	bsf	16,0	;volatile
  5191                           
  5192                           ;tmr1.c: 87: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  5193  0670  304D               	movlw	low _TMR1_DefaultInterruptHandler
  5194  0671  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  5195  0672  3007               	movlw	high _TMR1_DefaultInterruptHandler
  5196  0673  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  5197  0674  3187  2736         	fcall	_TMR1_SetInterruptHandler
  5198                           
  5199                           ;tmr1.c: 90: T1CON = 0x01;
  5200  0676  3001               	movlw	1
  5201  0677  0020               	movlb	0	; select bank0
  5202  0678  0098               	movwf	24	;volatile
  5203  0679  0008               	return
  5204  067A                     __end_of_TMR1_Initialize:	
  5205                           
  5206                           	psect	text6
  5207  0736                     __ptext6:	
  5208 ;; *************** function _TMR1_SetInterruptHandler *****************
  5209 ;; Defined at:
  5210 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  5213 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;		None
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      void 
  5218 ;; Registers used:
  5219 ;;		wreg
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;Total ram usage:        2 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    4
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_TMR1_Initialize
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _TMR1_SetInterruptHandler
  5241  0736                     _TMR1_SetInterruptHandler:	
  5242                           
  5243                           ;tmr1.c: 179: TMR1_InterruptHandler = InterruptHandler;
  5244                           
  5245                           ;incstack = 0
  5246                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  5247  0736  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  5248  0737  0020               	movlb	0	; select bank0
  5249  0738  00D6               	movwf	_TMR1_InterruptHandler+1
  5250  0739  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  5251  073A  00D5               	movwf	_TMR1_InterruptHandler
  5252  073B  0008               	return
  5253  073C                     __end_of_TMR1_SetInterruptHandler:	
  5254                           
  5255                           	psect	text7
  5256  067A                     __ptext7:	
  5257 ;; *************** function _TMR0_Initialize *****************
  5258 ;; Defined at:
  5259 ;;		line 68 in file "mcc_generated_files/tmr0.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2, status,0, pclath, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:    5
  5280 ;; This function calls:
  5281 ;;		_TMR0_SetInterruptHandler
  5282 ;; This function is called by:
  5283 ;;		_SYSTEM_Initialize
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _TMR0_Initialize
  5289  067A                     _TMR0_Initialize:	
  5290                           
  5291                           ;tmr0.c: 73: OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | 0xD7 & 0x3F);
  5292                           
  5293                           ;incstack = 0
  5294                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5295  067A  0021               	movlb	1	; select bank1
  5296  067B  0815               	movf	21,w	;volatile
  5297  067C  39C0               	andlw	192
  5298  067D  3817               	iorlw	23
  5299  067E  0095               	movwf	21	;volatile
  5300                           
  5301                           ;tmr0.c: 76: TMR0 = 0x9E;
  5302  067F  309E               	movlw	158
  5303  0680  0020               	movlb	0	; select bank0
  5304  0681  0095               	movwf	21	;volatile
  5305                           
  5306                           ;tmr0.c: 79: timer0ReloadVal= 158;
  5307  0682  309E               	movlw	158
  5308  0683  00F5               	movwf	??_TMR0_Initialize
  5309  0684  0875               	movf	??_TMR0_Initialize,w
  5310  0685  00DB               	movwf	_timer0ReloadVal	;volatile
  5311                           
  5312                           ;tmr0.c: 82: INTCONbits.TMR0IF = 0;
  5313  0686  110B               	bcf	11,2	;volatile
  5314                           
  5315                           ;tmr0.c: 85: INTCONbits.TMR0IE = 1;
  5316  0687  168B               	bsf	11,5	;volatile
  5317                           
  5318                           ;tmr0.c: 88: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  5319  0688  304E               	movlw	low _TMR0_DefaultInterruptHandler
  5320  0689  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5321  068A  3007               	movlw	high _TMR0_DefaultInterruptHandler
  5322  068B  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5323  068C  3187  273C         	fcall	_TMR0_SetInterruptHandler
  5324  068E  0008               	return
  5325  068F                     __end_of_TMR0_Initialize:	
  5326                           
  5327                           	psect	text8
  5328  073C                     __ptext8:	
  5329 ;; *************** function _TMR0_SetInterruptHandler *****************
  5330 ;; Defined at:
  5331 ;;		line 144 in file "mcc_generated_files/tmr0.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  5334 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;		None
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  1    wreg      void 
  5339 ;; Registers used:
  5340 ;;		wreg
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5350 ;;Total ram usage:        2 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    4
  5353 ;; This function calls:
  5354 ;;		Nothing
  5355 ;; This function is called by:
  5356 ;;		_TMR0_Initialize
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function _TMR0_SetInterruptHandler
  5362  073C                     _TMR0_SetInterruptHandler:	
  5363                           
  5364                           ;tmr0.c: 145: TMR0_InterruptHandler = InterruptHandler;
  5365                           
  5366                           ;incstack = 0
  5367                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5368  073C  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5369  073D  0020               	movlb	0	; select bank0
  5370  073E  00DA               	movwf	_TMR0_InterruptHandler+1
  5371  073F  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5372  0740  00D9               	movwf	_TMR0_InterruptHandler
  5373  0741  0008               	return
  5374  0742                     __end_of_TMR0_SetInterruptHandler:	
  5375                           
  5376                           	psect	text9
  5377  05CB                     __ptext9:	
  5378 ;; *************** function _PIN_MANAGER_Initialize *****************
  5379 ;; Defined at:
  5380 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used:    1
  5400 ;; Hardware stack levels required when called:    4
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_SYSTEM_Initialize
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           
  5409                           ;psect for function _PIN_MANAGER_Initialize
  5410  05CB                     _PIN_MANAGER_Initialize:	
  5411                           
  5412                           ;pin_manager.c: 62: LATA = 0x02;
  5413                           
  5414                           ;incstack = 0
  5415                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5416  05CB  3002               	movlw	2
  5417  05CC  0022               	movlb	2	; select bank2
  5418  05CD  008C               	movwf	12	;volatile
  5419                           
  5420                           ;pin_manager.c: 63: LATB = 0xE0;
  5421  05CE  30E0               	movlw	224
  5422  05CF  008D               	movwf	13	;volatile
  5423                           
  5424                           ;pin_manager.c: 64: LATC = 0xFE;
  5425  05D0  30FE               	movlw	254
  5426  05D1  008E               	movwf	14	;volatile
  5427                           
  5428                           ;pin_manager.c: 69: TRISA = 0x05;
  5429  05D2  3005               	movlw	5
  5430  05D3  0021               	movlb	1	; select bank1
  5431  05D4  008C               	movwf	12	;volatile
  5432                           
  5433                           ;pin_manager.c: 70: TRISB = 0x10;
  5434  05D5  3010               	movlw	16
  5435  05D6  008D               	movwf	13	;volatile
  5436                           
  5437                           ;pin_manager.c: 71: TRISC = 0x01;
  5438  05D7  3001               	movlw	1
  5439  05D8  008E               	movwf	14	;volatile
  5440                           
  5441                           ;pin_manager.c: 76: ANSELC = 0x01;
  5442  05D9  3001               	movlw	1
  5443  05DA  0023               	movlb	3	; select bank3
  5444  05DB  008E               	movwf	14	;volatile
  5445                           
  5446                           ;pin_manager.c: 77: ANSELB = 0x10;
  5447  05DC  3010               	movlw	16
  5448  05DD  008D               	movwf	13	;volatile
  5449                           
  5450                           ;pin_manager.c: 78: ANSELA = 0x11;
  5451  05DE  3011               	movlw	17
  5452  05DF  008C               	movwf	12	;volatile
  5453                           
  5454                           ;pin_manager.c: 83: WPUB = 0x00;
  5455  05E0  0024               	movlb	4	; select bank4
  5456  05E1  018D               	clrf	13	;volatile
  5457                           
  5458                           ;pin_manager.c: 84: WPUA = 0x00;
  5459  05E2  018C               	clrf	12	;volatile
  5460                           
  5461                           ;pin_manager.c: 85: WPUC = 0x00;
  5462  05E3  018E               	clrf	14	;volatile
  5463                           
  5464                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
  5465  05E4  0021               	movlb	1	; select bank1
  5466  05E5  1795               	bsf	21,7	;volatile
  5467                           
  5468                           ;pin_manager.c: 91: ODCONA = 0x00;
  5469  05E6  0025               	movlb	5	; select bank5
  5470  05E7  018C               	clrf	12	;volatile
  5471                           
  5472                           ;pin_manager.c: 92: ODCONB = 0x00;
  5473  05E8  018D               	clrf	13	;volatile
  5474                           
  5475                           ;pin_manager.c: 93: ODCONC = 0x00;
  5476  05E9  018E               	clrf	14	;volatile
  5477                           
  5478                           ;pin_manager.c: 101: INTCONbits.IOCIE = 1;
  5479  05EA  158B               	bsf	11,3	;volatile
  5480                           
  5481                           ;pin_manager.c: 104: INTPPS = 0x02;
  5482  05EB  3002               	movlw	2
  5483  05EC  003C               	movlb	28	; select bank28
  5484  05ED  0090               	movwf	16	;volatile
  5485  05EE  0008               	return
  5486  05EF                     __end_of_PIN_MANAGER_Initialize:	
  5487                           
  5488                           	psect	text10
  5489  0716                     __ptext10:	
  5490 ;; *************** function _OSCILLATOR_Initialize *****************
  5491 ;; Defined at:
  5492 ;;		line 60 in file "mcc_generated_files/mcc.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;		None
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;		None
  5497 ;; Return value:  Size  Location     Type
  5498 ;;                  1    wreg      void 
  5499 ;; Registers used:
  5500 ;;		wreg, status,2
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;Total ram usage:        0 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; Hardware stack levels required when called:    4
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_SYSTEM_Initialize
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           
  5521                           ;psect for function _OSCILLATOR_Initialize
  5522  0716                     _OSCILLATOR_Initialize:	
  5523                           
  5524                           ;mcc.c: 63: OSCCON = 0x60;
  5525                           
  5526                           ;incstack = 0
  5527                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  5528  0716  3060               	movlw	96
  5529  0717  0021               	movlb	1	; select bank1
  5530  0718  0099               	movwf	25	;volatile
  5531                           
  5532                           ;mcc.c: 65: OSCTUNE = 0x00;
  5533  0719  0198               	clrf	24	;volatile
  5534                           
  5535                           ;mcc.c: 67: BORCON = 0x00;
  5536  071A  0022               	movlb	2	; select bank2
  5537  071B  0196               	clrf	22	;volatile
  5538  071C  0008               	return
  5539  071D                     __end_of_OSCILLATOR_Initialize:	
  5540                           
  5541                           	psect	text11
  5542  0700                     __ptext11:	
  5543 ;; *************** function _EXT_INT_Initialize *****************
  5544 ;; Defined at:
  5545 ;;		line 78 in file "mcc_generated_files/ext_int.c"
  5546 ;; Parameters:    Size  Location     Type
  5547 ;;		None
  5548 ;; Auto vars:     Size  Location     Type
  5549 ;;		None
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    wreg      void 
  5552 ;; Registers used:
  5553 ;;		wreg, status,2, status,0, pclath, cstack
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5563 ;;Total ram usage:        0 bytes
  5564 ;; Hardware stack levels used:    1
  5565 ;; Hardware stack levels required when called:    5
  5566 ;; This function calls:
  5567 ;;		_INT_SetInterruptHandler
  5568 ;; This function is called by:
  5569 ;;		_SYSTEM_Initialize
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           
  5574                           ;psect for function _EXT_INT_Initialize
  5575  0700                     _EXT_INT_Initialize:	
  5576                           
  5577                           ;ext_int.c: 83: (INTCONbits.INTF = 0);
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _EXT_INT_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5581  0700  108B               	bcf	11,1	;volatile
  5582                           
  5583                           ;ext_int.c: 84: (OPTION_REGbits.INTEDG = 1);
  5584  0701  0021               	movlb	1	; select bank1
  5585  0702  1715               	bsf	21,6	;volatile
  5586                           
  5587                           ;ext_int.c: 86: INT_SetInterruptHandler(INT_DefaultInterruptHandler);
  5588  0703  3050               	movlw	low _INT_DefaultInterruptHandler
  5589  0704  00F3               	movwf	INT_SetInterruptHandler@InterruptHandler
  5590  0705  3007               	movlw	high _INT_DefaultInterruptHandler
  5591  0706  00F4               	movwf	INT_SetInterruptHandler@InterruptHandler+1
  5592  0707  3187  2742         	fcall	_INT_SetInterruptHandler
  5593                           
  5594                           ;ext_int.c: 87: (INTCONbits.INTE = 1);
  5595  0709  160B               	bsf	11,4	;volatile
  5596  070A  0008               	return
  5597  070B                     __end_of_EXT_INT_Initialize:	
  5598                           
  5599                           	psect	text12
  5600  0742                     __ptext12:	
  5601 ;; *************** function _INT_SetInterruptHandler *****************
  5602 ;; Defined at:
  5603 ;;		line 69 in file "mcc_generated_files/ext_int.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  5606 ;;		 -> INT_DefaultInterruptHandler(1), 
  5607 ;; Auto vars:     Size  Location     Type
  5608 ;;		None
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  1    wreg      void 
  5611 ;; Registers used:
  5612 ;;		wreg
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;Total ram usage:        2 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    4
  5625 ;; This function calls:
  5626 ;;		Nothing
  5627 ;; This function is called by:
  5628 ;;		_EXT_INT_Initialize
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           
  5632                           
  5633                           ;psect for function _INT_SetInterruptHandler
  5634  0742                     _INT_SetInterruptHandler:	
  5635                           
  5636                           ;ext_int.c: 70: INT_InterruptHandler = InterruptHandler;
  5637                           
  5638                           ;incstack = 0
  5639                           ; Regs used in _INT_SetInterruptHandler: [wreg]
  5640  0742  0874               	movf	INT_SetInterruptHandler@InterruptHandler+1,w
  5641  0743  0020               	movlb	0	; select bank0
  5642  0744  00D0               	movwf	_INT_InterruptHandler+1
  5643  0745  0873               	movf	INT_SetInterruptHandler@InterruptHandler,w
  5644  0746  00CF               	movwf	_INT_InterruptHandler
  5645  0747  0008               	return
  5646  0748                     __end_of_INT_SetInterruptHandler:	
  5647                           
  5648                           	psect	text13
  5649  05EF                     __ptext13:	
  5650 ;; *************** function _Print *****************
  5651 ;; Defined at:
  5652 ;;		line 121 in file "main.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  str             1    wreg     PTR unsigned char 
  5655 ;;		 -> display_data_2(11), display_data_1(16), 
  5656 ;; Auto vars:     Size  Location     Type
  5657 ;;  str             1    3[BANK0 ] PTR unsigned char 
  5658 ;;		 -> display_data_2(11), display_data_1(16), 
  5659 ;; Return value:  Size  Location     Type
  5660 ;;                  1    wreg      void 
  5661 ;; Registers used:
  5662 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5663 ;; Tracked objects:
  5664 ;;		On entry : 0/0
  5665 ;;		On exit  : 0/0
  5666 ;;		Unchanged: 0/0
  5667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5669 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5671 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5672 ;;Total ram usage:        2 bytes
  5673 ;; Hardware stack levels used:    1
  5674 ;; Hardware stack levels required when called:    5
  5675 ;; This function calls:
  5676 ;;		_LCDSendData
  5677 ;; This function is called by:
  5678 ;;		_main
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function _Print
  5684  05EF                     _Print:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in _Print: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5688                           ;Print@str stored from wreg
  5689  05EF  0020               	movlb	0	; select bank0
  5690  05F0  00A3               	movwf	Print@str
  5691  05F1                     l1912:	
  5692                           ;main.c: 123: while(*str !='\0')
  5693                           
  5694  05F1  0020               	movlb	0	; select bank0
  5695  05F2  0823               	movf	Print@str,w
  5696  05F3  0086               	movwf	6
  5697  05F4  0187               	clrf	7
  5698  05F5  0801               	movf	1,w
  5699  05F6  1903               	btfsc	3,2
  5700  05F7  0008               	return
  5701                           
  5702                           ;main.c: 124: {
  5703                           ;main.c: 125: LCDSendData(1,*str);
  5704  05F8  3001               	movlw	1
  5705  05F9  00F3               	movwf	LCDSendData@RS
  5706  05FA  3000               	movlw	0
  5707  05FB  00F4               	movwf	LCDSendData@RS+1
  5708  05FC  0823               	movf	Print@str,w
  5709  05FD  0086               	movwf	6
  5710  05FE  0187               	clrf	7
  5711  05FF  0801               	movf	1,w
  5712  0600  00A2               	movwf	??_Print
  5713  0601  0822               	movf	??_Print,w
  5714  0602  00F5               	movwf	LCDSendData@value
  5715  0603  3182  22EB  3185   	fcall	_LCDSendData
  5716                           
  5717                           ;main.c: 126: str++;
  5718  0606  3001               	movlw	1
  5719  0607  0020               	movlb	0	; select bank0
  5720  0608  00A2               	movwf	??_Print
  5721  0609  0822               	movf	??_Print,w
  5722  060A  07A3               	addwf	Print@str,f
  5723                           
  5724                           ;main.c: 127: _delay((unsigned long)((1)*(2000000/4000.0)));
  5725  060B  30A6               	movlw	166
  5726  060C                     u1957:	
  5727  060C  0B89               	decfsz	9,f
  5728  060D  2E0C               	goto	u1957
  5729  060E  3200               	nop2
  5730  060F  2DF1               	goto	l1912
  5731  0610                     __end_of_Print:	
  5732                           
  5733                           	psect	text14
  5734  0433                     __ptext14:	
  5735 ;; *************** function _LCDInit *****************
  5736 ;; Defined at:
  5737 ;;		line 86 in file "main.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;		None
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, pclath, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5753 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;Total ram usage:        1 bytes
  5756 ;; Hardware stack levels used:    1
  5757 ;; Hardware stack levels required when called:    5
  5758 ;; This function calls:
  5759 ;;		_LCDSendData
  5760 ;; This function is called by:
  5761 ;;		_main
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           
  5766                           ;psect for function _LCDInit
  5767  0433                     _LCDInit:	
  5768                           
  5769                           ;main.c: 88: LATBbits.LATB6 = 0;
  5770                           
  5771                           ;incstack = 0
  5772                           ; Regs used in _LCDInit: [wreg+status,2+status,0+pclath+cstack]
  5773  0433  0022               	movlb	2	; select bank2
  5774  0434  130D               	bcf	13,6	;volatile
  5775                           
  5776                           ;main.c: 89: LATBbits.LATB7 = 0;
  5777  0435  138D               	bcf	13,7	;volatile
  5778                           
  5779                           ;main.c: 90: LATBbits.LATB5 = 0;
  5780  0436  128D               	bcf	13,5	;volatile
  5781                           
  5782                           ;main.c: 91: LATCbits.LATC1 = 0;
  5783  0437  108E               	bcf	14,1	;volatile
  5784                           
  5785                           ;main.c: 92: LATCbits.LATC2 = 0;
  5786  0438  110E               	bcf	14,2	;volatile
  5787                           
  5788                           ;main.c: 93: LATCbits.LATC3 = 0;
  5789  0439  118E               	bcf	14,3	;volatile
  5790                           
  5791                           ;main.c: 94: LATCbits.LATC4 = 0;
  5792  043A  120E               	bcf	14,4	;volatile
  5793                           
  5794                           ;main.c: 95: LATCbits.LATC5 = 0;
  5795  043B  128E               	bcf	14,5	;volatile
  5796                           
  5797                           ;main.c: 96: LATCbits.LATC6 = 0;
  5798  043C  130E               	bcf	14,6	;volatile
  5799                           
  5800                           ;main.c: 97: LATCbits.LATC7 = 0;
  5801  043D  138E               	bcf	14,7	;volatile
  5802                           
  5803                           ;main.c: 99: _delay((unsigned long)((50)*(2000000/4000.0)));
  5804  043E  3021               	movlw	33
  5805  043F  0020               	movlb	0	; select bank0
  5806  0440  00A2               	movwf	??_LCDInit
  5807  0441  3076               	movlw	118
  5808  0442                     u1967:	
  5809  0442  0B89               	decfsz	9,f
  5810  0443  2C42               	goto	u1967
  5811  0444  0BA2               	decfsz	??_LCDInit,f
  5812  0445  2C42               	goto	u1967
  5813  0446  0000               	nop
  5814                           
  5815                           ;main.c: 100: LCDSendData(0, 0b00111000);
  5816  0447  3000               	movlw	0
  5817  0448  00F3               	movwf	LCDSendData@RS
  5818  0449  00F4               	movwf	LCDSendData@RS+1
  5819  044A  3038               	movlw	56
  5820  044B  0020               	movlb	0	; select bank0
  5821  044C  00A2               	movwf	??_LCDInit
  5822  044D  0822               	movf	??_LCDInit,w
  5823  044E  00F5               	movwf	LCDSendData@value
  5824  044F  3182  22EB  3184   	fcall	_LCDSendData
  5825                           
  5826                           ;main.c: 103: _delay((unsigned long)((50)*(2000000/4000.0)));
  5827  0452  3021               	movlw	33
  5828  0453  0020               	movlb	0	; select bank0
  5829  0454  00A2               	movwf	??_LCDInit
  5830  0455  3076               	movlw	118
  5831  0456                     u1977:	
  5832  0456  0B89               	decfsz	9,f
  5833  0457  2C56               	goto	u1977
  5834  0458  0BA2               	decfsz	??_LCDInit,f
  5835  0459  2C56               	goto	u1977
  5836  045A  0000               	nop
  5837                           
  5838                           ;main.c: 104: LCDSendData(0, 0b00111000);
  5839  045B  3000               	movlw	0
  5840  045C  00F3               	movwf	LCDSendData@RS
  5841  045D  00F4               	movwf	LCDSendData@RS+1
  5842  045E  3038               	movlw	56
  5843  045F  0020               	movlb	0	; select bank0
  5844  0460  00A2               	movwf	??_LCDInit
  5845  0461  0822               	movf	??_LCDInit,w
  5846  0462  00F5               	movwf	LCDSendData@value
  5847  0463  3182  22EB  3184   	fcall	_LCDSendData
  5848                           
  5849                           ;main.c: 107: _delay((unsigned long)((50)*(2000000/4000.0)));
  5850  0466  3021               	movlw	33
  5851  0467  0020               	movlb	0	; select bank0
  5852  0468  00A2               	movwf	??_LCDInit
  5853  0469  3076               	movlw	118
  5854  046A                     u1987:	
  5855  046A  0B89               	decfsz	9,f
  5856  046B  2C6A               	goto	u1987
  5857  046C  0BA2               	decfsz	??_LCDInit,f
  5858  046D  2C6A               	goto	u1987
  5859  046E  0000               	nop
  5860                           
  5861                           ;main.c: 108: LCDSendData(0, 0b00111000);
  5862  046F  3000               	movlw	0
  5863  0470  00F3               	movwf	LCDSendData@RS
  5864  0471  00F4               	movwf	LCDSendData@RS+1
  5865  0472  3038               	movlw	56
  5866  0473  0020               	movlb	0	; select bank0
  5867  0474  00A2               	movwf	??_LCDInit
  5868  0475  0822               	movf	??_LCDInit,w
  5869  0476  00F5               	movwf	LCDSendData@value
  5870  0477  3182  22EB  3184   	fcall	_LCDSendData
  5871                           
  5872                           ;main.c: 111: _delay((unsigned long)((50)*(2000000/4000.0)));
  5873  047A  3021               	movlw	33
  5874  047B  0020               	movlb	0	; select bank0
  5875  047C  00A2               	movwf	??_LCDInit
  5876  047D  3076               	movlw	118
  5877  047E                     u1997:	
  5878  047E  0B89               	decfsz	9,f
  5879  047F  2C7E               	goto	u1997
  5880  0480  0BA2               	decfsz	??_LCDInit,f
  5881  0481  2C7E               	goto	u1997
  5882  0482  0000               	nop
  5883                           
  5884                           ;main.c: 112: LCDSendData(0, 0b00111000);
  5885  0483  3000               	movlw	0
  5886  0484  00F3               	movwf	LCDSendData@RS
  5887  0485  00F4               	movwf	LCDSendData@RS+1
  5888  0486  3038               	movlw	56
  5889  0487  0020               	movlb	0	; select bank0
  5890  0488  00A2               	movwf	??_LCDInit
  5891  0489  0822               	movf	??_LCDInit,w
  5892  048A  00F5               	movwf	LCDSendData@value
  5893  048B  3182  22EB  3184   	fcall	_LCDSendData
  5894                           
  5895                           ;main.c: 113: LCDSendData(0, 0b00001111);
  5896  048E  3000               	movlw	0
  5897  048F  00F3               	movwf	LCDSendData@RS
  5898  0490  00F4               	movwf	LCDSendData@RS+1
  5899  0491  300F               	movlw	15
  5900  0492  0020               	movlb	0	; select bank0
  5901  0493  00A2               	movwf	??_LCDInit
  5902  0494  0822               	movf	??_LCDInit,w
  5903  0495  00F5               	movwf	LCDSendData@value
  5904  0496  3182  22EB  3184   	fcall	_LCDSendData
  5905                           
  5906                           ;main.c: 114: LCDSendData(0, 0b00000001);
  5907  0499  3000               	movlw	0
  5908  049A  00F3               	movwf	LCDSendData@RS
  5909  049B  00F4               	movwf	LCDSendData@RS+1
  5910  049C  01F5               	clrf	LCDSendData@value
  5911  049D  0AF5               	incf	LCDSendData@value,f
  5912  049E  3182  22EB  3184   	fcall	_LCDSendData
  5913                           
  5914                           ;main.c: 115: LCDSendData(0, 0b00000110);
  5915  04A1  3000               	movlw	0
  5916  04A2  00F3               	movwf	LCDSendData@RS
  5917  04A3  00F4               	movwf	LCDSendData@RS+1
  5918  04A4  3006               	movlw	6
  5919  04A5  0020               	movlb	0	; select bank0
  5920  04A6  00A2               	movwf	??_LCDInit
  5921  04A7  0822               	movf	??_LCDInit,w
  5922  04A8  00F5               	movwf	LCDSendData@value
  5923  04A9  3182  22EB         	fcall	_LCDSendData
  5924  04AB  0008               	return
  5925  04AC                     __end_of_LCDInit:	
  5926                           
  5927                           	psect	text15
  5928  02EB                     __ptext15:	
  5929 ;; *************** function _LCDSendData *****************
  5930 ;; Defined at:
  5931 ;;		line 62 in file "main.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  RS              2    3[COMMON] int 
  5934 ;;  value           1    5[COMMON] unsigned char 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;		None
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  1    wreg      void 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5946 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5948 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5949 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5950 ;;Total ram usage:        5 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    4
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_LCDInit
  5957 ;;		_Print
  5958 ;;		_main
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           
  5963                           ;psect for function _LCDSendData
  5964  02EB                     _LCDSendData:	
  5965                           
  5966                           ;main.c: 64: LATBbits.LATB5 = value & 1;
  5967                           
  5968                           ;incstack = 0
  5969                           ; Regs used in _LCDSendData: [wreg+status,2+status,0]
  5970  02EB  0875               	movf	LCDSendData@value,w
  5971  02EC  3901               	andlw	1
  5972  02ED  0020               	movlb	0	; select bank0
  5973  02EE  00A0               	movwf	??_LCDSendData
  5974  02EF  0EA0               	swapf	??_LCDSendData,f
  5975  02F0  0DA0               	rlf	??_LCDSendData,f
  5976  02F1  0022               	movlb	2	; select bank2
  5977  02F2  080D               	movf	13,w	;volatile
  5978  02F3  0020               	movlb	0	; select bank0
  5979  02F4  0620               	xorwf	??_LCDSendData,w
  5980  02F5  39DF               	andlw	-33
  5981  02F6  0620               	xorwf	??_LCDSendData,w
  5982  02F7  0022               	movlb	2	; select bank2
  5983  02F8  008D               	movwf	13	;volatile
  5984                           
  5985                           ;main.c: 65: LATCbits.LATC1 = (value & 2) >> 1;
  5986  02F9  3675               	lsrf	LCDSendData@value,w
  5987  02FA  3901               	andlw	1
  5988  02FB  0020               	movlb	0	; select bank0
  5989  02FC  00A0               	movwf	??_LCDSendData
  5990  02FD  0DA0               	rlf	??_LCDSendData,f
  5991  02FE  0022               	movlb	2	; select bank2
  5992  02FF  080E               	movf	14,w	;volatile
  5993  0300  0020               	movlb	0	; select bank0
  5994  0301  0620               	xorwf	??_LCDSendData,w
  5995  0302  39FD               	andlw	-3
  5996  0303  0620               	xorwf	??_LCDSendData,w
  5997  0304  0022               	movlb	2	; select bank2
  5998  0305  008E               	movwf	14	;volatile
  5999                           
  6000                           ;main.c: 66: LATCbits.LATC2 = (value & 4) >> 2;
  6001  0306  0875               	movf	LCDSendData@value,w
  6002  0307  0020               	movlb	0	; select bank0
  6003  0308  00A0               	movwf	??_LCDSendData
  6004  0309  3002               	movlw	2
  6005  030A                     u1025:	
  6006  030A  36A0               	lsrf	??_LCDSendData,f
  6007  030B  0B89               	decfsz	9,f
  6008  030C  2B0A               	goto	u1025
  6009  030D  0820               	movf	??_LCDSendData,w
  6010  030E  3901               	andlw	1
  6011  030F  00A1               	movwf	??_LCDSendData+1
  6012  0310  0DA1               	rlf	??_LCDSendData+1,f
  6013  0311  0DA1               	rlf	??_LCDSendData+1,f
  6014  0312  0022               	movlb	2	; select bank2
  6015  0313  080E               	movf	14,w	;volatile
  6016  0314  0020               	movlb	0	; select bank0
  6017  0315  0621               	xorwf	??_LCDSendData+1,w
  6018  0316  39FB               	andlw	-5
  6019  0317  0621               	xorwf	??_LCDSendData+1,w
  6020  0318  0022               	movlb	2	; select bank2
  6021  0319  008E               	movwf	14	;volatile
  6022                           
  6023                           ;main.c: 67: LATCbits.LATC3 = (value & 8) >> 3;
  6024  031A  0875               	movf	LCDSendData@value,w
  6025  031B  0020               	movlb	0	; select bank0
  6026  031C  00A0               	movwf	??_LCDSendData
  6027  031D  3003               	movlw	3
  6028  031E                     u1035:	
  6029  031E  36A0               	lsrf	??_LCDSendData,f
  6030  031F  0B89               	decfsz	9,f
  6031  0320  2B1E               	goto	u1035
  6032  0321  0820               	movf	??_LCDSendData,w
  6033  0322  3901               	andlw	1
  6034  0323  00A1               	movwf	??_LCDSendData+1
  6035  0324  0DA1               	rlf	??_LCDSendData+1,f
  6036  0325  0DA1               	rlf	??_LCDSendData+1,f
  6037  0326  0DA1               	rlf	??_LCDSendData+1,f
  6038  0327  0022               	movlb	2	; select bank2
  6039  0328  080E               	movf	14,w	;volatile
  6040  0329  0020               	movlb	0	; select bank0
  6041  032A  0621               	xorwf	??_LCDSendData+1,w
  6042  032B  39F7               	andlw	-9
  6043  032C  0621               	xorwf	??_LCDSendData+1,w
  6044  032D  0022               	movlb	2	; select bank2
  6045  032E  008E               	movwf	14	;volatile
  6046                           
  6047                           ;main.c: 68: LATCbits.LATC4 = (value & 16) >> 4;
  6048  032F  0875               	movf	LCDSendData@value,w
  6049  0330  0020               	movlb	0	; select bank0
  6050  0331  00A0               	movwf	??_LCDSendData
  6051  0332  3004               	movlw	4
  6052  0333                     u1045:	
  6053  0333  36A0               	lsrf	??_LCDSendData,f
  6054  0334  0B89               	decfsz	9,f
  6055  0335  2B33               	goto	u1045
  6056  0336  0820               	movf	??_LCDSendData,w
  6057  0337  3901               	andlw	1
  6058  0338  00A1               	movwf	??_LCDSendData+1
  6059  0339  0EA1               	swapf	??_LCDSendData+1,f
  6060  033A  0022               	movlb	2	; select bank2
  6061  033B  080E               	movf	14,w	;volatile
  6062  033C  0020               	movlb	0	; select bank0
  6063  033D  0621               	xorwf	??_LCDSendData+1,w
  6064  033E  39EF               	andlw	-17
  6065  033F  0621               	xorwf	??_LCDSendData+1,w
  6066  0340  0022               	movlb	2	; select bank2
  6067  0341  008E               	movwf	14	;volatile
  6068                           
  6069                           ;main.c: 69: LATCbits.LATC5 = (value & 32) >> 5;
  6070  0342  0875               	movf	LCDSendData@value,w
  6071  0343  0020               	movlb	0	; select bank0
  6072  0344  00A0               	movwf	??_LCDSendData
  6073  0345  3005               	movlw	5
  6074  0346                     u1055:	
  6075  0346  36A0               	lsrf	??_LCDSendData,f
  6076  0347  0B89               	decfsz	9,f
  6077  0348  2B46               	goto	u1055
  6078  0349  0820               	movf	??_LCDSendData,w
  6079  034A  3901               	andlw	1
  6080  034B  00A1               	movwf	??_LCDSendData+1
  6081  034C  0EA1               	swapf	??_LCDSendData+1,f
  6082  034D  0DA1               	rlf	??_LCDSendData+1,f
  6083  034E  0022               	movlb	2	; select bank2
  6084  034F  080E               	movf	14,w	;volatile
  6085  0350  0020               	movlb	0	; select bank0
  6086  0351  0621               	xorwf	??_LCDSendData+1,w
  6087  0352  39DF               	andlw	-33
  6088  0353  0621               	xorwf	??_LCDSendData+1,w
  6089  0354  0022               	movlb	2	; select bank2
  6090  0355  008E               	movwf	14	;volatile
  6091                           
  6092                           ;main.c: 70: LATCbits.LATC6 = (value & 64) >> 6;
  6093  0356  0875               	movf	LCDSendData@value,w
  6094  0357  0020               	movlb	0	; select bank0
  6095  0358  00A0               	movwf	??_LCDSendData
  6096  0359  3006               	movlw	6
  6097  035A                     u1065:	
  6098  035A  36A0               	lsrf	??_LCDSendData,f
  6099  035B  0B89               	decfsz	9,f
  6100  035C  2B5A               	goto	u1065
  6101  035D  0820               	movf	??_LCDSendData,w
  6102  035E  3901               	andlw	1
  6103  035F  00A1               	movwf	??_LCDSendData+1
  6104  0360  0EA1               	swapf	??_LCDSendData+1,f
  6105  0361  0DA1               	rlf	??_LCDSendData+1,f
  6106  0362  0DA1               	rlf	??_LCDSendData+1,f
  6107  0363  0022               	movlb	2	; select bank2
  6108  0364  080E               	movf	14,w	;volatile
  6109  0365  0020               	movlb	0	; select bank0
  6110  0366  0621               	xorwf	??_LCDSendData+1,w
  6111  0367  39BF               	andlw	-65
  6112  0368  0621               	xorwf	??_LCDSendData+1,w
  6113  0369  0022               	movlb	2	; select bank2
  6114  036A  008E               	movwf	14	;volatile
  6115                           
  6116                           ;main.c: 71: LATCbits.LATC7 = (value & 128) >> 7;
  6117  036B  0875               	movf	LCDSendData@value,w
  6118  036C  0020               	movlb	0	; select bank0
  6119  036D  00A0               	movwf	??_LCDSendData
  6120  036E  3007               	movlw	7
  6121  036F                     u1075:	
  6122  036F  36A0               	lsrf	??_LCDSendData,f
  6123  0370  0B89               	decfsz	9,f
  6124  0371  2B6F               	goto	u1075
  6125  0372  0820               	movf	??_LCDSendData,w
  6126  0373  3901               	andlw	1
  6127  0374  00A1               	movwf	??_LCDSendData+1
  6128  0375  0CA1               	rrf	??_LCDSendData+1,f
  6129  0376  0CA1               	rrf	??_LCDSendData+1,f
  6130  0377  0022               	movlb	2	; select bank2
  6131  0378  080E               	movf	14,w	;volatile
  6132  0379  0020               	movlb	0	; select bank0
  6133  037A  0621               	xorwf	??_LCDSendData+1,w
  6134  037B  397F               	andlw	-129
  6135  037C  0621               	xorwf	??_LCDSendData+1,w
  6136  037D  0022               	movlb	2	; select bank2
  6137  037E  008E               	movwf	14	;volatile
  6138                           
  6139                           ;main.c: 72: if(RS > 0)
  6140  037F  0874               	movf	LCDSendData@RS+1,w
  6141  0380  3A80               	xorlw	128
  6142  0381  0020               	movlb	0	; select bank0
  6143  0382  00A0               	movwf	??_LCDSendData
  6144  0383  3080               	movlw	128
  6145  0384  0220               	subwf	??_LCDSendData,w
  6146  0385  1D03               	skipz
  6147  0386  2B89               	goto	u1085
  6148  0387  3001               	movlw	1
  6149  0388  0273               	subwf	LCDSendData@RS,w
  6150  0389                     u1085:	
  6151  0389  1C03               	skipc
  6152  038A  2B8E               	goto	l351
  6153                           
  6154                           ;main.c: 73: {
  6155                           ;main.c: 74: LATBbits.LATB7 = 1;
  6156  038B  0022               	movlb	2	; select bank2
  6157  038C  178D               	bsf	13,7	;volatile
  6158                           
  6159                           ;main.c: 75: }
  6160  038D  2B90               	goto	l353
  6161  038E                     l351:	
  6162                           
  6163                           ;main.c: 76: else
  6164                           ;main.c: 77: {
  6165                           ;main.c: 78: LATBbits.LATB7 = 0;
  6166  038E  0022               	movlb	2	; select bank2
  6167  038F  138D               	bcf	13,7	;volatile
  6168  0390                     l353:	
  6169                           ;main.c: 79: }
  6170                           ;main.c: 80: do { LATBbits.LATB6 = 1; } while(0);
  6171                           
  6172  0390  170D               	bsf	13,6	;volatile
  6173                           
  6174                           ;main.c: 81: _delay((unsigned long)((1)*(2000000/4000.0)));
  6175  0391  30A6               	movlw	166
  6176  0392                     u2007:	
  6177  0392  0B89               	decfsz	9,f
  6178  0393  2B92               	goto	u2007
  6179  0394  3200               	nop2
  6180                           
  6181                           ;main.c: 82: do { LATBbits.LATB6 = 0; } while(0);
  6182  0395  0022               	movlb	2	; select bank2
  6183  0396  130D               	bcf	13,6	;volatile
  6184                           
  6185                           ;main.c: 83: _delay((unsigned long)((10)*(2000000/4000.0)));
  6186  0397  3007               	movlw	7
  6187  0398  0020               	movlb	0	; select bank0
  6188  0399  00A0               	movwf	??_LCDSendData
  6189  039A  307D               	movlw	125
  6190  039B                     u2017:	
  6191  039B  0B89               	decfsz	9,f
  6192  039C  2B9B               	goto	u2017
  6193  039D  0BA0               	decfsz	??_LCDSendData,f
  6194  039E  2B9B               	goto	u2017
  6195  039F  0008               	return
  6196  03A0                     __end_of_LCDSendData:	
  6197                           
  6198                           	psect	text16
  6199  0061                     __ptext16:	
  6200 ;; *************** function _Data_Toseg *****************
  6201 ;; Defined at:
  6202 ;;		line 131 in file "main.c"
  6203 ;; Parameters:    Size  Location     Type
  6204 ;;		None
  6205 ;; Auto vars:     Size  Location     Type
  6206 ;;		None
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  1    wreg      void 
  6209 ;; Registers used:
  6210 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;Total ram usage:        1 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    5
  6223 ;; This function calls:
  6224 ;;		___lldiv
  6225 ;;		___llmod
  6226 ;;		___lwdiv
  6227 ;;		___lwmod
  6228 ;; This function is called by:
  6229 ;;		_main
  6230 ;; This function uses a non-reentrant model
  6231 ;;
  6232                           
  6233                           
  6234                           ;psect for function _Data_Toseg
  6235  0061                     _Data_Toseg:	
  6236                           
  6237                           ;main.c: 133: display_data_1[2] = (gBoxCntStruct.SmallBoxCnt%1000/100)+0x30;
  6238                           
  6239                           ;incstack = 0
  6240                           ; Regs used in _Data_Toseg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6241  0061  3064               	movlw	100
  6242  0062  0020               	movlb	0	; select bank0
  6243  0063  00A4               	movwf	___lwdiv@divisor
  6244  0064  3000               	movlw	0
  6245  0065  00A5               	movwf	___lwdiv@divisor+1
  6246  0066  0842               	movf	_gBoxCntStruct+10,w
  6247  0067  00A3               	movwf	___lwmod@dividend+1
  6248  0068  0841               	movf	_gBoxCntStruct+9,w
  6249  0069  00A2               	movwf	___lwmod@dividend
  6250  006A  30E8               	movlw	232
  6251  006B  00A0               	movwf	___lwmod@divisor
  6252  006C  3003               	movlw	3
  6253  006D  00A1               	movwf	___lwmod@divisor+1
  6254  006E  3185  2577  3180   	fcall	___lwmod
  6255  0071  0020               	movlb	0	; select bank0
  6256  0072  0821               	movf	?___lwmod+1,w
  6257  0073  00A7               	movwf	___lwdiv@dividend+1
  6258  0074  0820               	movf	?___lwmod,w
  6259  0075  00A6               	movwf	___lwdiv@dividend
  6260  0076  3185  2542  3180   	fcall	___lwdiv
  6261  0079  0020               	movlb	0	; select bank0
  6262  007A  0824               	movf	?___lwdiv,w
  6263  007B  3E30               	addlw	48
  6264  007C  00B5               	movwf	??_Data_Toseg
  6265  007D  0835               	movf	??_Data_Toseg,w
  6266  007E  0021               	movlb	1	; select bank1
  6267  007F  00A2               	movwf	(_display_data_1^(0+128)+2)
  6268                           
  6269                           ;main.c: 134: display_data_1[3] = (gBoxCntStruct.SmallBoxCnt%100/10)+0x30;
  6270  0080  300A               	movlw	10
  6271  0081  0020               	movlb	0	; select bank0
  6272  0082  00A4               	movwf	___lwdiv@divisor
  6273  0083  3000               	movlw	0
  6274  0084  00A5               	movwf	___lwdiv@divisor+1
  6275  0085  0842               	movf	_gBoxCntStruct+10,w
  6276  0086  00A3               	movwf	___lwmod@dividend+1
  6277  0087  0841               	movf	_gBoxCntStruct+9,w
  6278  0088  00A2               	movwf	___lwmod@dividend
  6279  0089  3064               	movlw	100
  6280  008A  00A0               	movwf	___lwmod@divisor
  6281  008B  3000               	movlw	0
  6282  008C  00A1               	movwf	___lwmod@divisor+1
  6283  008D  3185  2577  3180   	fcall	___lwmod
  6284  0090  0020               	movlb	0	; select bank0
  6285  0091  0821               	movf	?___lwmod+1,w
  6286  0092  00A7               	movwf	___lwdiv@dividend+1
  6287  0093  0820               	movf	?___lwmod,w
  6288  0094  00A6               	movwf	___lwdiv@dividend
  6289  0095  3185  2542  3180   	fcall	___lwdiv
  6290  0098  0020               	movlb	0	; select bank0
  6291  0099  0824               	movf	?___lwdiv,w
  6292  009A  3E30               	addlw	48
  6293  009B  00B5               	movwf	??_Data_Toseg
  6294  009C  0835               	movf	??_Data_Toseg,w
  6295  009D  0021               	movlb	1	; select bank1
  6296  009E  00A3               	movwf	(_display_data_1^(0+128)+3)
  6297                           
  6298                           ;main.c: 135: display_data_1[4] = (gBoxCntStruct.SmallBoxCnt%10)+0x30;
  6299  009F  300A               	movlw	10
  6300  00A0  0020               	movlb	0	; select bank0
  6301  00A1  00A0               	movwf	___lwmod@divisor
  6302  00A2  3000               	movlw	0
  6303  00A3  00A1               	movwf	___lwmod@divisor+1
  6304  00A4  0842               	movf	_gBoxCntStruct+10,w
  6305  00A5  00A3               	movwf	___lwmod@dividend+1
  6306  00A6  0841               	movf	_gBoxCntStruct+9,w
  6307  00A7  00A2               	movwf	___lwmod@dividend
  6308  00A8  3185  2577  3180   	fcall	___lwmod
  6309  00AB  0020               	movlb	0	; select bank0
  6310  00AC  0820               	movf	?___lwmod,w
  6311  00AD  3E30               	addlw	48
  6312  00AE  00B5               	movwf	??_Data_Toseg
  6313  00AF  0835               	movf	??_Data_Toseg,w
  6314  00B0  0021               	movlb	1	; select bank1
  6315  00B1  00A4               	movwf	(_display_data_1^(0+128)+4)
  6316                           
  6317                           ;main.c: 137: display_data_1[7] = (gBoxCntStruct.MiddleBoxCnt%1000/100)+0x30;
  6318  00B2  3064               	movlw	100
  6319  00B3  0020               	movlb	0	; select bank0
  6320  00B4  00A4               	movwf	___lwdiv@divisor
  6321  00B5  3000               	movlw	0
  6322  00B6  00A5               	movwf	___lwdiv@divisor+1
  6323  00B7  0844               	movf	_gBoxCntStruct+12,w
  6324  00B8  00A3               	movwf	___lwmod@dividend+1
  6325  00B9  0843               	movf	_gBoxCntStruct+11,w
  6326  00BA  00A2               	movwf	___lwmod@dividend
  6327  00BB  30E8               	movlw	232
  6328  00BC  00A0               	movwf	___lwmod@divisor
  6329  00BD  3003               	movlw	3
  6330  00BE  00A1               	movwf	___lwmod@divisor+1
  6331  00BF  3185  2577  3180   	fcall	___lwmod
  6332  00C2  0020               	movlb	0	; select bank0
  6333  00C3  0821               	movf	?___lwmod+1,w
  6334  00C4  00A7               	movwf	___lwdiv@dividend+1
  6335  00C5  0820               	movf	?___lwmod,w
  6336  00C6  00A6               	movwf	___lwdiv@dividend
  6337  00C7  3185  2542  3180   	fcall	___lwdiv
  6338  00CA  0020               	movlb	0	; select bank0
  6339  00CB  0824               	movf	?___lwdiv,w
  6340  00CC  3E30               	addlw	48
  6341  00CD  00B5               	movwf	??_Data_Toseg
  6342  00CE  0835               	movf	??_Data_Toseg,w
  6343  00CF  0021               	movlb	1	; select bank1
  6344  00D0  00A7               	movwf	(_display_data_1^(0+128)+7)
  6345                           
  6346                           ;main.c: 138: display_data_1[8] = (gBoxCntStruct.MiddleBoxCnt%100/10)+0x30;
  6347  00D1  300A               	movlw	10
  6348  00D2  0020               	movlb	0	; select bank0
  6349  00D3  00A4               	movwf	___lwdiv@divisor
  6350  00D4  3000               	movlw	0
  6351  00D5  00A5               	movwf	___lwdiv@divisor+1
  6352  00D6  0844               	movf	_gBoxCntStruct+12,w
  6353  00D7  00A3               	movwf	___lwmod@dividend+1
  6354  00D8  0843               	movf	_gBoxCntStruct+11,w
  6355  00D9  00A2               	movwf	___lwmod@dividend
  6356  00DA  3064               	movlw	100
  6357  00DB  00A0               	movwf	___lwmod@divisor
  6358  00DC  3000               	movlw	0
  6359  00DD  00A1               	movwf	___lwmod@divisor+1
  6360  00DE  3185  2577  3180   	fcall	___lwmod
  6361  00E1  0020               	movlb	0	; select bank0
  6362  00E2  0821               	movf	?___lwmod+1,w
  6363  00E3  00A7               	movwf	___lwdiv@dividend+1
  6364  00E4  0820               	movf	?___lwmod,w
  6365  00E5  00A6               	movwf	___lwdiv@dividend
  6366  00E6  3185  2542  3180   	fcall	___lwdiv
  6367  00E9  0020               	movlb	0	; select bank0
  6368  00EA  0824               	movf	?___lwdiv,w
  6369  00EB  3E30               	addlw	48
  6370  00EC  00B5               	movwf	??_Data_Toseg
  6371  00ED  0835               	movf	??_Data_Toseg,w
  6372  00EE  0021               	movlb	1	; select bank1
  6373  00EF  00A8               	movwf	(_display_data_1^(0+128)+8)
  6374                           
  6375                           ;main.c: 139: display_data_1[9] = (gBoxCntStruct.MiddleBoxCnt%10)+0x30;
  6376  00F0  300A               	movlw	10
  6377  00F1  0020               	movlb	0	; select bank0
  6378  00F2  00A0               	movwf	___lwmod@divisor
  6379  00F3  3000               	movlw	0
  6380  00F4  00A1               	movwf	___lwmod@divisor+1
  6381  00F5  0844               	movf	_gBoxCntStruct+12,w
  6382  00F6  00A3               	movwf	___lwmod@dividend+1
  6383  00F7  0843               	movf	_gBoxCntStruct+11,w
  6384  00F8  00A2               	movwf	___lwmod@dividend
  6385  00F9  3185  2577  3180   	fcall	___lwmod
  6386  00FC  0020               	movlb	0	; select bank0
  6387  00FD  0820               	movf	?___lwmod,w
  6388  00FE  3E30               	addlw	48
  6389  00FF  00B5               	movwf	??_Data_Toseg
  6390  0100  0835               	movf	??_Data_Toseg,w
  6391  0101  0021               	movlb	1	; select bank1
  6392  0102  00A9               	movwf	(_display_data_1^(0+128)+9)
  6393                           
  6394                           ;main.c: 141: display_data_1[12] = (gBoxCntStruct.LargeBoxCnt%1000/100)+0x30;
  6395  0103  3064               	movlw	100
  6396  0104  0020               	movlb	0	; select bank0
  6397  0105  00A4               	movwf	___lwdiv@divisor
  6398  0106  3000               	movlw	0
  6399  0107  00A5               	movwf	___lwdiv@divisor+1
  6400  0108  0846               	movf	_gBoxCntStruct+14,w
  6401  0109  00A3               	movwf	___lwmod@dividend+1
  6402  010A  0845               	movf	_gBoxCntStruct+13,w
  6403  010B  00A2               	movwf	___lwmod@dividend
  6404  010C  30E8               	movlw	232
  6405  010D  00A0               	movwf	___lwmod@divisor
  6406  010E  3003               	movlw	3
  6407  010F  00A1               	movwf	___lwmod@divisor+1
  6408  0110  3185  2577  3180   	fcall	___lwmod
  6409  0113  0020               	movlb	0	; select bank0
  6410  0114  0821               	movf	?___lwmod+1,w
  6411  0115  00A7               	movwf	___lwdiv@dividend+1
  6412  0116  0820               	movf	?___lwmod,w
  6413  0117  00A6               	movwf	___lwdiv@dividend
  6414  0118  3185  2542  3180   	fcall	___lwdiv
  6415  011B  0020               	movlb	0	; select bank0
  6416  011C  0824               	movf	?___lwdiv,w
  6417  011D  3E30               	addlw	48
  6418  011E  00B5               	movwf	??_Data_Toseg
  6419  011F  0835               	movf	??_Data_Toseg,w
  6420  0120  0021               	movlb	1	; select bank1
  6421  0121  00AC               	movwf	(_display_data_1^(0+128)+12)
  6422                           
  6423                           ;main.c: 142: display_data_1[13] = (gBoxCntStruct.LargeBoxCnt%100/10)+0x30;
  6424  0122  300A               	movlw	10
  6425  0123  0020               	movlb	0	; select bank0
  6426  0124  00A4               	movwf	___lwdiv@divisor
  6427  0125  3000               	movlw	0
  6428  0126  00A5               	movwf	___lwdiv@divisor+1
  6429  0127  0846               	movf	_gBoxCntStruct+14,w
  6430  0128  00A3               	movwf	___lwmod@dividend+1
  6431  0129  0845               	movf	_gBoxCntStruct+13,w
  6432  012A  00A2               	movwf	___lwmod@dividend
  6433  012B  3064               	movlw	100
  6434  012C  00A0               	movwf	___lwmod@divisor
  6435  012D  3000               	movlw	0
  6436  012E  00A1               	movwf	___lwmod@divisor+1
  6437  012F  3185  2577  3180   	fcall	___lwmod
  6438  0132  0020               	movlb	0	; select bank0
  6439  0133  0821               	movf	?___lwmod+1,w
  6440  0134  00A7               	movwf	___lwdiv@dividend+1
  6441  0135  0820               	movf	?___lwmod,w
  6442  0136  00A6               	movwf	___lwdiv@dividend
  6443  0137  3185  2542  3180   	fcall	___lwdiv
  6444  013A  0020               	movlb	0	; select bank0
  6445  013B  0824               	movf	?___lwdiv,w
  6446  013C  3E30               	addlw	48
  6447  013D  00B5               	movwf	??_Data_Toseg
  6448  013E  0835               	movf	??_Data_Toseg,w
  6449  013F  0021               	movlb	1	; select bank1
  6450  0140  00AD               	movwf	(_display_data_1^(0+128)+13)
  6451                           
  6452                           ;main.c: 143: display_data_1[14] = (gBoxCntStruct.LargeBoxCnt%10)+0x30;
  6453  0141  300A               	movlw	10
  6454  0142  0020               	movlb	0	; select bank0
  6455  0143  00A0               	movwf	___lwmod@divisor
  6456  0144  3000               	movlw	0
  6457  0145  00A1               	movwf	___lwmod@divisor+1
  6458  0146  0846               	movf	_gBoxCntStruct+14,w
  6459  0147  00A3               	movwf	___lwmod@dividend+1
  6460  0148  0845               	movf	_gBoxCntStruct+13,w
  6461  0149  00A2               	movwf	___lwmod@dividend
  6462  014A  3185  2577  3180   	fcall	___lwmod
  6463  014D  0020               	movlb	0	; select bank0
  6464  014E  0820               	movf	?___lwmod,w
  6465  014F  3E30               	addlw	48
  6466  0150  00B5               	movwf	??_Data_Toseg
  6467  0151  0835               	movf	??_Data_Toseg,w
  6468  0152  0021               	movlb	1	; select bank1
  6469  0153  00AE               	movwf	(_display_data_1^(0+128)+14)
  6470                           
  6471                           ;main.c: 145: display_data_2[2] = (gBoxCntStruct.BoxSum%1000/100)+0x30;
  6472  0154  3000               	movlw	0
  6473  0155  0020               	movlb	0	; select bank0
  6474  0156  00AB               	movwf	___lldiv@divisor+3
  6475  0157  3000               	movlw	0
  6476  0158  00AA               	movwf	___lldiv@divisor+2
  6477  0159  3000               	movlw	0
  6478  015A  00A9               	movwf	___lldiv@divisor+1
  6479  015B  3064               	movlw	100
  6480  015C  00A8               	movwf	___lldiv@divisor
  6481  015D  3011               	movlw	17
  6482  015E  3E38               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  6483  015F  0086               	movwf	6
  6484  0160  0187               	clrf	7
  6485  0161  3F40               	moviw [0]fsr1
  6486  0162  00A4               	movwf	___llmod@dividend
  6487  0163  3F41               	moviw [1]fsr1
  6488  0164  00A5               	movwf	___llmod@dividend+1
  6489  0165  3F42               	moviw [2]fsr1
  6490  0166  00A6               	movwf	___llmod@dividend+2
  6491  0167  3F43               	moviw [3]fsr1
  6492  0168  00A7               	movwf	___llmod@dividend+3
  6493  0169  3000               	movlw	0
  6494  016A  00A3               	movwf	___llmod@divisor+3
  6495  016B  3000               	movlw	0
  6496  016C  00A2               	movwf	___llmod@divisor+2
  6497  016D  3003               	movlw	3
  6498  016E  00A1               	movwf	___llmod@divisor+1
  6499  016F  30E8               	movlw	232
  6500  0170  00A0               	movwf	___llmod@divisor
  6501  0171  3184  24FF  3180   	fcall	___llmod
  6502  0174  0020               	movlb	0	; select bank0
  6503  0175  0823               	movf	?___llmod+3,w
  6504  0176  00AF               	movwf	___lldiv@dividend+3
  6505  0177  0822               	movf	?___llmod+2,w
  6506  0178  00AE               	movwf	___lldiv@dividend+2
  6507  0179  0821               	movf	?___llmod+1,w
  6508  017A  00AD               	movwf	___lldiv@dividend+1
  6509  017B  0820               	movf	?___llmod,w
  6510  017C  00AC               	movwf	___lldiv@dividend
  6511  017D  3184  24AC  3180   	fcall	___lldiv
  6512  0180  0020               	movlb	0	; select bank0
  6513  0181  0828               	movf	?___lldiv,w
  6514  0182  3E30               	addlw	48
  6515  0183  00B5               	movwf	??_Data_Toseg
  6516  0184  0835               	movf	??_Data_Toseg,w
  6517  0185  00DE               	movwf	_display_data_2+2
  6518                           
  6519                           ;main.c: 146: display_data_2[3] = (gBoxCntStruct.BoxSum%100/10)+0x30;
  6520  0186  3000               	movlw	0
  6521  0187  00AB               	movwf	___lldiv@divisor+3
  6522  0188  3000               	movlw	0
  6523  0189  00AA               	movwf	___lldiv@divisor+2
  6524  018A  3000               	movlw	0
  6525  018B  00A9               	movwf	___lldiv@divisor+1
  6526  018C  300A               	movlw	10
  6527  018D  00A8               	movwf	___lldiv@divisor
  6528  018E  3011               	movlw	17
  6529  018F  3E38               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  6530  0190  0086               	movwf	6
  6531  0191  0187               	clrf	7
  6532  0192  3F40               	moviw [0]fsr1
  6533  0193  00A4               	movwf	___llmod@dividend
  6534  0194  3F41               	moviw [1]fsr1
  6535  0195  00A5               	movwf	___llmod@dividend+1
  6536  0196  3F42               	moviw [2]fsr1
  6537  0197  00A6               	movwf	___llmod@dividend+2
  6538  0198  3F43               	moviw [3]fsr1
  6539  0199  00A7               	movwf	___llmod@dividend+3
  6540  019A  3000               	movlw	0
  6541  019B  00A3               	movwf	___llmod@divisor+3
  6542  019C  3000               	movlw	0
  6543  019D  00A2               	movwf	___llmod@divisor+2
  6544  019E  3000               	movlw	0
  6545  019F  00A1               	movwf	___llmod@divisor+1
  6546  01A0  3064               	movlw	100
  6547  01A1  00A0               	movwf	___llmod@divisor
  6548  01A2  3184  24FF  3180   	fcall	___llmod
  6549  01A5  0020               	movlb	0	; select bank0
  6550  01A6  0823               	movf	?___llmod+3,w
  6551  01A7  00AF               	movwf	___lldiv@dividend+3
  6552  01A8  0822               	movf	?___llmod+2,w
  6553  01A9  00AE               	movwf	___lldiv@dividend+2
  6554  01AA  0821               	movf	?___llmod+1,w
  6555  01AB  00AD               	movwf	___lldiv@dividend+1
  6556  01AC  0820               	movf	?___llmod,w
  6557  01AD  00AC               	movwf	___lldiv@dividend
  6558  01AE  3184  24AC  3180   	fcall	___lldiv
  6559  01B1  0020               	movlb	0	; select bank0
  6560  01B2  0828               	movf	?___lldiv,w
  6561  01B3  3E30               	addlw	48
  6562  01B4  00B5               	movwf	??_Data_Toseg
  6563  01B5  0835               	movf	??_Data_Toseg,w
  6564  01B6  00DF               	movwf	_display_data_2+3
  6565                           
  6566                           ;main.c: 147: display_data_2[4] = (gBoxCntStruct.BoxSum%10)+0x30;
  6567  01B7  3000               	movlw	0
  6568  01B8  00A3               	movwf	___llmod@divisor+3
  6569  01B9  3000               	movlw	0
  6570  01BA  00A2               	movwf	___llmod@divisor+2
  6571  01BB  3000               	movlw	0
  6572  01BC  00A1               	movwf	___llmod@divisor+1
  6573  01BD  300A               	movlw	10
  6574  01BE  00A0               	movwf	___llmod@divisor
  6575  01BF  3011               	movlw	17
  6576  01C0  3E38               	addlw	(low (_gBoxCntStruct| 0))& (0+255)
  6577  01C1  0086               	movwf	6
  6578  01C2  0187               	clrf	7
  6579  01C3  3F40               	moviw [0]fsr1
  6580  01C4  00A4               	movwf	___llmod@dividend
  6581  01C5  3F41               	moviw [1]fsr1
  6582  01C6  00A5               	movwf	___llmod@dividend+1
  6583  01C7  3F42               	moviw [2]fsr1
  6584  01C8  00A6               	movwf	___llmod@dividend+2
  6585  01C9  3F43               	moviw [3]fsr1
  6586  01CA  00A7               	movwf	___llmod@dividend+3
  6587  01CB  3184  24FF  3180   	fcall	___llmod
  6588  01CE  0020               	movlb	0	; select bank0
  6589  01CF  0820               	movf	?___llmod,w
  6590  01D0  3E30               	addlw	48
  6591  01D1  00B5               	movwf	??_Data_Toseg
  6592  01D2  0835               	movf	??_Data_Toseg,w
  6593  01D3  00E0               	movwf	_display_data_2+4
  6594                           
  6595                           ;main.c: 149: display_data_2[7] = (gBoxCntStruct.JamCnt%1000/100)+0x30;
  6596  01D4  3064               	movlw	100
  6597  01D5  00A4               	movwf	___lwdiv@divisor
  6598  01D6  3000               	movlw	0
  6599  01D7  00A5               	movwf	___lwdiv@divisor+1
  6600  01D8  0848               	movf	_gBoxCntStruct+16,w
  6601  01D9  00A3               	movwf	___lwmod@dividend+1
  6602  01DA  0847               	movf	_gBoxCntStruct+15,w
  6603  01DB  00A2               	movwf	___lwmod@dividend
  6604  01DC  30E8               	movlw	232
  6605  01DD  00A0               	movwf	___lwmod@divisor
  6606  01DE  3003               	movlw	3
  6607  01DF  00A1               	movwf	___lwmod@divisor+1
  6608  01E0  3185  2577  3180   	fcall	___lwmod
  6609  01E3  0020               	movlb	0	; select bank0
  6610  01E4  0821               	movf	?___lwmod+1,w
  6611  01E5  00A7               	movwf	___lwdiv@dividend+1
  6612  01E6  0820               	movf	?___lwmod,w
  6613  01E7  00A6               	movwf	___lwdiv@dividend
  6614  01E8  3185  2542  3180   	fcall	___lwdiv
  6615  01EB  0020               	movlb	0	; select bank0
  6616  01EC  0824               	movf	?___lwdiv,w
  6617  01ED  3E30               	addlw	48
  6618  01EE  00B5               	movwf	??_Data_Toseg
  6619  01EF  0835               	movf	??_Data_Toseg,w
  6620  01F0  00E3               	movwf	_display_data_2+7
  6621                           
  6622                           ;main.c: 150: display_data_2[8] = (gBoxCntStruct.JamCnt%100/10)+0x30;
  6623  01F1  300A               	movlw	10
  6624  01F2  00A4               	movwf	___lwdiv@divisor
  6625  01F3  3000               	movlw	0
  6626  01F4  00A5               	movwf	___lwdiv@divisor+1
  6627  01F5  0848               	movf	_gBoxCntStruct+16,w
  6628  01F6  00A3               	movwf	___lwmod@dividend+1
  6629  01F7  0847               	movf	_gBoxCntStruct+15,w
  6630  01F8  00A2               	movwf	___lwmod@dividend
  6631  01F9  3064               	movlw	100
  6632  01FA  00A0               	movwf	___lwmod@divisor
  6633  01FB  3000               	movlw	0
  6634  01FC  00A1               	movwf	___lwmod@divisor+1
  6635  01FD  3185  2577  3180   	fcall	___lwmod
  6636  0200  0020               	movlb	0	; select bank0
  6637  0201  0821               	movf	?___lwmod+1,w
  6638  0202  00A7               	movwf	___lwdiv@dividend+1
  6639  0203  0820               	movf	?___lwmod,w
  6640  0204  00A6               	movwf	___lwdiv@dividend
  6641  0205  3185  2542  3180   	fcall	___lwdiv
  6642  0208  0020               	movlb	0	; select bank0
  6643  0209  0824               	movf	?___lwdiv,w
  6644  020A  3E30               	addlw	48
  6645  020B  00B5               	movwf	??_Data_Toseg
  6646  020C  0835               	movf	??_Data_Toseg,w
  6647  020D  00E4               	movwf	_display_data_2+8
  6648                           
  6649                           ;main.c: 151: display_data_2[9] = (gBoxCntStruct.JamCnt%10)+0x30;
  6650  020E  300A               	movlw	10
  6651  020F  00A0               	movwf	___lwmod@divisor
  6652  0210  3000               	movlw	0
  6653  0211  00A1               	movwf	___lwmod@divisor+1
  6654  0212  0848               	movf	_gBoxCntStruct+16,w
  6655  0213  00A3               	movwf	___lwmod@dividend+1
  6656  0214  0847               	movf	_gBoxCntStruct+15,w
  6657  0215  00A2               	movwf	___lwmod@dividend
  6658  0216  3185  2577         	fcall	___lwmod
  6659  0218  0020               	movlb	0	; select bank0
  6660  0219  0820               	movf	?___lwmod,w
  6661  021A  3E30               	addlw	48
  6662  021B  00B5               	movwf	??_Data_Toseg
  6663  021C  0835               	movf	??_Data_Toseg,w
  6664  021D  00E5               	movwf	_display_data_2+9
  6665  021E  0008               	return
  6666  021F                     __end_of_Data_Toseg:	
  6667                           
  6668                           	psect	text17
  6669  0577                     __ptext17:	
  6670 ;; *************** function ___lwmod *****************
  6671 ;; Defined at:
  6672 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  divisor         2    0[BANK0 ] unsigned int 
  6675 ;;  dividend        2    2[BANK0 ] unsigned int 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  counter         1    4[COMMON] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2    0[BANK0 ] unsigned int 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;Total ram usage:        6 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    4
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_Data_Toseg
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           
  6702                           ;psect for function ___lwmod
  6703  0577                     ___lwmod:	
  6704                           
  6705                           ;incstack = 0
  6706                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6707  0577  0020               	movlb	0	; select bank0
  6708  0578  0820               	movf	___lwmod@divisor,w
  6709  0579  0421               	iorwf	___lwmod@divisor+1,w
  6710  057A  1903               	btfsc	3,2
  6711  057B  2D9F               	goto	l1880
  6712  057C  01F4               	clrf	___lwmod@counter
  6713  057D  0AF4               	incf	___lwmod@counter,f
  6714  057E                     l1870:	
  6715  057E  1BA1               	btfsc	___lwmod@divisor+1,7
  6716  057F  2D8A               	goto	l1872
  6717  0580  3001               	movlw	1
  6718  0581                     u1735:	
  6719  0581  35A0               	lslf	___lwmod@divisor,f
  6720  0582  0DA1               	rlf	___lwmod@divisor+1,f
  6721  0583  0B89               	decfsz	9,f
  6722  0584  2D81               	goto	u1735
  6723  0585  3001               	movlw	1
  6724  0586  00F3               	movwf	??___lwmod
  6725  0587  0873               	movf	??___lwmod,w
  6726  0588  07F4               	addwf	___lwmod@counter,f
  6727  0589  2D7E               	goto	l1870
  6728  058A                     l1872:	
  6729  058A  0821               	movf	___lwmod@divisor+1,w
  6730  058B  0223               	subwf	___lwmod@dividend+1,w
  6731  058C  1D03               	skipz
  6732  058D  2D90               	goto	u1755
  6733  058E  0820               	movf	___lwmod@divisor,w
  6734  058F  0222               	subwf	___lwmod@dividend,w
  6735  0590                     u1755:	
  6736  0590  1C03               	skipc
  6737  0591  2D96               	goto	l1876
  6738  0592  0820               	movf	___lwmod@divisor,w
  6739  0593  02A2               	subwf	___lwmod@dividend,f
  6740  0594  0821               	movf	___lwmod@divisor+1,w
  6741  0595  3BA3               	subwfb	___lwmod@dividend+1,f
  6742  0596                     l1876:	
  6743  0596  3001               	movlw	1
  6744  0597                     u1765:	
  6745  0597  36A1               	lsrf	___lwmod@divisor+1,f
  6746  0598  0CA0               	rrf	___lwmod@divisor,f
  6747  0599  0B89               	decfsz	9,f
  6748  059A  2D97               	goto	u1765
  6749  059B  3001               	movlw	1
  6750  059C  02F4               	subwf	___lwmod@counter,f
  6751  059D  1D03               	btfss	3,2
  6752  059E  2D8A               	goto	l1872
  6753  059F                     l1880:	
  6754  059F  0823               	movf	___lwmod@dividend+1,w
  6755  05A0  00A1               	movwf	?___lwmod+1
  6756  05A1  0822               	movf	___lwmod@dividend,w
  6757  05A2  00A0               	movwf	?___lwmod
  6758  05A3  0008               	return
  6759  05A4                     __end_of___lwmod:	
  6760                           
  6761                           	psect	text18
  6762  0542                     __ptext18:	
  6763 ;; *************** function ___lwdiv *****************
  6764 ;; Defined at:
  6765 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  divisor         2    4[BANK0 ] unsigned int 
  6768 ;;  dividend        2    6[BANK0 ] unsigned int 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  quotient        2    9[BANK0 ] unsigned int 
  6771 ;;  counter         1    8[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    4[BANK0 ] unsigned int 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:        8 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    4
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_Data_Toseg
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function ___lwdiv
  6797  0542                     ___lwdiv:	
  6798                           
  6799                           ;incstack = 0
  6800                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6801  0542  0020               	movlb	0	; select bank0
  6802  0543  01A9               	clrf	___lwdiv@quotient
  6803  0544  01AA               	clrf	___lwdiv@quotient+1
  6804  0545  0824               	movf	___lwdiv@divisor,w
  6805  0546  0425               	iorwf	___lwdiv@divisor+1,w
  6806  0547  1903               	btfsc	3,2
  6807  0548  2D72               	goto	l1858
  6808  0549  01A8               	clrf	___lwdiv@counter
  6809  054A  0AA8               	incf	___lwdiv@counter,f
  6810  054B                     l1846:	
  6811  054B  1BA5               	btfsc	___lwdiv@divisor+1,7
  6812  054C  2D57               	goto	l1848
  6813  054D  3001               	movlw	1
  6814  054E                     u1665:	
  6815  054E  35A4               	lslf	___lwdiv@divisor,f
  6816  054F  0DA5               	rlf	___lwdiv@divisor+1,f
  6817  0550  0B89               	decfsz	9,f
  6818  0551  2D4E               	goto	u1665
  6819  0552  3001               	movlw	1
  6820  0553  00F5               	movwf	??___lwdiv
  6821  0554  0875               	movf	??___lwdiv,w
  6822  0555  07A8               	addwf	___lwdiv@counter,f
  6823  0556  2D4B               	goto	l1846
  6824  0557                     l1848:	
  6825  0557  3001               	movlw	1
  6826  0558                     u1685:	
  6827  0558  35A9               	lslf	___lwdiv@quotient,f
  6828  0559  0DAA               	rlf	___lwdiv@quotient+1,f
  6829  055A  0B89               	decfsz	9,f
  6830  055B  2D58               	goto	u1685
  6831  055C  0825               	movf	___lwdiv@divisor+1,w
  6832  055D  0227               	subwf	___lwdiv@dividend+1,w
  6833  055E  1D03               	skipz
  6834  055F  2D62               	goto	u1695
  6835  0560  0824               	movf	___lwdiv@divisor,w
  6836  0561  0226               	subwf	___lwdiv@dividend,w
  6837  0562                     u1695:	
  6838  0562  1C03               	skipc
  6839  0563  2D69               	goto	l1854
  6840  0564  0824               	movf	___lwdiv@divisor,w
  6841  0565  02A6               	subwf	___lwdiv@dividend,f
  6842  0566  0825               	movf	___lwdiv@divisor+1,w
  6843  0567  3BA7               	subwfb	___lwdiv@dividend+1,f
  6844  0568  1429               	bsf	___lwdiv@quotient,0
  6845  0569                     l1854:	
  6846  0569  3001               	movlw	1
  6847  056A                     u1705:	
  6848  056A  36A5               	lsrf	___lwdiv@divisor+1,f
  6849  056B  0CA4               	rrf	___lwdiv@divisor,f
  6850  056C  0B89               	decfsz	9,f
  6851  056D  2D6A               	goto	u1705
  6852  056E  3001               	movlw	1
  6853  056F  02A8               	subwf	___lwdiv@counter,f
  6854  0570  1D03               	btfss	3,2
  6855  0571  2D57               	goto	l1848
  6856  0572                     l1858:	
  6857  0572  082A               	movf	___lwdiv@quotient+1,w
  6858  0573  00A5               	movwf	?___lwdiv+1
  6859  0574  0829               	movf	___lwdiv@quotient,w
  6860  0575  00A4               	movwf	?___lwdiv
  6861  0576  0008               	return
  6862  0577                     __end_of___lwdiv:	
  6863                           
  6864                           	psect	text19
  6865  04FF                     __ptext19:	
  6866 ;; *************** function ___llmod *****************
  6867 ;; Defined at:
  6868 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
  6869 ;; Parameters:    Size  Location     Type
  6870 ;;  divisor         4    0[BANK0 ] unsigned long 
  6871 ;;  dividend        4    4[BANK0 ] unsigned long 
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  counter         1    4[COMMON] unsigned char 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  4    0[BANK0 ] unsigned long 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6883 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6884 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6886 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6887 ;;Total ram usage:       10 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    4
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_Data_Toseg
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           
  6898                           ;psect for function ___llmod
  6899  04FF                     ___llmod:	
  6900                           
  6901                           ;incstack = 0
  6902                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6903  04FF  0020               	movlb	0	; select bank0
  6904  0500  0823               	movf	___llmod@divisor+3,w
  6905  0501  0422               	iorwf	___llmod@divisor+2,w
  6906  0502  0421               	iorwf	___llmod@divisor+1,w
  6907  0503  0420               	iorwf	___llmod@divisor,w
  6908  0504  1903               	skipnz
  6909  0505  2D39               	goto	l1610
  6910  0506  01F4               	clrf	___llmod@counter
  6911  0507  0AF4               	incf	___llmod@counter,f
  6912  0508                     l1600:	
  6913  0508  1BA3               	btfsc	___llmod@divisor+3,7
  6914  0509  2D16               	goto	l1602
  6915  050A  3001               	movlw	1
  6916  050B                     u1175:	
  6917  050B  35A0               	lslf	___llmod@divisor,f
  6918  050C  0DA1               	rlf	___llmod@divisor+1,f
  6919  050D  0DA2               	rlf	___llmod@divisor+2,f
  6920  050E  0DA3               	rlf	___llmod@divisor+3,f
  6921  050F  0B89               	decfsz	9,f
  6922  0510  2D0B               	goto	u1175
  6923  0511  3001               	movlw	1
  6924  0512  00F3               	movwf	??___llmod
  6925  0513  0873               	movf	??___llmod,w
  6926  0514  07F4               	addwf	___llmod@counter,f
  6927  0515  2D08               	goto	l1600
  6928  0516                     l1602:	
  6929  0516  0823               	movf	___llmod@divisor+3,w
  6930  0517  0227               	subwf	___llmod@dividend+3,w
  6931  0518  1D03               	skipz
  6932  0519  2D24               	goto	u1195
  6933  051A  0822               	movf	___llmod@divisor+2,w
  6934  051B  0226               	subwf	___llmod@dividend+2,w
  6935  051C  1D03               	skipz
  6936  051D  2D24               	goto	u1195
  6937  051E  0821               	movf	___llmod@divisor+1,w
  6938  051F  0225               	subwf	___llmod@dividend+1,w
  6939  0520  1D03               	skipz
  6940  0521  2D24               	goto	u1195
  6941  0522  0820               	movf	___llmod@divisor,w
  6942  0523  0224               	subwf	___llmod@dividend,w
  6943  0524                     u1195:	
  6944  0524  1C03               	skipc
  6945  0525  2D2E               	goto	l1606
  6946  0526  0820               	movf	___llmod@divisor,w
  6947  0527  02A4               	subwf	___llmod@dividend,f
  6948  0528  0821               	movf	___llmod@divisor+1,w
  6949  0529  3BA5               	subwfb	___llmod@dividend+1,f
  6950  052A  0822               	movf	___llmod@divisor+2,w
  6951  052B  3BA6               	subwfb	___llmod@dividend+2,f
  6952  052C  0823               	movf	___llmod@divisor+3,w
  6953  052D  3BA7               	subwfb	___llmod@dividend+3,f
  6954  052E                     l1606:	
  6955  052E  3001               	movlw	1
  6956  052F                     u1205:	
  6957  052F  36A3               	lsrf	___llmod@divisor+3,f
  6958  0530  0CA2               	rrf	___llmod@divisor+2,f
  6959  0531  0CA1               	rrf	___llmod@divisor+1,f
  6960  0532  0CA0               	rrf	___llmod@divisor,f
  6961  0533  0B89               	decfsz	9,f
  6962  0534  2D2F               	goto	u1205
  6963  0535  3001               	movlw	1
  6964  0536  02F4               	subwf	___llmod@counter,f
  6965  0537  1D03               	btfss	3,2
  6966  0538  2D16               	goto	l1602
  6967  0539                     l1610:	
  6968  0539  0827               	movf	___llmod@dividend+3,w
  6969  053A  00A3               	movwf	?___llmod+3
  6970  053B  0826               	movf	___llmod@dividend+2,w
  6971  053C  00A2               	movwf	?___llmod+2
  6972  053D  0825               	movf	___llmod@dividend+1,w
  6973  053E  00A1               	movwf	?___llmod+1
  6974  053F  0824               	movf	___llmod@dividend,w
  6975  0540  00A0               	movwf	?___llmod
  6976  0541  0008               	return
  6977  0542                     __end_of___llmod:	
  6978                           
  6979                           	psect	text20
  6980  04AC                     __ptext20:	
  6981 ;; *************** function ___lldiv *****************
  6982 ;; Defined at:
  6983 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  divisor         4    8[BANK0 ] unsigned long 
  6986 ;;  dividend        4   12[BANK0 ] unsigned long 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  quotient        4   16[BANK0 ] unsigned long 
  6989 ;;  counter         1   20[BANK0 ] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  4    8[BANK0 ] unsigned long 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;Total ram usage:       14 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    4
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_Data_Toseg
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           
  7014                           ;psect for function ___lldiv
  7015  04AC                     ___lldiv:	
  7016                           
  7017                           ;incstack = 0
  7018                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7019  04AC  3000               	movlw	0
  7020  04AD  0020               	movlb	0	; select bank0
  7021  04AE  00B3               	movwf	___lldiv@quotient+3
  7022  04AF  3000               	movlw	0
  7023  04B0  00B2               	movwf	___lldiv@quotient+2
  7024  04B1  3000               	movlw	0
  7025  04B2  00B1               	movwf	___lldiv@quotient+1
  7026  04B3  3000               	movlw	0
  7027  04B4  00B0               	movwf	___lldiv@quotient
  7028  04B5  082B               	movf	___lldiv@divisor+3,w
  7029  04B6  042A               	iorwf	___lldiv@divisor+2,w
  7030  04B7  0429               	iorwf	___lldiv@divisor+1,w
  7031  04B8  0428               	iorwf	___lldiv@divisor,w
  7032  04B9  1903               	skipnz
  7033  04BA  2CF6               	goto	l1590
  7034  04BB  01B4               	clrf	___lldiv@counter
  7035  04BC  0AB4               	incf	___lldiv@counter,f
  7036  04BD                     l1576:	
  7037  04BD  1BAB               	btfsc	___lldiv@divisor+3,7
  7038  04BE  2CCB               	goto	l1578
  7039  04BF  3001               	movlw	1
  7040  04C0                     u1105:	
  7041  04C0  35A8               	lslf	___lldiv@divisor,f
  7042  04C1  0DA9               	rlf	___lldiv@divisor+1,f
  7043  04C2  0DAA               	rlf	___lldiv@divisor+2,f
  7044  04C3  0DAB               	rlf	___lldiv@divisor+3,f
  7045  04C4  0B89               	decfsz	9,f
  7046  04C5  2CC0               	goto	u1105
  7047  04C6  3001               	movlw	1
  7048  04C7  00F5               	movwf	??___lldiv
  7049  04C8  0875               	movf	??___lldiv,w
  7050  04C9  07B4               	addwf	___lldiv@counter,f
  7051  04CA  2CBD               	goto	l1576
  7052  04CB                     l1578:	
  7053  04CB  3001               	movlw	1
  7054  04CC                     u1125:	
  7055  04CC  35B0               	lslf	___lldiv@quotient,f
  7056  04CD  0DB1               	rlf	___lldiv@quotient+1,f
  7057  04CE  0DB2               	rlf	___lldiv@quotient+2,f
  7058  04CF  0DB3               	rlf	___lldiv@quotient+3,f
  7059  04D0  0B89               	decfsz	9,f
  7060  04D1  2CCC               	goto	u1125
  7061  04D2  082B               	movf	___lldiv@divisor+3,w
  7062  04D3  022F               	subwf	___lldiv@dividend+3,w
  7063  04D4  1D03               	skipz
  7064  04D5  2CE0               	goto	u1135
  7065  04D6  082A               	movf	___lldiv@divisor+2,w
  7066  04D7  022E               	subwf	___lldiv@dividend+2,w
  7067  04D8  1D03               	skipz
  7068  04D9  2CE0               	goto	u1135
  7069  04DA  0829               	movf	___lldiv@divisor+1,w
  7070  04DB  022D               	subwf	___lldiv@dividend+1,w
  7071  04DC  1D03               	skipz
  7072  04DD  2CE0               	goto	u1135
  7073  04DE  0828               	movf	___lldiv@divisor,w
  7074  04DF  022C               	subwf	___lldiv@dividend,w
  7075  04E0                     u1135:	
  7076  04E0  1C03               	skipc
  7077  04E1  2CEB               	goto	l1586
  7078  04E2  0828               	movf	___lldiv@divisor,w
  7079  04E3  02AC               	subwf	___lldiv@dividend,f
  7080  04E4  0829               	movf	___lldiv@divisor+1,w
  7081  04E5  3BAD               	subwfb	___lldiv@dividend+1,f
  7082  04E6  082A               	movf	___lldiv@divisor+2,w
  7083  04E7  3BAE               	subwfb	___lldiv@dividend+2,f
  7084  04E8  082B               	movf	___lldiv@divisor+3,w
  7085  04E9  3BAF               	subwfb	___lldiv@dividend+3,f
  7086  04EA  1430               	bsf	___lldiv@quotient,0
  7087  04EB                     l1586:	
  7088  04EB  3001               	movlw	1
  7089  04EC                     u1145:	
  7090  04EC  36AB               	lsrf	___lldiv@divisor+3,f
  7091  04ED  0CAA               	rrf	___lldiv@divisor+2,f
  7092  04EE  0CA9               	rrf	___lldiv@divisor+1,f
  7093  04EF  0CA8               	rrf	___lldiv@divisor,f
  7094  04F0  0B89               	decfsz	9,f
  7095  04F1  2CEC               	goto	u1145
  7096  04F2  3001               	movlw	1
  7097  04F3  02B4               	subwf	___lldiv@counter,f
  7098  04F4  1D03               	btfss	3,2
  7099  04F5  2CCB               	goto	l1578
  7100  04F6                     l1590:	
  7101  04F6  0833               	movf	___lldiv@quotient+3,w
  7102  04F7  00AB               	movwf	?___lldiv+3
  7103  04F8  0832               	movf	___lldiv@quotient+2,w
  7104  04F9  00AA               	movwf	?___lldiv+2
  7105  04FA  0831               	movf	___lldiv@quotient+1,w
  7106  04FB  00A9               	movwf	?___lldiv+1
  7107  04FC  0830               	movf	___lldiv@quotient,w
  7108  04FD  00A8               	movwf	?___lldiv
  7109  04FE  0008               	return
  7110  04FF                     __end_of___lldiv:	
  7111                           
  7112                           	psect	intentry
  7113  0004                     __pintentry:	
  7114 ;; *************** function _INTERRUPT_InterruptManager *****************
  7115 ;; Defined at:
  7116 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;		None
  7119 ;; Auto vars:     Size  Location     Type
  7120 ;;		None
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      void 
  7123 ;; Registers used:
  7124 ;;		wreg, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;Total ram usage:        1 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    3
  7137 ;; This function calls:
  7138 ;;		_INT_ISR
  7139 ;;		_PIN_MANAGER_IOC
  7140 ;;		_TMR0_ISR
  7141 ;;		_TMR1_ISR
  7142 ;;		_TMR3_ISR
  7143 ;; This function is called by:
  7144 ;;		Interrupt level 1
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148  0004                     _INTERRUPT_InterruptManager:	
  7149                           
  7150                           ;incstack = 0
  7151  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7152                           
  7153                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  7154  0005  3180               	pagesel	$
  7155  0006  0020               	movlb	0	; select bank0
  7156  0007  087F               	movf	127,w
  7157  0008  00F2               	movwf	??_INTERRUPT_InterruptManager
  7158                           
  7159                           ;interrupt_manager.c: 55: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  7160  0009  1A8B               	btfsc	11,5	;volatile
  7161  000A  1D0B               	btfss	11,2	;volatile
  7162  000B  2810               	goto	i1l162
  7163                           
  7164                           ;interrupt_manager.c: 56: {
  7165                           ;interrupt_manager.c: 57: TMR0_ISR();
  7166  000C  3187  271D  3180   	fcall	_TMR0_ISR
  7167                           
  7168                           ;interrupt_manager.c: 58: }
  7169  000F  2832               	goto	i1l174
  7170  0010                     i1l162:	
  7171                           
  7172                           ;interrupt_manager.c: 59: else if(INTCONbits.INTE == 1 && INTCONbits.INTF == 1)
  7173  0010  1A0B               	btfsc	11,4	;volatile
  7174  0011  1C8B               	btfss	11,1	;volatile
  7175  0012  2817               	goto	i1l164
  7176                           
  7177                           ;interrupt_manager.c: 60: {
  7178                           ;interrupt_manager.c: 61: INT_ISR();
  7179  0013  3187  2748  3180   	fcall	_INT_ISR
  7180                           
  7181                           ;interrupt_manager.c: 62: }
  7182  0016  2832               	goto	i1l174
  7183  0017                     i1l164:	
  7184                           
  7185                           ;interrupt_manager.c: 63: else if(INTCONbits.IOCIE == 1 && INTCONbits.IOCIF == 1)
  7186  0017  198B               	btfsc	11,3	;volatile
  7187  0018  1C0B               	btfss	11,0	;volatile
  7188  0019  281E               	goto	i1l166
  7189                           
  7190                           ;interrupt_manager.c: 64: {
  7191                           ;interrupt_manager.c: 65: PIN_MANAGER_IOC();
  7192  001A  3187  274F  3180   	fcall	_PIN_MANAGER_IOC
  7193                           
  7194                           ;interrupt_manager.c: 66: }
  7195  001D  2832               	goto	i1l174
  7196  001E                     i1l166:	
  7197                           
  7198                           ;interrupt_manager.c: 67: else if(INTCONbits.PEIE == 1)
  7199  001E  1F0B               	btfss	11,6	;volatile
  7200  001F  2832               	goto	i1l174
  7201                           
  7202                           ;interrupt_manager.c: 68: {
  7203                           ;interrupt_manager.c: 69: if(PIE5bits.TMR3IE == 1 && PIR5bits.TMR3IF == 1)
  7204  0020  0021               	movlb	1	; select bank1
  7205  0021  1F14               	btfss	20,6	;volatile
  7206  0022  282A               	goto	i1l169
  7207  0023  0020               	movlb	0	; select bank0
  7208  0024  1F14               	btfss	20,6	;volatile
  7209  0025  282A               	goto	i1l169
  7210                           
  7211                           ;interrupt_manager.c: 70: {
  7212                           ;interrupt_manager.c: 71: TMR3_ISR();
  7213  0026  3186  26DD  3180   	fcall	_TMR3_ISR
  7214                           
  7215                           ;interrupt_manager.c: 72: }
  7216  0029  2832               	goto	i1l174
  7217  002A                     i1l169:	
  7218                           
  7219                           ;interrupt_manager.c: 73: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7220  002A  0021               	movlb	1	; select bank1
  7221  002B  1C10               	btfss	16,0	;volatile
  7222  002C  2832               	goto	i1l174
  7223  002D  0020               	movlb	0	; select bank0
  7224  002E  1C10               	btfss	16,0	;volatile
  7225  002F  2832               	goto	i1l174
  7226                           
  7227                           ;interrupt_manager.c: 74: {
  7228                           ;interrupt_manager.c: 75: TMR1_ISR();
  7229  0030  3186  26E9         	fcall	_TMR1_ISR
  7230  0032                     i1l174:	
  7231                           ;interrupt_manager.c: 82: else
  7232                           ;interrupt_manager.c: 83: {
  7233                           
  7234                           ;interrupt_manager.c: 80: }
  7235                           ;interrupt_manager.c: 81: }
  7236                           
  7237                           ;interrupt_manager.c: 77: else
  7238                           ;interrupt_manager.c: 78: {
  7239                           
  7240                           ;interrupt_manager.c: 76: }
  7241                           
  7242  0032  0872               	movf	??_INTERRUPT_InterruptManager,w
  7243  0033  0020               	movlb	0	; select bank0
  7244  0034  00FF               	movwf	127
  7245  0035  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7246  0036  0009               	retfie
  7247  0037                     __end_of_INTERRUPT_InterruptManager:	
  7248                           
  7249                           	psect	text22
  7250  06DD                     __ptext22:	
  7251 ;; *************** function _TMR3_ISR *****************
  7252 ;; Defined at:
  7253 ;;		line 160 in file "mcc_generated_files/tmr3.c"
  7254 ;; Parameters:    Size  Location     Type
  7255 ;;		None
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, pclath, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7271 ;;Total ram usage:        0 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    2
  7274 ;; This function calls:
  7275 ;;		_TMR3_CallBack
  7276 ;;		_TMR3_WriteTimer
  7277 ;; This function is called by:
  7278 ;;		_INTERRUPT_InterruptManager
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           
  7283                           ;psect for function _TMR3_ISR
  7284  06DD                     _TMR3_ISR:	
  7285                           
  7286                           ;tmr3.c: 164: PIR5bits.TMR3IF = 0;
  7287                           
  7288                           ;incstack = 0
  7289                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
  7290  06DD  0020               	movlb	0	; select bank0
  7291  06DE  1314               	bcf	20,6	;volatile
  7292                           
  7293                           ;tmr3.c: 165: TMR3_WriteTimer(timer3ReloadVal);
  7294  06DF  0854               	movf	_timer3ReloadVal+1,w	;volatile
  7295  06E0  00F1               	movwf	TMR3_WriteTimer@timerVal+1
  7296  06E1  0853               	movf	_timer3ReloadVal,w	;volatile
  7297  06E2  00F0               	movwf	TMR3_WriteTimer@timerVal
  7298  06E3  3186  26B1  3186   	fcall	_TMR3_WriteTimer
  7299                           
  7300                           ;tmr3.c: 169: TMR3_CallBack();
  7301  06E6  3186  26CF         	fcall	_TMR3_CallBack
  7302  06E8  0008               	return
  7303  06E9                     __end_of_TMR3_ISR:	
  7304                           
  7305                           	psect	text23
  7306  06B1                     __ptext23:	
  7307 ;; *************** function _TMR3_WriteTimer *****************
  7308 ;; Defined at:
  7309 ;;		line 123 in file "mcc_generated_files/tmr3.c"
  7310 ;; Parameters:    Size  Location     Type
  7311 ;;  timerVal        2    0[COMMON] unsigned int 
  7312 ;; Auto vars:     Size  Location     Type
  7313 ;;		None
  7314 ;; Return value:  Size  Location     Type
  7315 ;;                  1    wreg      void 
  7316 ;; Registers used:
  7317 ;;		wreg, status,2
  7318 ;; Tracked objects:
  7319 ;;		On entry : 0/0
  7320 ;;		On exit  : 0/0
  7321 ;;		Unchanged: 0/0
  7322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7327 ;;Total ram usage:        2 bytes
  7328 ;; Hardware stack levels used:    1
  7329 ;; This function calls:
  7330 ;;		Nothing
  7331 ;; This function is called by:
  7332 ;;		_TMR3_ISR
  7333 ;;		_TMR3_Reload
  7334 ;; This function uses a non-reentrant model
  7335 ;;
  7336                           
  7337                           
  7338                           ;psect for function _TMR3_WriteTimer
  7339  06B1                     _TMR3_WriteTimer:	
  7340                           
  7341                           ;tmr3.c: 125: if (T3CONbits.T3SYNC == 1)
  7342                           
  7343                           ;incstack = 0
  7344                           ; Regs used in _TMR3_WriteTimer: [wreg+status,2]
  7345  06B1  0029               	movlb	9	; select bank9
  7346  06B2  1D15               	btfss	21,2	;volatile
  7347  06B3  2EBB               	goto	i1l1526
  7348                           
  7349                           ;tmr3.c: 126: {
  7350                           ;tmr3.c: 128: T3CONbits.TMR3ON = 0;
  7351  06B4  1015               	bcf	21,0	;volatile
  7352                           
  7353                           ;tmr3.c: 131: TMR3H = (timerVal >> 8);
  7354  06B5  0871               	movf	TMR3_WriteTimer@timerVal+1,w
  7355  06B6  0094               	movwf	20	;volatile
  7356                           
  7357                           ;tmr3.c: 132: TMR3L = timerVal;
  7358  06B7  0870               	movf	TMR3_WriteTimer@timerVal,w
  7359  06B8  0093               	movwf	19	;volatile
  7360                           
  7361                           ;tmr3.c: 135: T3CONbits.TMR3ON =1;
  7362  06B9  1415               	bsf	21,0	;volatile
  7363                           
  7364                           ;tmr3.c: 136: }
  7365  06BA  0008               	return
  7366  06BB                     i1l1526:	
  7367                           
  7368                           ;tmr3.c: 137: else
  7369                           ;tmr3.c: 138: {
  7370                           ;tmr3.c: 140: TMR3H = (timerVal >> 8);
  7371  06BB  0871               	movf	TMR3_WriteTimer@timerVal+1,w
  7372  06BC  0094               	movwf	20	;volatile
  7373                           
  7374                           ;tmr3.c: 141: TMR3L = timerVal;
  7375  06BD  0870               	movf	TMR3_WriteTimer@timerVal,w
  7376  06BE  0093               	movwf	19	;volatile
  7377  06BF  0008               	return
  7378  06C0                     __end_of_TMR3_WriteTimer:	
  7379                           
  7380                           	psect	text24
  7381  06CF                     __ptext24:	
  7382 ;; *************** function _TMR3_CallBack *****************
  7383 ;; Defined at:
  7384 ;;		line 172 in file "mcc_generated_files/tmr3.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;		None
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;		None
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1    wreg      void 
  7391 ;; Registers used:
  7392 ;;		wreg, status,2, status,0, pclath, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : 0/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:    1
  7405 ;; This function calls:
  7406 ;;		Absolute function
  7407 ;;		_TMR3_DefaultInterruptHandler
  7408 ;;		_bsp_TimerInterruptISRCallback
  7409 ;; This function is called by:
  7410 ;;		_TMR3_ISR
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _TMR3_CallBack
  7416  06CF                     _TMR3_CallBack:	
  7417                           
  7418                           ;tmr3.c: 175: bsp_TimerInterruptISRCallback();
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7422  06CF  3182  221F  3186   	fcall	_bsp_TimerInterruptISRCallback
  7423                           
  7424                           ;tmr3.c: 176: if(TMR3_InterruptHandler)
  7425  06D2  0020               	movlb	0	; select bank0
  7426  06D3  0851               	movf	_TMR3_InterruptHandler,w
  7427  06D4  0452               	iorwf	_TMR3_InterruptHandler+1,w
  7428  06D5  1903               	btfsc	3,2
  7429  06D6  0008               	return
  7430                           
  7431                           ;tmr3.c: 177: {
  7432                           ;tmr3.c: 178: TMR3_InterruptHandler();
  7433  06D7  0852               	movf	_TMR3_InterruptHandler+1,w
  7434  06D8  008A               	movwf	10
  7435  06D9  0851               	movf	_TMR3_InterruptHandler,w
  7436  06DA  000A               	callw
  7437  06DB  3186               	pagesel	$
  7438  06DC  0008               	return
  7439  06DD                     __end_of_TMR3_CallBack:	
  7440                           
  7441                           	psect	text25
  7442  021F                     __ptext25:	
  7443 ;; *************** function _bsp_TimerInterruptISRCallback *****************
  7444 ;; Defined at:
  7445 ;;		line 37 in file "bsp_counter.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;		None
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;		None
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      void 
  7452 ;; Registers used:
  7453 ;;		wreg, status,2, status,0
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7463 ;;Total ram usage:        0 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; This function calls:
  7466 ;;		Nothing
  7467 ;; This function is called by:
  7468 ;;		_TMR3_CallBack
  7469 ;; This function uses a non-reentrant model
  7470 ;;
  7471                           
  7472                           
  7473                           ;psect for function _bsp_TimerInterruptISRCallback
  7474  021F                     _bsp_TimerInterruptISRCallback:	
  7475                           
  7476                           ;bsp_counter.c: 39: if(0 == gBoxCntStruct.TimeCntStartFlag && 0 == gBoxCntStruct.TimeCnt
      +                          EndFlag)
  7477                           
  7478                           ;incstack = 0
  7479                           ; Regs used in _bsp_TimerInterruptISRCallback: [wreg+status,2+status,0]
  7480  021F  0020               	movlb	0	; select bank0
  7481  0220  0838               	movf	_gBoxCntStruct,w
  7482  0221  1903               	btfsc	3,2
  7483  0222  0839               	movf	_gBoxCntStruct+1,w
  7484  0223  1903               	btfsc	3,2
  7485  0224  0008               	return
  7486                           
  7487                           ;bsp_counter.c: 42: }
  7488                           ;bsp_counter.c: 44: if(1 == gBoxCntStruct.TimeCntStartFlag)
  7489                           
  7490                           ;bsp_counter.c: 40: {
  7491                           ;bsp_counter.c: 41: return;
  7492  0225  0338               	decf	_gBoxCntStruct,w
  7493  0226  1D03               	btfss	3,2
  7494  0227  2A51               	goto	i1l1376
  7495                           
  7496                           ;bsp_counter.c: 45: {
  7497                           ;bsp_counter.c: 46: gBoxCntStruct.SingleTimeCnt++;
  7498  0228  3001               	movlw	1
  7499  0229  07BD               	addwf	_gBoxCntStruct+5,f
  7500  022A  3000               	movlw	0
  7501  022B  3DBE               	addwfc	_gBoxCntStruct+6,f
  7502  022C  3000               	movlw	0
  7503  022D  3DBF               	addwfc	_gBoxCntStruct+7,f
  7504  022E  3000               	movlw	0
  7505  022F  3DC0               	addwfc	_gBoxCntStruct+8,f
  7506                           
  7507                           ;bsp_counter.c: 47: if(500 < gBoxCntStruct.SingleTimeCnt)
  7508  0230  0840               	movf	_gBoxCntStruct+8,w
  7509  0231  1D03               	btfss	3,2
  7510  0232  2A3C               	goto	i1l1364
  7511  0233  083F               	movf	_gBoxCntStruct+7,w
  7512  0234  1D03               	btfss	3,2
  7513  0235  2A3C               	goto	i1l1364
  7514  0236  30F5               	movlw	245
  7515  0237  023D               	subwf	_gBoxCntStruct+5,w
  7516  0238  3001               	movlw	1
  7517  0239  3B3E               	subwfb	_gBoxCntStruct+6,w
  7518  023A  1C03               	btfss	3,0
  7519  023B  0008               	return
  7520  023C                     i1l1364:	
  7521                           
  7522                           ;bsp_counter.c: 48: {
  7523                           ;bsp_counter.c: 50: gBoxCntStruct.JamFlag = 1;
  7524  023C  01BB               	clrf	_gBoxCntStruct+3
  7525  023D  0ABB               	incf	_gBoxCntStruct+3,f
  7526                           
  7527                           ;bsp_counter.c: 51: gBoxCntStruct.AlarmFlag = 1;
  7528  023E  01BA               	clrf	_gBoxCntStruct+2
  7529  023F  0ABA               	incf	_gBoxCntStruct+2,f
  7530                           
  7531                           ;bsp_counter.c: 52: gBoxCntStruct.JamCnt ++;
  7532  0240  3001               	movlw	1
  7533  0241  07C7               	addwf	_gBoxCntStruct+15,f
  7534  0242  3000               	movlw	0
  7535  0243  3DC8               	addwfc	_gBoxCntStruct+16,f
  7536                           
  7537                           ;bsp_counter.c: 53: gBoxCntStruct.SingleTimeCnt = 0;
  7538  0244  3000               	movlw	0
  7539  0245  00C0               	movwf	_gBoxCntStruct+8
  7540  0246  3000               	movlw	0
  7541  0247  00BF               	movwf	_gBoxCntStruct+7
  7542  0248  3000               	movlw	0
  7543  0249  00BE               	movwf	_gBoxCntStruct+6
  7544  024A  3000               	movlw	0
  7545  024B  00BD               	movwf	_gBoxCntStruct+5
  7546                           
  7547                           ;bsp_counter.c: 54: gBoxCntStruct.TimeCntEndFlag = 0;
  7548  024C  01B9               	clrf	_gBoxCntStruct+1
  7549                           
  7550                           ;bsp_counter.c: 55: gBoxCntStruct.TimeCntStartFlag = 0;
  7551  024D  01B8               	clrf	_gBoxCntStruct
  7552                           
  7553                           ;bsp_counter.c: 56: gBoxCntStruct.DisplayReflashFlag = 1;
  7554  024E  01BC               	clrf	_gBoxCntStruct+4
  7555  024F  0ABC               	incf	_gBoxCntStruct+4,f
  7556                           
  7557                           ;bsp_counter.c: 57: }
  7558                           ;bsp_counter.c: 58: return;
  7559  0250  0008               	return
  7560  0251                     i1l1376:	
  7561                           
  7562                           ;bsp_counter.c: 59: }
  7563                           ;bsp_counter.c: 63: if(1 == gBoxCntStruct.TimeCntEndFlag)
  7564  0251  0339               	decf	_gBoxCntStruct+1,w
  7565  0252  1D03               	btfss	3,2
  7566  0253  0008               	return
  7567                           
  7568                           ;bsp_counter.c: 64: {
  7569                           ;bsp_counter.c: 65: gBoxCntStruct.TimeCntEndFlag = 0;
  7570  0254  01B9               	clrf	_gBoxCntStruct+1
  7571                           
  7572                           ;bsp_counter.c: 66: gBoxCntStruct.TimeCntStartFlag = 0;
  7573  0255  01B8               	clrf	_gBoxCntStruct
  7574                           
  7575                           ;bsp_counter.c: 68: if(100 > gBoxCntStruct.SingleTimeCnt)
  7576  0256  0840               	movf	_gBoxCntStruct+8,w
  7577  0257  1D03               	btfss	3,2
  7578  0258  2A6C               	goto	i1l413
  7579  0259  083F               	movf	_gBoxCntStruct+7,w
  7580  025A  1D03               	btfss	3,2
  7581  025B  2A6C               	goto	i1l413
  7582  025C  083E               	movf	_gBoxCntStruct+6,w
  7583  025D  1D03               	btfss	3,2
  7584  025E  2A6C               	goto	i1l413
  7585  025F  3064               	movlw	100
  7586  0260  023D               	subwf	_gBoxCntStruct+5,w
  7587  0261  1803               	btfsc	3,0
  7588  0262  2A6C               	goto	i1l413
  7589                           
  7590                           ;bsp_counter.c: 69: {
  7591                           ;bsp_counter.c: 70: gBoxCntStruct.SingleTimeCnt = 0;
  7592  0263  3000               	movlw	0
  7593  0264  00C0               	movwf	_gBoxCntStruct+8
  7594  0265  3000               	movlw	0
  7595  0266  00BF               	movwf	_gBoxCntStruct+7
  7596  0267  3000               	movlw	0
  7597  0268  00BE               	movwf	_gBoxCntStruct+6
  7598  0269  3000               	movlw	0
  7599  026A  00BD               	movwf	_gBoxCntStruct+5
  7600                           
  7601                           ;bsp_counter.c: 71: return;
  7602  026B  0008               	return
  7603  026C                     i1l413:	
  7604                           
  7605                           ;bsp_counter.c: 72: }
  7606                           ;bsp_counter.c: 73: gBoxCntStruct.DisplayReflashFlag = 1;
  7607  026C  01BC               	clrf	_gBoxCntStruct+4
  7608  026D  0ABC               	incf	_gBoxCntStruct+4,f
  7609                           
  7610                           ;bsp_counter.c: 83: if(140 < gBoxCntStruct.SingleTimeCnt && 283 > gBoxCntStruct.SingleTi
      +                          meCnt)
  7611  026E  0840               	movf	_gBoxCntStruct+8,w
  7612  026F  1D03               	btfss	3,2
  7613  0270  2A7B               	goto	i1l1388
  7614  0271  083F               	movf	_gBoxCntStruct+7,w
  7615  0272  1D03               	btfss	3,2
  7616  0273  2A7B               	goto	i1l1388
  7617  0274  083E               	movf	_gBoxCntStruct+6,w
  7618  0275  1D03               	btfss	3,2
  7619  0276  2A7B               	goto	i1l1388
  7620  0277  308D               	movlw	141
  7621  0278  023D               	subwf	_gBoxCntStruct+5,w
  7622  0279  1C03               	btfss	3,0
  7623  027A  2A9C               	goto	i1l1394
  7624  027B                     i1l1388:	
  7625  027B  0840               	movf	_gBoxCntStruct+8,w
  7626  027C  1D03               	btfss	3,2
  7627  027D  2A9C               	goto	i1l1394
  7628  027E  083F               	movf	_gBoxCntStruct+7,w
  7629  027F  1D03               	btfss	3,2
  7630  0280  2A9C               	goto	i1l1394
  7631  0281  301B               	movlw	27
  7632  0282  023D               	subwf	_gBoxCntStruct+5,w
  7633  0283  3001               	movlw	1
  7634  0284  3B3E               	subwfb	_gBoxCntStruct+6,w
  7635  0285  1803               	btfsc	3,0
  7636  0286  2A9C               	goto	i1l1394
  7637                           
  7638                           ;bsp_counter.c: 84: {
  7639                           ;bsp_counter.c: 85: gBoxCntStruct.MiddleBoxCnt++;
  7640  0287  3001               	movlw	1
  7641  0288  07C3               	addwf	_gBoxCntStruct+11,f
  7642  0289  3000               	movlw	0
  7643  028A  3DC4               	addwfc	_gBoxCntStruct+12,f
  7644                           
  7645                           ;bsp_counter.c: 86: gBoxCntStruct.BoxSum++;
  7646  028B  3001               	movlw	1
  7647  028C  07C9               	addwf	_gBoxCntStruct+17,f
  7648  028D  3000               	movlw	0
  7649  028E  3DCA               	addwfc	_gBoxCntStruct+18,f
  7650  028F  3000               	movlw	0
  7651  0290  3DCB               	addwfc	_gBoxCntStruct+19,f
  7652  0291  3000               	movlw	0
  7653  0292  3DCC               	addwfc	_gBoxCntStruct+20,f
  7654                           
  7655                           ;bsp_counter.c: 87: gBoxCntStruct.SingleTimeCnt = 0;
  7656  0293  3000               	movlw	0
  7657  0294  00C0               	movwf	_gBoxCntStruct+8
  7658  0295  3000               	movlw	0
  7659  0296  00BF               	movwf	_gBoxCntStruct+7
  7660  0297  3000               	movlw	0
  7661  0298  00BE               	movwf	_gBoxCntStruct+6
  7662  0299  3000               	movlw	0
  7663  029A  00BD               	movwf	_gBoxCntStruct+5
  7664                           
  7665                           ;bsp_counter.c: 88: return;
  7666  029B  0008               	return
  7667  029C                     i1l1394:	
  7668                           
  7669                           ;bsp_counter.c: 89: }
  7670                           ;bsp_counter.c: 91: if(283 < gBoxCntStruct.SingleTimeCnt && 424 > gBoxCntStruct.SingleTi
      +                          meCnt)
  7671  029C  0840               	movf	_gBoxCntStruct+8,w
  7672  029D  1D03               	btfss	3,2
  7673  029E  2AA8               	goto	i1l1396
  7674  029F  083F               	movf	_gBoxCntStruct+7,w
  7675  02A0  1D03               	btfss	3,2
  7676  02A1  2AA8               	goto	i1l1396
  7677  02A2  301C               	movlw	28
  7678  02A3  023D               	subwf	_gBoxCntStruct+5,w
  7679  02A4  3001               	movlw	1
  7680  02A5  3B3E               	subwfb	_gBoxCntStruct+6,w
  7681  02A6  1C03               	btfss	3,0
  7682  02A7  2AC9               	goto	i1l1402
  7683  02A8                     i1l1396:	
  7684  02A8  0840               	movf	_gBoxCntStruct+8,w
  7685  02A9  1D03               	btfss	3,2
  7686  02AA  2AC9               	goto	i1l1402
  7687  02AB  083F               	movf	_gBoxCntStruct+7,w
  7688  02AC  1D03               	btfss	3,2
  7689  02AD  2AC9               	goto	i1l1402
  7690  02AE  30A8               	movlw	168
  7691  02AF  023D               	subwf	_gBoxCntStruct+5,w
  7692  02B0  3001               	movlw	1
  7693  02B1  3B3E               	subwfb	_gBoxCntStruct+6,w
  7694  02B2  1803               	btfsc	3,0
  7695  02B3  2AC9               	goto	i1l1402
  7696                           
  7697                           ;bsp_counter.c: 92: {
  7698                           ;bsp_counter.c: 93: gBoxCntStruct.LargeBoxCnt++;
  7699  02B4  3001               	movlw	1
  7700  02B5  07C5               	addwf	_gBoxCntStruct+13,f
  7701  02B6  3000               	movlw	0
  7702  02B7  3DC6               	addwfc	_gBoxCntStruct+14,f
  7703                           
  7704                           ;bsp_counter.c: 94: gBoxCntStruct.BoxSum++;
  7705  02B8  3001               	movlw	1
  7706  02B9  07C9               	addwf	_gBoxCntStruct+17,f
  7707  02BA  3000               	movlw	0
  7708  02BB  3DCA               	addwfc	_gBoxCntStruct+18,f
  7709  02BC  3000               	movlw	0
  7710  02BD  3DCB               	addwfc	_gBoxCntStruct+19,f
  7711  02BE  3000               	movlw	0
  7712  02BF  3DCC               	addwfc	_gBoxCntStruct+20,f
  7713                           
  7714                           ;bsp_counter.c: 95: gBoxCntStruct.SingleTimeCnt = 0;
  7715  02C0  3000               	movlw	0
  7716  02C1  00C0               	movwf	_gBoxCntStruct+8
  7717  02C2  3000               	movlw	0
  7718  02C3  00BF               	movwf	_gBoxCntStruct+7
  7719  02C4  3000               	movlw	0
  7720  02C5  00BE               	movwf	_gBoxCntStruct+6
  7721  02C6  3000               	movlw	0
  7722  02C7  00BD               	movwf	_gBoxCntStruct+5
  7723                           
  7724                           ;bsp_counter.c: 96: return ;
  7725  02C8  0008               	return
  7726  02C9                     i1l1402:	
  7727                           
  7728                           ;bsp_counter.c: 97: }
  7729                           ;bsp_counter.c: 99: if(140 > gBoxCntStruct.SingleTimeCnt)
  7730  02C9  0840               	movf	_gBoxCntStruct+8,w
  7731  02CA  1D03               	btfss	3,2
  7732  02CB  0008               	return
  7733  02CC  083F               	movf	_gBoxCntStruct+7,w
  7734  02CD  1D03               	btfss	3,2
  7735  02CE  0008               	return
  7736  02CF  083E               	movf	_gBoxCntStruct+6,w
  7737  02D0  1D03               	btfss	3,2
  7738  02D1  0008               	return
  7739  02D2  308C               	movlw	140
  7740  02D3  023D               	subwf	_gBoxCntStruct+5,w
  7741  02D4  1803               	btfsc	3,0
  7742  02D5  0008               	return
  7743                           
  7744                           ;bsp_counter.c: 100: {
  7745                           ;bsp_counter.c: 101: gBoxCntStruct.SmallBoxCnt++;
  7746  02D6  3001               	movlw	1
  7747  02D7  07C1               	addwf	_gBoxCntStruct+9,f
  7748  02D8  3000               	movlw	0
  7749  02D9  3DC2               	addwfc	_gBoxCntStruct+10,f
  7750                           
  7751                           ;bsp_counter.c: 102: gBoxCntStruct.BoxSum++;
  7752  02DA  3001               	movlw	1
  7753  02DB  07C9               	addwf	_gBoxCntStruct+17,f
  7754  02DC  3000               	movlw	0
  7755  02DD  3DCA               	addwfc	_gBoxCntStruct+18,f
  7756  02DE  3000               	movlw	0
  7757  02DF  3DCB               	addwfc	_gBoxCntStruct+19,f
  7758  02E0  3000               	movlw	0
  7759  02E1  3DCC               	addwfc	_gBoxCntStruct+20,f
  7760                           
  7761                           ;bsp_counter.c: 103: gBoxCntStruct.SingleTimeCnt = 0;
  7762  02E2  3000               	movlw	0
  7763  02E3  00C0               	movwf	_gBoxCntStruct+8
  7764  02E4  3000               	movlw	0
  7765  02E5  00BF               	movwf	_gBoxCntStruct+7
  7766  02E6  3000               	movlw	0
  7767  02E7  00BE               	movwf	_gBoxCntStruct+6
  7768  02E8  3000               	movlw	0
  7769  02E9  00BD               	movwf	_gBoxCntStruct+5
  7770                           
  7771                           ;bsp_counter.c: 104: return;
  7772  02EA  0008               	return
  7773  02EB                     __end_of_bsp_TimerInterruptISRCallback:	
  7774                           
  7775                           	psect	text26
  7776  074C                     __ptext26:	
  7777 ;; *************** function _TMR3_DefaultInterruptHandler *****************
  7778 ;; Defined at:
  7779 ;;		line 186 in file "mcc_generated_files/tmr3.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;		None
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  1    wreg      void 
  7786 ;; Registers used:
  7787 ;;		None
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;Total ram usage:        0 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_TMR3_Initialize
  7803 ;;		_TMR3_CallBack
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _TMR3_DefaultInterruptHandler
  7809  074C                     _TMR3_DefaultInterruptHandler:	
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _TMR3_DefaultInterruptHandler: []
  7813  074C  0008               	return
  7814  074D                     __end_of_TMR3_DefaultInterruptHandler:	
  7815                           
  7816                           	psect	text27
  7817  06E9                     __ptext27:	
  7818 ;; *************** function _TMR1_ISR *****************
  7819 ;; Defined at:
  7820 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, status,2, status,0, pclath, cstack
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;Total ram usage:        0 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; Hardware stack levels required when called:    2
  7841 ;; This function calls:
  7842 ;;		_TMR1_CallBack
  7843 ;;		_TMR1_WriteTimer
  7844 ;; This function is called by:
  7845 ;;		_INTERRUPT_InterruptManager
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           
  7850                           ;psect for function _TMR1_ISR
  7851  06E9                     _TMR1_ISR:	
  7852                           
  7853                           ;tmr1.c: 161: PIR1bits.TMR1IF = 0;
  7854                           
  7855                           ;incstack = 0
  7856                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7857  06E9  0020               	movlb	0	; select bank0
  7858  06EA  1010               	bcf	16,0	;volatile
  7859                           
  7860                           ;tmr1.c: 162: TMR1_WriteTimer(timer1ReloadVal);
  7861  06EB  0858               	movf	_timer1ReloadVal+1,w	;volatile
  7862  06EC  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7863  06ED  0857               	movf	_timer1ReloadVal,w	;volatile
  7864  06EE  00F0               	movwf	TMR1_WriteTimer@timerVal
  7865  06EF  3186  26C0  3186   	fcall	_TMR1_WriteTimer
  7866                           
  7867                           ;tmr1.c: 166: TMR1_CallBack();
  7868  06F2  3187  270B         	fcall	_TMR1_CallBack
  7869  06F4  0008               	return
  7870  06F5                     __end_of_TMR1_ISR:	
  7871                           
  7872                           	psect	text28
  7873  06C0                     __ptext28:	
  7874 ;; *************** function _TMR1_WriteTimer *****************
  7875 ;; Defined at:
  7876 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  timerVal        2    0[COMMON] unsigned int 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7894 ;;Total ram usage:        2 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; This function calls:
  7897 ;;		Nothing
  7898 ;; This function is called by:
  7899 ;;		_TMR1_ISR
  7900 ;;		_TMR1_Reload
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           
  7905                           ;psect for function _TMR1_WriteTimer
  7906  06C0                     _TMR1_WriteTimer:	
  7907                           
  7908                           ;tmr1.c: 122: if (T1CONbits.nT1SYNC == 1)
  7909                           
  7910                           ;incstack = 0
  7911                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  7912  06C0  0020               	movlb	0	; select bank0
  7913  06C1  1D18               	btfss	24,2	;volatile
  7914  06C2  2ECA               	goto	i1l1462
  7915                           
  7916                           ;tmr1.c: 123: {
  7917                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
  7918  06C3  1018               	bcf	24,0	;volatile
  7919                           
  7920                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
  7921  06C4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7922  06C5  0097               	movwf	23	;volatile
  7923                           
  7924                           ;tmr1.c: 129: TMR1L = timerVal;
  7925  06C6  0870               	movf	TMR1_WriteTimer@timerVal,w
  7926  06C7  0096               	movwf	22	;volatile
  7927                           
  7928                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
  7929  06C8  1418               	bsf	24,0	;volatile
  7930                           
  7931                           ;tmr1.c: 133: }
  7932  06C9  0008               	return
  7933  06CA                     i1l1462:	
  7934                           
  7935                           ;tmr1.c: 134: else
  7936                           ;tmr1.c: 135: {
  7937                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
  7938  06CA  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7939  06CB  0097               	movwf	23	;volatile
  7940                           
  7941                           ;tmr1.c: 138: TMR1L = timerVal;
  7942  06CC  0870               	movf	TMR1_WriteTimer@timerVal,w
  7943  06CD  0096               	movwf	22	;volatile
  7944  06CE  0008               	return
  7945  06CF                     __end_of_TMR1_WriteTimer:	
  7946                           
  7947                           	psect	text29
  7948  070B                     __ptext29:	
  7949 ;; *************** function _TMR1_CallBack *****************
  7950 ;; Defined at:
  7951 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    1
  7972 ;; This function calls:
  7973 ;;		Absolute function
  7974 ;;		_TMR1_DefaultInterruptHandler
  7975 ;; This function is called by:
  7976 ;;		_TMR1_ISR
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           
  7981                           ;psect for function _TMR1_CallBack
  7982  070B                     _TMR1_CallBack:	
  7983                           
  7984                           ;tmr1.c: 172: if(TMR1_InterruptHandler)
  7985                           
  7986                           ;incstack = 0
  7987                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7988  070B  0020               	movlb	0	; select bank0
  7989  070C  0855               	movf	_TMR1_InterruptHandler,w
  7990  070D  0456               	iorwf	_TMR1_InterruptHandler+1,w
  7991  070E  1903               	btfsc	3,2
  7992  070F  0008               	return
  7993                           
  7994                           ;tmr1.c: 173: {
  7995                           ;tmr1.c: 174: TMR1_InterruptHandler();
  7996  0710  0856               	movf	_TMR1_InterruptHandler+1,w
  7997  0711  008A               	movwf	10
  7998  0712  0855               	movf	_TMR1_InterruptHandler,w
  7999  0713  000A               	callw
  8000  0714  3187               	pagesel	$
  8001  0715  0008               	return
  8002  0716                     __end_of_TMR1_CallBack:	
  8003                           
  8004                           	psect	text30
  8005  074D                     __ptext30:	
  8006 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8007 ;; Defined at:
  8008 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;		None
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      void 
  8015 ;; Registers used:
  8016 ;;		None
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; This function calls:
  8029 ;;		Nothing
  8030 ;; This function is called by:
  8031 ;;		_TMR1_Initialize
  8032 ;;		_TMR1_CallBack
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function _TMR1_DefaultInterruptHandler
  8038  074D                     _TMR1_DefaultInterruptHandler:	
  8039                           
  8040                           ;incstack = 0
  8041                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  8042  074D  0008               	return
  8043  074E                     __end_of_TMR1_DefaultInterruptHandler:	
  8044                           
  8045                           	psect	text31
  8046  071D                     __ptext31:	
  8047 ;; *************** function _TMR0_ISR *****************
  8048 ;; Defined at:
  8049 ;;		line 112 in file "mcc_generated_files/tmr0.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2, status,0, pclath, cstack
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    2
  8070 ;; This function calls:
  8071 ;;		_TMR0_CallBack
  8072 ;; This function is called by:
  8073 ;;		_INTERRUPT_InterruptManager
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _TMR0_ISR
  8079  071D                     _TMR0_ISR:	
  8080                           
  8081                           ;tmr0.c: 116: INTCONbits.TMR0IF = 0;
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8085  071D  110B               	bcf	11,2	;volatile
  8086                           
  8087                           ;tmr0.c: 118: TMR0 = timer0ReloadVal;
  8088  071E  0020               	movlb	0	; select bank0
  8089  071F  085B               	movf	_timer0ReloadVal,w	;volatile
  8090  0720  0095               	movwf	21	;volatile
  8091                           
  8092                           ;tmr0.c: 122: TMR0_CallBack();
  8093  0721  3186  262D         	fcall	_TMR0_CallBack
  8094  0723  0008               	return
  8095  0724                     __end_of_TMR0_ISR:	
  8096                           
  8097                           	psect	text32
  8098  062D                     __ptext32:	
  8099 ;; *************** function _TMR0_CallBack *****************
  8100 ;; Defined at:
  8101 ;;		line 127 in file "mcc_generated_files/tmr0.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;		None
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1    wreg      void 
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0, pclath, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8117 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8118 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8119 ;;Total ram usage:        1 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    1
  8122 ;; This function calls:
  8123 ;;		Absolute function
  8124 ;;		_TMR0_DefaultInterruptHandler
  8125 ;; This function is called by:
  8126 ;;		_TMR0_ISR
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           
  8131                           ;psect for function _TMR0_CallBack
  8132  062D                     _TMR0_CallBack:	
  8133                           
  8134                           ;tmr0.c: 130: gTimer0AlarmFlashFlag = 1;
  8135                           
  8136                           ;incstack = 0
  8137                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8138  062D  3001               	movlw	1
  8139  062E  00F0               	movwf	??_TMR0_CallBack
  8140  062F  0870               	movf	??_TMR0_CallBack,w
  8141  0630  00FA               	movwf	_gTimer0AlarmFlashFlag	;volatile
  8142                           
  8143                           ;tmr0.c: 131: gTimer0NormalFalshCnt++;
  8144  0631  3001               	movlw	1
  8145  0632  00F0               	movwf	??_TMR0_CallBack
  8146  0633  0870               	movf	??_TMR0_CallBack,w
  8147  0634  07F9               	addwf	_gTimer0NormalFalshCnt,f	;volatile
  8148                           
  8149                           ;tmr0.c: 132: if(gTimer0NormalFalshCnt > 5)
  8150  0635  3006               	movlw	6
  8151  0636  0279               	subwf	_gTimer0NormalFalshCnt,w	;volatile
  8152  0637  1C03               	skipc
  8153  0638  2E3E               	goto	i1l1432
  8154                           
  8155                           ;tmr0.c: 133: {
  8156                           ;tmr0.c: 134: gTimer0NormalFalshCnt = 0;
  8157  0639  01F9               	clrf	_gTimer0NormalFalshCnt	;volatile
  8158                           
  8159                           ;tmr0.c: 135: gTimer0NormalFlashFlag= 1;
  8160  063A  3001               	movlw	1
  8161  063B  00F0               	movwf	??_TMR0_CallBack
  8162  063C  0870               	movf	??_TMR0_CallBack,w
  8163  063D  00F8               	movwf	_gTimer0NormalFlashFlag	;volatile
  8164  063E                     i1l1432:	
  8165                           
  8166                           ;tmr0.c: 136: }
  8167                           ;tmr0.c: 138: if(TMR0_InterruptHandler)
  8168  063E  0020               	movlb	0	; select bank0
  8169  063F  0859               	movf	_TMR0_InterruptHandler,w
  8170  0640  045A               	iorwf	_TMR0_InterruptHandler+1,w
  8171  0641  1903               	btfsc	3,2
  8172  0642  0008               	return
  8173                           
  8174                           ;tmr0.c: 139: {
  8175                           ;tmr0.c: 140: TMR0_InterruptHandler();
  8176  0643  085A               	movf	_TMR0_InterruptHandler+1,w
  8177  0644  008A               	movwf	10
  8178  0645  0859               	movf	_TMR0_InterruptHandler,w
  8179  0646  000A               	callw
  8180  0647  3186               	pagesel	$
  8181  0648  0008               	return
  8182  0649                     __end_of_TMR0_CallBack:	
  8183                           
  8184                           	psect	text33
  8185  074E                     __ptext33:	
  8186 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8187 ;; Defined at:
  8188 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;		None
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;		None
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		None
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8206 ;;Total ram usage:        0 bytes
  8207 ;; Hardware stack levels used:    1
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_TMR0_Initialize
  8212 ;;		_TMR0_CallBack
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           
  8217                           ;psect for function _TMR0_DefaultInterruptHandler
  8218  074E                     _TMR0_DefaultInterruptHandler:	
  8219                           
  8220                           ;incstack = 0
  8221                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8222  074E  0008               	return
  8223  074F                     __end_of_TMR0_DefaultInterruptHandler:	
  8224                           
  8225                           	psect	text34
  8226  074F                     __ptext34:	
  8227 ;; *************** function _PIN_MANAGER_IOC *****************
  8228 ;; Defined at:
  8229 ;;		line 107 in file "mcc_generated_files/pin_manager.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		None
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; This function calls:
  8250 ;;		Nothing
  8251 ;; This function is called by:
  8252 ;;		_INTERRUPT_InterruptManager
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           
  8257                           ;psect for function _PIN_MANAGER_IOC
  8258  074F                     _PIN_MANAGER_IOC:	
  8259                           
  8260                           ;incstack = 0
  8261                           ; Regs used in _PIN_MANAGER_IOC: []
  8262  074F  0008               	return
  8263  0750                     __end_of_PIN_MANAGER_IOC:	
  8264                           
  8265                           	psect	text35
  8266  0748                     __ptext35:	
  8267 ;; *************** function _INT_ISR *****************
  8268 ;; Defined at:
  8269 ;;		line 37 in file "mcc_generated_files/ext_int.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, pclath, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used:    1
  8289 ;; Hardware stack levels required when called:    2
  8290 ;; This function calls:
  8291 ;;		_INT_CallBack
  8292 ;; This function is called by:
  8293 ;;		_INTERRUPT_InterruptManager
  8294 ;; This function uses a non-reentrant model
  8295 ;;
  8296                           
  8297                           
  8298                           ;psect for function _INT_ISR
  8299  0748                     _INT_ISR:	
  8300                           
  8301                           ;ext_int.c: 39: (INTCONbits.INTF = 0);
  8302                           
  8303                           ;incstack = 0
  8304                           ; Regs used in _INT_ISR: [wreg+status,2+status,0+pclath+cstack]
  8305  0748  108B               	bcf	11,1	;volatile
  8306                           
  8307                           ;ext_int.c: 42: INT_CallBack();
  8308  0749  3185  25A4         	fcall	_INT_CallBack
  8309  074B  0008               	return
  8310  074C                     __end_of_INT_ISR:	
  8311                           
  8312                           	psect	text36
  8313  05A4                     __ptext36:	
  8314 ;; *************** function _INT_CallBack *****************
  8315 ;; Defined at:
  8316 ;;		line 46 in file "mcc_generated_files/ext_int.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      void 
  8323 ;; Registers used:
  8324 ;;		wreg, status,2, status,0, pclath, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8334 ;;Total ram usage:        1 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    1
  8337 ;; This function calls:
  8338 ;;		Absolute function
  8339 ;;		_INT_DefaultInterruptHandler
  8340 ;; This function is called by:
  8341 ;;		_INT_ISR
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345                           
  8346                           ;psect for function _INT_CallBack
  8347  05A4                     _INT_CallBack:	
  8348                           
  8349                           ;ext_int.c: 49: gInterruptFlag = 1;
  8350                           
  8351                           ;incstack = 0
  8352                           ; Regs used in _INT_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8353  05A4  3001               	movlw	1
  8354  05A5  00F0               	movwf	??_INT_CallBack
  8355  05A6  0870               	movf	??_INT_CallBack,w
  8356  05A7  0020               	movlb	0	; select bank0
  8357  05A8  00CE               	movwf	_gInterruptFlag	;volatile
  8358                           
  8359                           ;ext_int.c: 50: if(1 == OPTION_REGbits.INTEDG && 1 == PORTAbits.RA2)
  8360  05A9  0021               	movlb	1	; select bank1
  8361  05AA  1F15               	btfss	21,6	;volatile
  8362  05AB  2DB5               	goto	i1l303
  8363  05AC  0020               	movlb	0	; select bank0
  8364  05AD  1D0C               	btfss	12,2	;volatile
  8365  05AE  2DB5               	goto	i1l303
  8366                           
  8367                           ;ext_int.c: 51: {
  8368                           ;ext_int.c: 52: gBoxCntStruct.TimeCntStartFlag = 1;
  8369  05AF  01B8               	clrf	_gBoxCntStruct
  8370  05B0  0AB8               	incf	_gBoxCntStruct,f
  8371                           
  8372                           ;ext_int.c: 53: gBoxCntStruct.TimeCntEndFlag = 0;
  8373  05B1  01B9               	clrf	_gBoxCntStruct+1
  8374                           
  8375                           ;ext_int.c: 55: (OPTION_REGbits.INTEDG = 0);
  8376  05B2  0021               	movlb	1	; select bank1
  8377  05B3  1315               	bcf	21,6	;volatile
  8378                           
  8379                           ;ext_int.c: 56: }
  8380  05B4  2DC0               	goto	i1l1556
  8381  05B5                     i1l303:	
  8382                           
  8383                           ;ext_int.c: 57: else if(0 == OPTION_REGbits.INTEDG && 0 == PORTAbits.RA2 )
  8384  05B5  0021               	movlb	1	; select bank1
  8385  05B6  1B15               	btfsc	21,6	;volatile
  8386  05B7  2DC0               	goto	i1l1556
  8387  05B8  0020               	movlb	0	; select bank0
  8388  05B9  190C               	btfsc	12,2	;volatile
  8389  05BA  2DC0               	goto	i1l1556
  8390                           
  8391                           ;ext_int.c: 58: {
  8392                           ;ext_int.c: 59: gBoxCntStruct.TimeCntStartFlag = 0;
  8393  05BB  01B8               	clrf	_gBoxCntStruct
  8394                           
  8395                           ;ext_int.c: 60: gBoxCntStruct.TimeCntEndFlag = 1;
  8396  05BC  01B9               	clrf	_gBoxCntStruct+1
  8397  05BD  0AB9               	incf	_gBoxCntStruct+1,f
  8398                           
  8399                           ;ext_int.c: 61: (OPTION_REGbits.INTEDG = 1);
  8400  05BE  0021               	movlb	1	; select bank1
  8401  05BF  1715               	bsf	21,6	;volatile
  8402  05C0                     i1l1556:	
  8403                           
  8404                           ;ext_int.c: 62: }
  8405                           ;ext_int.c: 63: if(INT_InterruptHandler)
  8406  05C0  0020               	movlb	0	; select bank0
  8407  05C1  084F               	movf	_INT_InterruptHandler,w
  8408  05C2  0450               	iorwf	_INT_InterruptHandler+1,w
  8409  05C3  1903               	btfsc	3,2
  8410  05C4  0008               	return
  8411                           
  8412                           ;ext_int.c: 64: {
  8413                           ;ext_int.c: 65: INT_InterruptHandler();
  8414  05C5  0850               	movf	_INT_InterruptHandler+1,w
  8415  05C6  008A               	movwf	10
  8416  05C7  084F               	movf	_INT_InterruptHandler,w
  8417  05C8  000A               	callw
  8418  05C9  3185               	pagesel	$
  8419  05CA  0008               	return
  8420  05CB                     __end_of_INT_CallBack:	
  8421                           
  8422                           	psect	text37
  8423  0750                     __ptext37:	
  8424 ;; *************** function _INT_DefaultInterruptHandler *****************
  8425 ;; Defined at:
  8426 ;;		line 73 in file "mcc_generated_files/ext_int.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;		None
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		None
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;Total ram usage:        0 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_EXT_INT_Initialize
  8450 ;;		_INT_CallBack
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           
  8455                           ;psect for function _INT_DefaultInterruptHandler
  8456  0750                     _INT_DefaultInterruptHandler:	
  8457                           
  8458                           ;incstack = 0
  8459                           ; Regs used in _INT_DefaultInterruptHandler: []
  8460  0750  0008               	return
  8461  0751                     __end_of_INT_DefaultInterruptHandler:	
  8462  007E                     btemp	set	126	;btemp
  8463  007E                     int$flags	set	126
  8464  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         28
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     24      71
    BANK1            80      0      16
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    Print@str	PTR unsigned char  size(1) Largest target is 16
		 -> display_data_2(BANK0[11]), display_data_1(BANK1[16]), 

    INT_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), 

    INT_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT_DefaultInterruptHandler(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_LCDSendData
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EXT_INT_Initialize->_INT_SetInterruptHandler
    _Print->_LCDSendData
    _LCDInit->_LCDSendData
    _Data_Toseg->___lldiv
    _Data_Toseg->___lwdiv
    ___lwdiv->___lwmod
    ___lldiv->___llmod

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR0_ISR->_TMR0_CallBack
    _INT_ISR->_INT_CallBack

Critical Paths under _main in BANK0

    _main->_Data_Toseg
    _Print->_LCDSendData
    _LCDInit->_LCDSendData
    _Data_Toseg->___lldiv
    ___lwdiv->___lwmod
    ___lldiv->___llmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10417
                                             22 BANK0      2     2      0
                         _Data_Toseg
                            _LCDInit
                        _LCDSendData
                              _Print
                  _SYSTEM_Initialize
                    _bsp_CounterInit
 ---------------------------------------------------------------------------------
 (1) _bsp_CounterInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                 _EXT_INT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      86
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      86
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0      86
                                              5 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      86
            _INT_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT_SetInterruptHandler                              2     0      2      86
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Print                                                2     2      0    2091
                                              2 BANK0      2     2      0
                        _LCDSendData
 ---------------------------------------------------------------------------------
 (1) _LCDInit                                              1     1      0    1734
                                              2 BANK0      1     1      0
                        _LCDSendData
 ---------------------------------------------------------------------------------
 (2) _LCDSendData                                          5     2      3    1734
                                              3 COMMON     3     0      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Data_Toseg                                           1     1      0    4514
                                             21 BANK0      1     1      0
                            ___lldiv
                            ___llmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    2080
                                              3 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1473
                                              5 COMMON     1     1      0
                                              4 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     543
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     418
                                              5 COMMON     1     1      0
                                              8 BANK0     13     5      8
                            ___llmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           1     1      0     432
                                              2 COMMON     1     1      0
                            _INT_ISR
                    _PIN_MANAGER_IOC
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0     216
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR3_WriteTimer                                      2     0      2     216
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
      _bsp_TimerInterruptISRCallback
 ---------------------------------------------------------------------------------
 (7) _bsp_TimerInterruptISRCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0     216
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (6) _TMR1_WriteTimer                                      2     0      2     216
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR0_CallBack                                        1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT_ISR                                              0     0      0       0
                       _INT_CallBack
 ---------------------------------------------------------------------------------
 (6) _INT_CallBack                                         1     1      0       0
                                              0 COMMON     1     1      0
                   Absolute function *
        _INT_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _INT_DefaultInterruptHandler                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Data_Toseg
     ___lldiv
       ___llmod (ARG)
     ___llmod
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _LCDInit
     _LCDSendData
   _LCDSendData
   _Print
     _LCDSendData
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _bsp_CounterInit

 _INTERRUPT_InterruptManager (ROOT)
   _INT_ISR
     _INT_CallBack
       Absolute function(Fake) *
       _INT_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _bsp_TimerInterruptISRCallback *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      47       5       88.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      10       7       20.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      62      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      62      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 11 13:29:06 2018

                             __CFG_CP$OFF 0000                  __size_of_bsp_CounterInit 001D  
                            ?_LCDSendData 0073                           _timer0ReloadVal 005B  
                             __CFG_LVP$ON 0000                                       l351 038E  
                                     l353 0390                           _timer1ReloadVal 0057  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                           __end_of_LCDInit 04AC  
                            __CFG_ZCD$OFF 0000                                      l1600 0508  
                                    l1602 0516                                      l1610 0539  
                         _timer3ReloadVal 0053                                      l1606 052E  
                                    l1590 04F6                                      l1576 04BD  
                                    l1912 05F1                                      l1586 04EB  
                                    l1578 04CB                                      l1854 0569  
                                    l1846 054B                                      l1870 057E  
                                    l1942 03D6                                      l1848 0557  
                                    l1872 058A                                      l1880 059F  
                                    l1960 03F9                                      l1858 0572  
                                    l1954 03EA                                      l1876 0596  
                                    l1972 041B                                      l1964 0408  
                              _Data_Toseg 0061                                      u1105 04C0  
                                    u1025 030A                                      u1035 031E  
                                    u1125 04CC                                      u1205 052F  
                                    u1045 0333                                      u1135 04E0  
                                    u2007 0392                                      u1055 0346  
                                    u1145 04EC                                      u2017 039B  
                                    u1065 035A                                      u1075 036F  
                                    u1085 0389                                      _LATA 010C  
                                    _LATB 010D                           __end_of_INT_ISR 074C  
                                    u1175 050B                                      _LATC 010E  
                                    u1195 0524                                      u1705 056A  
                                    u1900 0419                                      u1830 03F7  
                                    u1735 0581                                      u1665 054E  
                                    u1755 0590                                      u1860 0406  
                                    u1685 0558                                      u1765 0597  
                                    u1695 0562                                      u1937 03C0  
                                    u1947 03E0                                      u1957 060C  
                                    u1967 0442                                      u1977 0456  
                                    u1987 046A                                      u1997 047E  
                                    _TMR0 0015                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    _main 03A0                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      btemp 007E  
                           __CFG_BOREN$ON 0000       __end_of_INT_DefaultInterruptHandler 0751  
             _INT_DefaultInterruptHandler 0750                                      start 0037  
                         _TMR3_Initialize 0649           __end_of_INT_SetInterruptHandler 0748  
              ??_TMR1_SetInterruptHandler 0075                             __CFG_MCLRE$ON 0000  
                 __end_of_TMR0_Initialize 068F                             __CFG_PLLEN$ON 0000  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 071D                                     ?_main 0070  
                           __CFG_WDTE$OFF 0000                           __end_of___lldiv 04FF  
                                   _T1CON 0018                           __end_of___llmod 0542  
                                   _T3CON 0495                           __end_of___lwdiv 0577  
                                   i1l303 05B5                                     i1l162 0010  
                                   i1l164 0017                                     i1l413 026C  
                                   i1l166 001E                                     i1l174 0032  
                                   i1l169 002A                           __end_of___lwmod 05A4  
                                   _TMR1H 0017                                     _TMR3H 0494  
                                   _TMR1L 0016                                     _TMR3L 0493  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E         __size_of_TMR0_SetInterruptHandler 0006  
       __size_of_TMR3_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0073  
               ?_TMR3_SetInterruptHandler 0073                                     _Print 05EF  
                        __end_of_TMR0_ISR 0724                          __end_of_TMR1_ISR 06F5  
                        __end_of_TMR3_ISR 06E9            ??_TMR3_DefaultInterruptHandler 0070  
                 __end_of_PIN_MANAGER_IOC 0750                   __end_of_TMR1_Initialize 067A  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                            _gInterruptFlag 004E  
                         _TMR1_WriteTimer 06C0                           __initialization 0039  
                            __end_of_main 0433                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 0036  
                   _TMR3_InterruptHandler 0051                                 ??_LCDInit 0022  
                       ??_bsp_CounterInit 0073                                 ??_INT_ISR 0071  
                                  ?_Print 0022                          ___llmod@dividend 0024  
                                  _ANSELA 018C                                    _ANSELB 018D  
                                  _ANSELC 018E                               ?_Data_Toseg 0070  
                                  _BORCON 0116                                    _T1GCON 0019  
                                  _T3GCON 0496                   TMR1_WriteTimer@timerVal 0070  
                                  i1l1402 02C9                                    i1l1432 063E  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l1364 023C  
                                  i1l1462 06CA                                    i1l1526 06BB  
                                  i1l1376 0251                                    i1l1394 029C  
                                  i1l1556 05C0                                    i1l1396 02A8  
                                  i1l1388 027B                   __end_of_TMR3_Initialize 0663  
                                  _INTPPS 0E10                                    _OSCCON 0099  
                   _gTimer0AlarmFlashFlag 007A                           _TMR3_WriteTimer 06B1  
                          __CFG_PWRTE$OFF 0000      __end_of_TMR1_DefaultInterruptHandler 074E  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 074D  
                          __CFG_STVREN$ON 0000                                 ??___lldiv 0075  
                               ??___llmod 0073                                 ??___lwdiv 0075  
                               ??___lwmod 0073                          ?_TMR0_Initialize 0070  
                           ?_INT_CallBack 0070                      __size_of_LCDSendData 00B5  
                              _gEnterFlag 0077                     __end_of_TMR0_CallBack 0649  
        __size_of_INT_SetInterruptHandler 0006   INT_SetInterruptHandler@InterruptHandler 0073  
TMR3_SetInterruptHandler@InterruptHandler 0073  TMR1_SetInterruptHandler@InterruptHandler 0073  
TMR0_SetInterruptHandler@InterruptHandler 0073                          ?_PIN_MANAGER_IOC 0070  
                 __end_of_TMR1_WriteTimer 06CF                             LCDSendData@RS 0073  
                   __end_of_TMR1_CallBack 0716                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 068F                   __end_of__initialization 005D  
                  _gTimer0NormalFlashFlag 0078                        ?_SYSTEM_Initialize 0070  
                   __end_of_TMR3_CallBack 06DD                            __pcstackCOMMON 0070  
                           __end_of_Print 0610                              __pidataBANK0 06F5  
                            __pidataBANK1 06A1                       ??_SYSTEM_Initialize 0076  
                               ?_TMR0_ISR 0070                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                                 ?_TMR3_ISR 0070  
                     __size_of_Data_Toseg 01BE                            ??_INT_CallBack 0070  
             __size_of_EXT_INT_Initialize 000B                            _OPTION_REGbits 0095  
                                 ??_Print 0022                 __end_of_SYSTEM_Initialize 06A1  
                 __end_of_TMR3_WriteTimer 06C0                                __pbssBANK0 0038  
                        ?_TMR3_Initialize 0070                                __pmaintext 03A0  
        __end_of_TMR0_SetInterruptHandler 0742          __end_of_TMR3_SetInterruptHandler 0736  
                              ??_TMR0_ISR 0071                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                ??_TMR3_ISR 0072  
                              __pintentry 0004                                   _LCDInit 0433  
                         __CFG_WDTCCS$SWC 0000                                   _INT_ISR 0748  
                                 _OSCTUNE 0098                          ?_TMR1_WriteTimer 0070  
                         _bsp_CounterInit 0610                                   ___lldiv 04AC  
                                 ___llmod 04FF                                   ___lwdiv 0542  
                                 ___lwmod 0577     __end_of_bsp_TimerInterruptISRCallback 02EB  
  __size_of_bsp_TimerInterruptISRCallback 00CC             _bsp_TimerInterruptISRCallback 021F  
                                 __ptext1 0610                                   __ptext2 068F  
                                 __ptext3 0649                                   __ptext4 0730  
                                 __ptext5 0663                                   __ptext6 0736  
                                 __ptext7 067A                                   __ptext8 073C  
                                 __ptext9 05CB            ??_TMR1_DefaultInterruptHandler 0070  
                               _T1CONbits 0018                     _OSCILLATOR_Initialize 0716  
                               _T3CONbits 0495         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0073                 ?_TMR1_SetInterruptHandler 0073  
                 _INT_SetInterruptHandler 0742                __size_of_SYSTEM_Initialize 0012  
                                 clrloop0 072B                              ??_Data_Toseg 0035  
                    end_of_initialization 005D                          ?_TMR3_WriteTimer 0070  
                                 init_ram 0724                                   initloop 0725  
                    __end_of_INT_CallBack 05CB                           ___lldiv@divisor 0028  
                         ___lldiv@counter 0034                        __end_of_Data_Toseg 021F  
                _TMR0_SetInterruptHandler 073C                                 _PORTAbits 000C  
                _TMR3_SetInterruptHandler 0730                          __CFG_FOSC$INTOSC 0000  
                 __end_of_bsp_CounterInit 062D                             ??_LCDSendData 0020  
                             _gTimer3Flag 004D                         __size_of_TMR0_ISR 0007  
                       __size_of_TMR1_ISR 000C                         __size_of_TMR3_ISR 000C  
                  ?_OSCILLATOR_Initialize 0070                 ??_INT_SetInterruptHandler 0075  
                     start_initialization 0039            ?_bsp_TimerInterruptISRCallback 0070  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 0024  
                         ___llmod@divisor 0020                           ___llmod@counter 0074  
                __size_of_PIN_MANAGER_IOC 0001              ?_INT_DefaultInterruptHandler 0070  
                __size_of_TMR1_Initialize 0017                    __size_of_TMR0_CallBack 001C  
                             __pdataBANK0 005C                               __pdataBANK1 00A0  
              __end_of_EXT_INT_Initialize 070B                    __size_of_TMR1_CallBack 000B  
                   _gTimer0NormalFalshCnt 0079                                 _gExitFlag 0076  
                                ?_LCDInit 0070                               __pbssCOMMON 0076  
                     __end_of_LCDSendData 03A0                                 ___latbits 0002  
                                ?_INT_ISR 0070                             __pcstackBANK0 0020  
                  __size_of_TMR3_CallBack 000E                     __size_of_INT_CallBack 0027  
                   _TMR0_InterruptHandler 0059                                 __pnvBANK0 004F  
                        ?_bsp_CounterInit 0070                          ___lwdiv@dividend 0026  
                  _PIN_MANAGER_Initialize 05CB             ??_INT_DefaultInterruptHandler 0070  
                __size_of_TMR3_Initialize 001A          __end_of_TMR1_SetInterruptHandler 073C  
                                ?___lldiv 0028                                  ?___llmod 0020  
                                ?___lwdiv 0024                                  ?___lwmod 0020  
            ??_INTERRUPT_InterruptManager 0072                              _INT_CallBack 05A4  
                          __size_of_Print 0021                          ___lwdiv@quotient 0029  
                           _TMR0_CallBack 062D                             _gBoxCntStruct 0038  
                           _TMR1_CallBack 070B                         ??_TMR0_Initialize 0075  
                                _LATAbits 010C                                  _LATBbits 010D  
                                _LATCbits 010E                                 clear_ram0 072A  
                                _PIE1bits 0090                                  _PIE5bits 0094  
                __size_of_TMR1_WriteTimer 000F       __size_of_INTERRUPT_InterruptManager 0033  
              ??_TMR0_SetInterruptHandler 0075                                  _PIR1bits 0010  
              ??_TMR3_SetInterruptHandler 0075                             _TMR3_CallBack 06CF  
                                _PIR5bits 0014                      __CFG_WDTCPS$WDTCPS1F 0000  
                                _TMR0_ISR 071D                                  _TMR1_ISR 06E9  
                                _TMR3_ISR 06DD                         ??_PIN_MANAGER_IOC 0070  
                             _LCDSendData 02EB                         ??_TMR1_Initialize 0075  
    __size_of_INT_DefaultInterruptHandler 0001                          __size_of_LCDInit 0079  
                        __size_of_INT_ISR 0004                            ?_TMR0_CallBack 0070  
                          ?_TMR1_CallBack 0070                            ?_TMR3_CallBack 0070  
                __size_of_TMR3_WriteTimer 000F                                  Print@str 0023  
                 ??_OSCILLATOR_Initialize 0073                          __size_of___lldiv 0053  
                        __size_of___llmod 0043                          __size_of___lwdiv 0035  
                        __size_of___lwmod 002D                         ??_TMR3_Initialize 0075  
                _TMR1_SetInterruptHandler 0736                     _TMR1_InterruptHandler 0055  
                         ___lwdiv@divisor 0024                           ___lwdiv@counter 0028  
                                __ptext10 0716                                  __ptext11 0700  
                                __ptext20 04AC                                  __ptext12 0742  
                                __ptext13 05EF                                _T1GCONbits 0019  
                                __ptext30 074D                                  __ptext22 06DD  
                                __ptext14 0433                                  __ptext31 071D  
                                __ptext23 06B1                                  __ptext15 02EB  
                                __ptext32 062D                                  __ptext24 06CF  
                                __ptext16 0061                                  __ptext33 074E  
                                __ptext25 021F                                  __ptext17 0577  
                                __ptext34 074F                                  __ptext26 074C  
                                __ptext18 0542                                  __ptext35 0748  
                                __ptext27 06E9                                  __ptext19 04FF  
                                __ptext36 05A4                                  __ptext28 06C0  
                                __ptext37 0750                                  __ptext29 070B  
                              _T3GCONbits 0496                   TMR3_WriteTimer@timerVal 0070  
                           __size_of_main 0093      __end_of_TMR0_DefaultInterruptHandler 074F  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 074E  
         ??_bsp_TimerInterruptISRCallback 0070                      __CFG_WDTCWS$WDTCWSSW 0000  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0037  
              _INTERRUPT_InterruptManager 0004                         ??_TMR1_WriteTimer 0072  
    __end_of_TMR3_DefaultInterruptHandler 074D     __size_of_TMR3_DefaultInterruptHandler 0001  
            _TMR3_DefaultInterruptHandler 074C                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0070                      _INT_InterruptHandler 004F  
                         ??_TMR1_CallBack 0070                        _EXT_INT_Initialize 0700  
                                intlevel1 0000                          ___lwmod@dividend 0022  
                        ___lldiv@dividend 002C                   ?_PIN_MANAGER_Initialize 0070  
                         ??_TMR3_CallBack 0070                         __CFG_CLKOUTEN$OFF 0000  
                     ?_EXT_INT_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                ?_INT_SetInterruptHandler 0073                         ??_TMR3_WriteTimer 0072  
                    ??_EXT_INT_Initialize 0075                                _OPTION_REG 0095  
           ?_TMR3_DefaultInterruptHandler 0070                            _display_data_1 00A0  
                          _display_data_2 005C                          ___lldiv@quotient 0030  
                         ___lwmod@divisor 0020                           _TMR0_Initialize 067A  
                         ___lwmod@counter 0074                          LCDSendData@value 0075  
          __end_of_PIN_MANAGER_Initialize 05EF                           _PIN_MANAGER_IOC 074F  
                         _TMR1_Initialize 0663  
